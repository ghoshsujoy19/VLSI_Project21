// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _KeyExpansion_HH_
#define _KeyExpansion_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeyExpansion_sbox_0.h"
#include "KeyExpansion_sbox_1.h"
#include "KeyExpansion_sbox_2.h"
#include "KeyExpansion_sbox_3.h"
#include "KeyExpansion_sbox_4.h"
#include "KeyExpansion_sbox_5.h"
#include "KeyExpansion_sbox_6.h"
#include "KeyExpansion_sbox_7.h"
#include "KeyExpansion_sbox_8.h"
#include "KeyExpansion_sbox_9.h"
#include "KeyExpansion_sboxbkb.h"
#include "KeyExpansion_sboxcud.h"
#include "KeyExpansion_sboxdEe.h"
#include "KeyExpansion_sboxeOg.h"
#include "KeyExpansion_sboxfYi.h"
#include "KeyExpansion_sboxg8j.h"
#include "KeyExpansion_Rcon.h"

namespace ap_rtl {

struct KeyExpansion : public sc_module {
    // Port declarations 102
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > RoundKey_0_address0;
    sc_out< sc_logic > RoundKey_0_ce0;
    sc_out< sc_logic > RoundKey_0_we0;
    sc_out< sc_lv<8> > RoundKey_0_d0;
    sc_in< sc_lv<8> > RoundKey_0_q0;
    sc_out< sc_lv<4> > RoundKey_1_address0;
    sc_out< sc_logic > RoundKey_1_ce0;
    sc_out< sc_logic > RoundKey_1_we0;
    sc_out< sc_lv<8> > RoundKey_1_d0;
    sc_in< sc_lv<8> > RoundKey_1_q0;
    sc_out< sc_lv<4> > RoundKey_2_address0;
    sc_out< sc_logic > RoundKey_2_ce0;
    sc_out< sc_logic > RoundKey_2_we0;
    sc_out< sc_lv<8> > RoundKey_2_d0;
    sc_in< sc_lv<8> > RoundKey_2_q0;
    sc_out< sc_lv<4> > RoundKey_3_address0;
    sc_out< sc_logic > RoundKey_3_ce0;
    sc_out< sc_logic > RoundKey_3_we0;
    sc_out< sc_lv<8> > RoundKey_3_d0;
    sc_in< sc_lv<8> > RoundKey_3_q0;
    sc_out< sc_lv<4> > RoundKey_4_address0;
    sc_out< sc_logic > RoundKey_4_ce0;
    sc_out< sc_logic > RoundKey_4_we0;
    sc_out< sc_lv<8> > RoundKey_4_d0;
    sc_in< sc_lv<8> > RoundKey_4_q0;
    sc_out< sc_lv<4> > RoundKey_5_address0;
    sc_out< sc_logic > RoundKey_5_ce0;
    sc_out< sc_logic > RoundKey_5_we0;
    sc_out< sc_lv<8> > RoundKey_5_d0;
    sc_in< sc_lv<8> > RoundKey_5_q0;
    sc_out< sc_lv<4> > RoundKey_6_address0;
    sc_out< sc_logic > RoundKey_6_ce0;
    sc_out< sc_logic > RoundKey_6_we0;
    sc_out< sc_lv<8> > RoundKey_6_d0;
    sc_in< sc_lv<8> > RoundKey_6_q0;
    sc_out< sc_lv<4> > RoundKey_7_address0;
    sc_out< sc_logic > RoundKey_7_ce0;
    sc_out< sc_logic > RoundKey_7_we0;
    sc_out< sc_lv<8> > RoundKey_7_d0;
    sc_in< sc_lv<8> > RoundKey_7_q0;
    sc_out< sc_lv<4> > RoundKey_8_address0;
    sc_out< sc_logic > RoundKey_8_ce0;
    sc_out< sc_logic > RoundKey_8_we0;
    sc_out< sc_lv<8> > RoundKey_8_d0;
    sc_in< sc_lv<8> > RoundKey_8_q0;
    sc_out< sc_lv<4> > RoundKey_9_address0;
    sc_out< sc_logic > RoundKey_9_ce0;
    sc_out< sc_logic > RoundKey_9_we0;
    sc_out< sc_lv<8> > RoundKey_9_d0;
    sc_in< sc_lv<8> > RoundKey_9_q0;
    sc_out< sc_lv<4> > RoundKey_10_address0;
    sc_out< sc_logic > RoundKey_10_ce0;
    sc_out< sc_logic > RoundKey_10_we0;
    sc_out< sc_lv<8> > RoundKey_10_d0;
    sc_in< sc_lv<8> > RoundKey_10_q0;
    sc_out< sc_lv<4> > RoundKey_11_address0;
    sc_out< sc_logic > RoundKey_11_ce0;
    sc_out< sc_logic > RoundKey_11_we0;
    sc_out< sc_lv<8> > RoundKey_11_d0;
    sc_in< sc_lv<8> > RoundKey_11_q0;
    sc_out< sc_lv<4> > RoundKey_12_address0;
    sc_out< sc_logic > RoundKey_12_ce0;
    sc_out< sc_logic > RoundKey_12_we0;
    sc_out< sc_lv<8> > RoundKey_12_d0;
    sc_in< sc_lv<8> > RoundKey_12_q0;
    sc_out< sc_lv<4> > RoundKey_13_address0;
    sc_out< sc_logic > RoundKey_13_ce0;
    sc_out< sc_logic > RoundKey_13_we0;
    sc_out< sc_lv<8> > RoundKey_13_d0;
    sc_in< sc_lv<8> > RoundKey_13_q0;
    sc_out< sc_lv<4> > RoundKey_14_address0;
    sc_out< sc_logic > RoundKey_14_ce0;
    sc_out< sc_logic > RoundKey_14_we0;
    sc_out< sc_lv<8> > RoundKey_14_d0;
    sc_in< sc_lv<8> > RoundKey_14_q0;
    sc_out< sc_lv<4> > RoundKey_15_address0;
    sc_out< sc_logic > RoundKey_15_ce0;
    sc_out< sc_logic > RoundKey_15_we0;
    sc_out< sc_lv<8> > RoundKey_15_d0;
    sc_in< sc_lv<8> > RoundKey_15_q0;
    sc_in< sc_lv<8> > Key_0;
    sc_in< sc_lv<8> > Key_1;
    sc_in< sc_lv<8> > Key_2;
    sc_in< sc_lv<8> > Key_3;
    sc_in< sc_lv<8> > Key_4;
    sc_in< sc_lv<8> > Key_5;
    sc_in< sc_lv<8> > Key_6;
    sc_in< sc_lv<8> > Key_7;
    sc_in< sc_lv<8> > Key_8;
    sc_in< sc_lv<8> > Key_9;
    sc_in< sc_lv<8> > Key_10;
    sc_in< sc_lv<8> > Key_11;
    sc_in< sc_lv<8> > Key_12;
    sc_in< sc_lv<8> > Key_13;
    sc_in< sc_lv<8> > Key_14;
    sc_in< sc_lv<8> > Key_15;


    // Module declarations
    KeyExpansion(sc_module_name name);
    SC_HAS_PROCESS(KeyExpansion);

    ~KeyExpansion();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    KeyExpansion_sbox_0* sbox_0_U;
    KeyExpansion_sbox_1* sbox_1_U;
    KeyExpansion_sbox_2* sbox_2_U;
    KeyExpansion_sbox_3* sbox_3_U;
    KeyExpansion_sbox_4* sbox_4_U;
    KeyExpansion_sbox_5* sbox_5_U;
    KeyExpansion_sbox_6* sbox_6_U;
    KeyExpansion_sbox_7* sbox_7_U;
    KeyExpansion_sbox_8* sbox_8_U;
    KeyExpansion_sbox_9* sbox_9_U;
    KeyExpansion_sboxbkb* sbox_10_U;
    KeyExpansion_sboxcud* sbox_11_U;
    KeyExpansion_sboxdEe* sbox_12_U;
    KeyExpansion_sboxeOg* sbox_13_U;
    KeyExpansion_sboxfYi* sbox_14_U;
    KeyExpansion_sboxg8j* sbox_15_U;
    KeyExpansion_Rcon* Rcon_U;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > sbox_0_address0;
    sc_signal< sc_logic > sbox_0_ce0;
    sc_signal< sc_lv<8> > sbox_0_q0;
    sc_signal< sc_lv<4> > sbox_1_address0;
    sc_signal< sc_logic > sbox_1_ce0;
    sc_signal< sc_lv<8> > sbox_1_q0;
    sc_signal< sc_lv<4> > sbox_2_address0;
    sc_signal< sc_logic > sbox_2_ce0;
    sc_signal< sc_lv<8> > sbox_2_q0;
    sc_signal< sc_lv<4> > sbox_3_address0;
    sc_signal< sc_logic > sbox_3_ce0;
    sc_signal< sc_lv<8> > sbox_3_q0;
    sc_signal< sc_lv<4> > sbox_4_address0;
    sc_signal< sc_logic > sbox_4_ce0;
    sc_signal< sc_lv<8> > sbox_4_q0;
    sc_signal< sc_lv<4> > sbox_5_address0;
    sc_signal< sc_logic > sbox_5_ce0;
    sc_signal< sc_lv<8> > sbox_5_q0;
    sc_signal< sc_lv<4> > sbox_6_address0;
    sc_signal< sc_logic > sbox_6_ce0;
    sc_signal< sc_lv<8> > sbox_6_q0;
    sc_signal< sc_lv<4> > sbox_7_address0;
    sc_signal< sc_logic > sbox_7_ce0;
    sc_signal< sc_lv<8> > sbox_7_q0;
    sc_signal< sc_lv<4> > sbox_8_address0;
    sc_signal< sc_logic > sbox_8_ce0;
    sc_signal< sc_lv<8> > sbox_8_q0;
    sc_signal< sc_lv<4> > sbox_9_address0;
    sc_signal< sc_logic > sbox_9_ce0;
    sc_signal< sc_lv<8> > sbox_9_q0;
    sc_signal< sc_lv<4> > sbox_10_address0;
    sc_signal< sc_logic > sbox_10_ce0;
    sc_signal< sc_lv<8> > sbox_10_q0;
    sc_signal< sc_lv<4> > sbox_11_address0;
    sc_signal< sc_logic > sbox_11_ce0;
    sc_signal< sc_lv<8> > sbox_11_q0;
    sc_signal< sc_lv<4> > sbox_12_address0;
    sc_signal< sc_logic > sbox_12_ce0;
    sc_signal< sc_lv<8> > sbox_12_q0;
    sc_signal< sc_lv<4> > sbox_13_address0;
    sc_signal< sc_logic > sbox_13_ce0;
    sc_signal< sc_lv<8> > sbox_13_q0;
    sc_signal< sc_lv<4> > sbox_14_address0;
    sc_signal< sc_logic > sbox_14_ce0;
    sc_signal< sc_lv<8> > sbox_14_q0;
    sc_signal< sc_lv<4> > sbox_15_address0;
    sc_signal< sc_logic > sbox_15_ce0;
    sc_signal< sc_lv<8> > sbox_15_q0;
    sc_signal< sc_lv<4> > Rcon_address0;
    sc_signal< sc_logic > Rcon_ce0;
    sc_signal< sc_lv<8> > Rcon_q0;
    sc_signal< sc_lv<8> > s_0_0_reg_1397;
    sc_signal< sc_lv<1> > icmp_ln170_fu_1621_p2;
    sc_signal< sc_lv<1> > icmp_ln170_reg_2219;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln170_reg_2219_pp0_iter1_reg;
    sc_signal< sc_lv<64> > zext_ln196_1_fu_1679_p1;
    sc_signal< sc_lv<64> > zext_ln196_1_reg_2233;
    sc_signal< sc_lv<64> > zext_ln196_1_reg_2233_pp0_iter1_reg;
    sc_signal< sc_lv<8> > RoundKey_12_load_reg_2288;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<8> > RoundKey_15_load_reg_2298;
    sc_signal< sc_lv<8> > Rcon_load_reg_2305;
    sc_signal< sc_lv<4> > trunc_ln199_fu_1831_p1;
    sc_signal< sc_lv<4> > trunc_ln199_reg_2310;
    sc_signal< sc_lv<8> > RoundKey_0_load_reg_2394;
    sc_signal< sc_lv<8> > RoundKey_3_load_reg_2404;
    sc_signal< sc_lv<8> > RoundKey_4_load_reg_2409;
    sc_signal< sc_lv<8> > RoundKey_7_load_reg_2419;
    sc_signal< sc_lv<8> > RoundKey_8_load_reg_2424;
    sc_signal< sc_lv<8> > RoundKey_11_load_reg_2434;
    sc_signal< sc_lv<8> > RoundKey_13_load_reg_2439;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<4> > trunc_ln196_fu_1949_p1;
    sc_signal< sc_lv<4> > trunc_ln196_reg_2449;
    sc_signal< sc_lv<8> > RoundKey_1_load_reg_2533;
    sc_signal< sc_lv<8> > RoundKey_5_load_reg_2543;
    sc_signal< sc_lv<8> > RoundKey_9_load_reg_2553;
    sc_signal< sc_lv<8> > RoundKey_14_load_reg_2563;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<4> > trunc_ln197_fu_2070_p1;
    sc_signal< sc_lv<4> > trunc_ln197_reg_2568;
    sc_signal< sc_lv<8> > RoundKey_2_load_reg_2652;
    sc_signal< sc_lv<8> > RoundKey_6_load_reg_2657;
    sc_signal< sc_lv<8> > RoundKey_10_load_reg_2662;
    sc_signal< sc_lv<8> > add_ln170_fu_2133_p2;
    sc_signal< sc_lv<8> > add_ln170_reg_2667;
    sc_signal< sc_lv<4> > trunc_ln198_fu_2139_p1;
    sc_signal< sc_lv<4> > trunc_ln198_reg_2672;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<8> > ap_phi_mux_s_0_0_phi_fu_1401_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<8> > ap_phi_mux_UnifiedRetVal_i149_phi_fu_1412_p32;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_UnifiedRetVal_i149_reg_1409;
    sc_signal< sc_lv<8> > ap_phi_mux_UnifiedRetVal_i_phi_fu_1465_p32;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_1462;
    sc_signal< sc_lv<8> > ap_phi_mux_UnifiedRetVal_i49_phi_fu_1518_p32;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_UnifiedRetVal_i49_reg_1515;
    sc_signal< sc_lv<8> > ap_phi_mux_UnifiedRetVal_i99_phi_fu_1571_p32;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_UnifiedRetVal_i99_reg_1568;
    sc_signal< sc_lv<64> > zext_ln175_fu_1643_p1;
    sc_signal< sc_lv<64> > zext_ln178_fu_1664_p1;
    sc_signal< sc_lv<64> > zext_ln213_fu_1700_p1;
    sc_signal< sc_lv<64> > zext_ln216_fu_1721_p1;
    sc_signal< sc_lv<64> > zext_ln213_1_fu_1742_p1;
    sc_signal< sc_lv<64> > zext_ln216_1_fu_1763_p1;
    sc_signal< sc_lv<64> > zext_ln213_2_fu_1784_p1;
    sc_signal< sc_lv<64> > zext_ln216_2_fu_1805_p1;
    sc_signal< sc_lv<64> > zext_ln176_fu_1826_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln199_fu_1845_p1;
    sc_signal< sc_lv<64> > zext_ln214_fu_1881_p1;
    sc_signal< sc_lv<64> > zext_ln214_1_fu_1902_p1;
    sc_signal< sc_lv<64> > zext_ln214_2_fu_1923_p1;
    sc_signal< sc_lv<64> > zext_ln177_fu_1944_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > zext_ln196_fu_1963_p1;
    sc_signal< sc_lv<64> > zext_ln215_fu_1999_p1;
    sc_signal< sc_lv<64> > zext_ln215_1_fu_2026_p1;
    sc_signal< sc_lv<64> > zext_ln215_2_fu_2053_p1;
    sc_signal< sc_lv<64> > zext_ln197_fu_2084_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<64> > zext_ln198_fu_2151_p1;
    sc_signal< sc_lv<8> > xor_ln213_fu_2109_p2;
    sc_signal< sc_lv<8> > xor_ln214_fu_2171_p2;
    sc_signal< sc_lv<8> > xor_ln215_fu_2195_p2;
    sc_signal< sc_lv<8> > xor_ln216_fu_2004_p2;
    sc_signal< sc_lv<8> > xor_ln213_1_fu_2115_p2;
    sc_signal< sc_lv<8> > xor_ln214_1_fu_2177_p2;
    sc_signal< sc_lv<8> > xor_ln215_1_fu_2201_p2;
    sc_signal< sc_lv<8> > xor_ln216_1_fu_2031_p2;
    sc_signal< sc_lv<8> > xor_ln213_2_fu_2121_p2;
    sc_signal< sc_lv<8> > xor_ln214_2_fu_2183_p2;
    sc_signal< sc_lv<8> > xor_ln215_2_fu_2207_p2;
    sc_signal< sc_lv<8> > xor_ln216_2_fu_2058_p2;
    sc_signal< sc_lv<8> > xor_ln213_3_fu_2127_p2;
    sc_signal< sc_lv<8> > xor_ln214_3_fu_2189_p2;
    sc_signal< sc_lv<8> > xor_ln215_3_fu_2213_p2;
    sc_signal< sc_lv<8> > xor_ln216_3_fu_2064_p2;
    sc_signal< sc_lv<8> > add_ln175_fu_1627_p2;
    sc_signal< sc_lv<4> > lshr_ln_fu_1633_p4;
    sc_signal< sc_lv<8> > add_ln178_fu_1648_p2;
    sc_signal< sc_lv<4> > lshr_ln3_fu_1654_p4;
    sc_signal< sc_lv<4> > lshr_ln196_1_fu_1669_p4;
    sc_signal< sc_lv<8> > add_ln213_fu_1684_p2;
    sc_signal< sc_lv<4> > lshr_ln8_fu_1690_p4;
    sc_signal< sc_lv<8> > add_ln216_fu_1705_p2;
    sc_signal< sc_lv<4> > lshr_ln11_fu_1711_p4;
    sc_signal< sc_lv<8> > add_ln213_1_fu_1726_p2;
    sc_signal< sc_lv<4> > lshr_ln213_1_fu_1732_p4;
    sc_signal< sc_lv<8> > add_ln216_1_fu_1747_p2;
    sc_signal< sc_lv<4> > lshr_ln216_1_fu_1753_p4;
    sc_signal< sc_lv<8> > add_ln213_2_fu_1768_p2;
    sc_signal< sc_lv<4> > lshr_ln213_2_fu_1774_p4;
    sc_signal< sc_lv<8> > add_ln216_2_fu_1789_p2;
    sc_signal< sc_lv<4> > lshr_ln216_2_fu_1795_p4;
    sc_signal< sc_lv<8> > add_ln176_fu_1810_p2;
    sc_signal< sc_lv<4> > lshr_ln1_fu_1816_p4;
    sc_signal< sc_lv<4> > lshr_ln7_fu_1835_p4;
    sc_signal< sc_lv<8> > add_ln214_fu_1865_p2;
    sc_signal< sc_lv<4> > lshr_ln9_fu_1871_p4;
    sc_signal< sc_lv<8> > add_ln214_1_fu_1886_p2;
    sc_signal< sc_lv<4> > lshr_ln214_1_fu_1892_p4;
    sc_signal< sc_lv<8> > add_ln214_2_fu_1907_p2;
    sc_signal< sc_lv<4> > lshr_ln214_2_fu_1913_p4;
    sc_signal< sc_lv<8> > add_ln177_fu_1928_p2;
    sc_signal< sc_lv<4> > lshr_ln2_fu_1934_p4;
    sc_signal< sc_lv<4> > lshr_ln4_fu_1953_p4;
    sc_signal< sc_lv<8> > add_ln215_fu_1983_p2;
    sc_signal< sc_lv<4> > lshr_ln10_fu_1989_p4;
    sc_signal< sc_lv<8> > add_ln215_1_fu_2010_p2;
    sc_signal< sc_lv<4> > lshr_ln215_1_fu_2016_p4;
    sc_signal< sc_lv<8> > add_ln215_2_fu_2037_p2;
    sc_signal< sc_lv<4> > lshr_ln215_2_fu_2043_p4;
    sc_signal< sc_lv<4> > lshr_ln5_fu_2074_p4;
    sc_signal< sc_lv<8> > xor_ln213_4_fu_2104_p2;
    sc_signal< sc_lv<4> > lshr_ln6_fu_2142_p4;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage2;
    static const sc_lv<6> ap_ST_fsm_pp0_stage3;
    static const sc_lv<6> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<8> ap_const_lv8_B0;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_F0;
    static const sc_lv<8> ap_const_lv8_F3;
    static const sc_lv<8> ap_const_lv8_F4;
    static const sc_lv<8> ap_const_lv8_F7;
    static const sc_lv<8> ap_const_lv8_F8;
    static const sc_lv<8> ap_const_lv8_FB;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<8> ap_const_lv8_F1;
    static const sc_lv<8> ap_const_lv8_F5;
    static const sc_lv<8> ap_const_lv8_F9;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_F2;
    static const sc_lv<8> ap_const_lv8_F6;
    static const sc_lv<8> ap_const_lv8_FA;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Rcon_address0();
    void thread_Rcon_ce0();
    void thread_RoundKey_0_address0();
    void thread_RoundKey_0_ce0();
    void thread_RoundKey_0_d0();
    void thread_RoundKey_0_we0();
    void thread_RoundKey_10_address0();
    void thread_RoundKey_10_ce0();
    void thread_RoundKey_10_d0();
    void thread_RoundKey_10_we0();
    void thread_RoundKey_11_address0();
    void thread_RoundKey_11_ce0();
    void thread_RoundKey_11_d0();
    void thread_RoundKey_11_we0();
    void thread_RoundKey_12_address0();
    void thread_RoundKey_12_ce0();
    void thread_RoundKey_12_d0();
    void thread_RoundKey_12_we0();
    void thread_RoundKey_13_address0();
    void thread_RoundKey_13_ce0();
    void thread_RoundKey_13_d0();
    void thread_RoundKey_13_we0();
    void thread_RoundKey_14_address0();
    void thread_RoundKey_14_ce0();
    void thread_RoundKey_14_d0();
    void thread_RoundKey_14_we0();
    void thread_RoundKey_15_address0();
    void thread_RoundKey_15_ce0();
    void thread_RoundKey_15_d0();
    void thread_RoundKey_15_we0();
    void thread_RoundKey_1_address0();
    void thread_RoundKey_1_ce0();
    void thread_RoundKey_1_d0();
    void thread_RoundKey_1_we0();
    void thread_RoundKey_2_address0();
    void thread_RoundKey_2_ce0();
    void thread_RoundKey_2_d0();
    void thread_RoundKey_2_we0();
    void thread_RoundKey_3_address0();
    void thread_RoundKey_3_ce0();
    void thread_RoundKey_3_d0();
    void thread_RoundKey_3_we0();
    void thread_RoundKey_4_address0();
    void thread_RoundKey_4_ce0();
    void thread_RoundKey_4_d0();
    void thread_RoundKey_4_we0();
    void thread_RoundKey_5_address0();
    void thread_RoundKey_5_ce0();
    void thread_RoundKey_5_d0();
    void thread_RoundKey_5_we0();
    void thread_RoundKey_6_address0();
    void thread_RoundKey_6_ce0();
    void thread_RoundKey_6_d0();
    void thread_RoundKey_6_we0();
    void thread_RoundKey_7_address0();
    void thread_RoundKey_7_ce0();
    void thread_RoundKey_7_d0();
    void thread_RoundKey_7_we0();
    void thread_RoundKey_8_address0();
    void thread_RoundKey_8_ce0();
    void thread_RoundKey_8_d0();
    void thread_RoundKey_8_we0();
    void thread_RoundKey_9_address0();
    void thread_RoundKey_9_ce0();
    void thread_RoundKey_9_d0();
    void thread_RoundKey_9_we0();
    void thread_add_ln170_fu_2133_p2();
    void thread_add_ln175_fu_1627_p2();
    void thread_add_ln176_fu_1810_p2();
    void thread_add_ln177_fu_1928_p2();
    void thread_add_ln178_fu_1648_p2();
    void thread_add_ln213_1_fu_1726_p2();
    void thread_add_ln213_2_fu_1768_p2();
    void thread_add_ln213_fu_1684_p2();
    void thread_add_ln214_1_fu_1886_p2();
    void thread_add_ln214_2_fu_1907_p2();
    void thread_add_ln214_fu_1865_p2();
    void thread_add_ln215_1_fu_2010_p2();
    void thread_add_ln215_2_fu_2037_p2();
    void thread_add_ln215_fu_1983_p2();
    void thread_add_ln216_1_fu_1747_p2();
    void thread_add_ln216_2_fu_1789_p2();
    void thread_add_ln216_fu_1705_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_block_state7_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_UnifiedRetVal_i149_phi_fu_1412_p32();
    void thread_ap_phi_mux_UnifiedRetVal_i49_phi_fu_1518_p32();
    void thread_ap_phi_mux_UnifiedRetVal_i99_phi_fu_1571_p32();
    void thread_ap_phi_mux_UnifiedRetVal_i_phi_fu_1465_p32();
    void thread_ap_phi_mux_s_0_0_phi_fu_1401_p4();
    void thread_ap_phi_reg_pp0_iter0_UnifiedRetVal_i149_reg_1409();
    void thread_ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_1462();
    void thread_ap_phi_reg_pp0_iter1_UnifiedRetVal_i49_reg_1515();
    void thread_ap_phi_reg_pp0_iter1_UnifiedRetVal_i99_reg_1568();
    void thread_ap_ready();
    void thread_icmp_ln170_fu_1621_p2();
    void thread_lshr_ln10_fu_1989_p4();
    void thread_lshr_ln11_fu_1711_p4();
    void thread_lshr_ln196_1_fu_1669_p4();
    void thread_lshr_ln1_fu_1816_p4();
    void thread_lshr_ln213_1_fu_1732_p4();
    void thread_lshr_ln213_2_fu_1774_p4();
    void thread_lshr_ln214_1_fu_1892_p4();
    void thread_lshr_ln214_2_fu_1913_p4();
    void thread_lshr_ln215_1_fu_2016_p4();
    void thread_lshr_ln215_2_fu_2043_p4();
    void thread_lshr_ln216_1_fu_1753_p4();
    void thread_lshr_ln216_2_fu_1795_p4();
    void thread_lshr_ln2_fu_1934_p4();
    void thread_lshr_ln3_fu_1654_p4();
    void thread_lshr_ln4_fu_1953_p4();
    void thread_lshr_ln5_fu_2074_p4();
    void thread_lshr_ln6_fu_2142_p4();
    void thread_lshr_ln7_fu_1835_p4();
    void thread_lshr_ln8_fu_1690_p4();
    void thread_lshr_ln9_fu_1871_p4();
    void thread_lshr_ln_fu_1633_p4();
    void thread_sbox_0_address0();
    void thread_sbox_0_ce0();
    void thread_sbox_10_address0();
    void thread_sbox_10_ce0();
    void thread_sbox_11_address0();
    void thread_sbox_11_ce0();
    void thread_sbox_12_address0();
    void thread_sbox_12_ce0();
    void thread_sbox_13_address0();
    void thread_sbox_13_ce0();
    void thread_sbox_14_address0();
    void thread_sbox_14_ce0();
    void thread_sbox_15_address0();
    void thread_sbox_15_ce0();
    void thread_sbox_1_address0();
    void thread_sbox_1_ce0();
    void thread_sbox_2_address0();
    void thread_sbox_2_ce0();
    void thread_sbox_3_address0();
    void thread_sbox_3_ce0();
    void thread_sbox_4_address0();
    void thread_sbox_4_ce0();
    void thread_sbox_5_address0();
    void thread_sbox_5_ce0();
    void thread_sbox_6_address0();
    void thread_sbox_6_ce0();
    void thread_sbox_7_address0();
    void thread_sbox_7_ce0();
    void thread_sbox_8_address0();
    void thread_sbox_8_ce0();
    void thread_sbox_9_address0();
    void thread_sbox_9_ce0();
    void thread_trunc_ln196_fu_1949_p1();
    void thread_trunc_ln197_fu_2070_p1();
    void thread_trunc_ln198_fu_2139_p1();
    void thread_trunc_ln199_fu_1831_p1();
    void thread_xor_ln213_1_fu_2115_p2();
    void thread_xor_ln213_2_fu_2121_p2();
    void thread_xor_ln213_3_fu_2127_p2();
    void thread_xor_ln213_4_fu_2104_p2();
    void thread_xor_ln213_fu_2109_p2();
    void thread_xor_ln214_1_fu_2177_p2();
    void thread_xor_ln214_2_fu_2183_p2();
    void thread_xor_ln214_3_fu_2189_p2();
    void thread_xor_ln214_fu_2171_p2();
    void thread_xor_ln215_1_fu_2201_p2();
    void thread_xor_ln215_2_fu_2207_p2();
    void thread_xor_ln215_3_fu_2213_p2();
    void thread_xor_ln215_fu_2195_p2();
    void thread_xor_ln216_1_fu_2031_p2();
    void thread_xor_ln216_2_fu_2058_p2();
    void thread_xor_ln216_3_fu_2064_p2();
    void thread_xor_ln216_fu_2004_p2();
    void thread_zext_ln175_fu_1643_p1();
    void thread_zext_ln176_fu_1826_p1();
    void thread_zext_ln177_fu_1944_p1();
    void thread_zext_ln178_fu_1664_p1();
    void thread_zext_ln196_1_fu_1679_p1();
    void thread_zext_ln196_fu_1963_p1();
    void thread_zext_ln197_fu_2084_p1();
    void thread_zext_ln198_fu_2151_p1();
    void thread_zext_ln199_fu_1845_p1();
    void thread_zext_ln213_1_fu_1742_p1();
    void thread_zext_ln213_2_fu_1784_p1();
    void thread_zext_ln213_fu_1700_p1();
    void thread_zext_ln214_1_fu_1902_p1();
    void thread_zext_ln214_2_fu_1923_p1();
    void thread_zext_ln214_fu_1881_p1();
    void thread_zext_ln215_1_fu_2026_p1();
    void thread_zext_ln215_2_fu_2053_p1();
    void thread_zext_ln215_fu_1999_p1();
    void thread_zext_ln216_1_fu_1763_p1();
    void thread_zext_ln216_2_fu_1805_p1();
    void thread_zext_ln216_fu_1721_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
