// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _KeyExpansion_HH_
#define _KeyExpansion_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeyExpansion_sbox_0.h"
#include "KeyExpansion_sbox_1.h"
#include "KeyExpansion_sbox_2.h"
#include "KeyExpansion_sbox_3.h"
#include "KeyExpansion_sbox_4.h"
#include "KeyExpansion_sbox_5.h"
#include "KeyExpansion_sbox_6.h"
#include "KeyExpansion_sbox_7.h"
#include "KeyExpansion_sbox_8.h"
#include "KeyExpansion_sbox_9.h"
#include "KeyExpansion_sboxbkb.h"
#include "KeyExpansion_sboxcud.h"
#include "KeyExpansion_sboxdEe.h"
#include "KeyExpansion_sboxeOg.h"
#include "KeyExpansion_sboxfYi.h"
#include "KeyExpansion_sboxg8j.h"
#include "KeyExpansion_Rcon.h"

namespace ap_rtl {

struct KeyExpansion : public sc_module {
    // Port declarations 102
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > RoundKey_0_address0;
    sc_out< sc_logic > RoundKey_0_ce0;
    sc_out< sc_logic > RoundKey_0_we0;
    sc_out< sc_lv<8> > RoundKey_0_d0;
    sc_in< sc_lv<8> > RoundKey_0_q0;
    sc_out< sc_lv<4> > RoundKey_1_address0;
    sc_out< sc_logic > RoundKey_1_ce0;
    sc_out< sc_logic > RoundKey_1_we0;
    sc_out< sc_lv<8> > RoundKey_1_d0;
    sc_in< sc_lv<8> > RoundKey_1_q0;
    sc_out< sc_lv<4> > RoundKey_2_address0;
    sc_out< sc_logic > RoundKey_2_ce0;
    sc_out< sc_logic > RoundKey_2_we0;
    sc_out< sc_lv<8> > RoundKey_2_d0;
    sc_in< sc_lv<8> > RoundKey_2_q0;
    sc_out< sc_lv<4> > RoundKey_3_address0;
    sc_out< sc_logic > RoundKey_3_ce0;
    sc_out< sc_logic > RoundKey_3_we0;
    sc_out< sc_lv<8> > RoundKey_3_d0;
    sc_in< sc_lv<8> > RoundKey_3_q0;
    sc_out< sc_lv<4> > RoundKey_4_address0;
    sc_out< sc_logic > RoundKey_4_ce0;
    sc_out< sc_logic > RoundKey_4_we0;
    sc_out< sc_lv<8> > RoundKey_4_d0;
    sc_in< sc_lv<8> > RoundKey_4_q0;
    sc_out< sc_lv<4> > RoundKey_5_address0;
    sc_out< sc_logic > RoundKey_5_ce0;
    sc_out< sc_logic > RoundKey_5_we0;
    sc_out< sc_lv<8> > RoundKey_5_d0;
    sc_in< sc_lv<8> > RoundKey_5_q0;
    sc_out< sc_lv<4> > RoundKey_6_address0;
    sc_out< sc_logic > RoundKey_6_ce0;
    sc_out< sc_logic > RoundKey_6_we0;
    sc_out< sc_lv<8> > RoundKey_6_d0;
    sc_in< sc_lv<8> > RoundKey_6_q0;
    sc_out< sc_lv<4> > RoundKey_7_address0;
    sc_out< sc_logic > RoundKey_7_ce0;
    sc_out< sc_logic > RoundKey_7_we0;
    sc_out< sc_lv<8> > RoundKey_7_d0;
    sc_in< sc_lv<8> > RoundKey_7_q0;
    sc_out< sc_lv<4> > RoundKey_8_address0;
    sc_out< sc_logic > RoundKey_8_ce0;
    sc_out< sc_logic > RoundKey_8_we0;
    sc_out< sc_lv<8> > RoundKey_8_d0;
    sc_in< sc_lv<8> > RoundKey_8_q0;
    sc_out< sc_lv<4> > RoundKey_9_address0;
    sc_out< sc_logic > RoundKey_9_ce0;
    sc_out< sc_logic > RoundKey_9_we0;
    sc_out< sc_lv<8> > RoundKey_9_d0;
    sc_in< sc_lv<8> > RoundKey_9_q0;
    sc_out< sc_lv<4> > RoundKey_10_address0;
    sc_out< sc_logic > RoundKey_10_ce0;
    sc_out< sc_logic > RoundKey_10_we0;
    sc_out< sc_lv<8> > RoundKey_10_d0;
    sc_in< sc_lv<8> > RoundKey_10_q0;
    sc_out< sc_lv<4> > RoundKey_11_address0;
    sc_out< sc_logic > RoundKey_11_ce0;
    sc_out< sc_logic > RoundKey_11_we0;
    sc_out< sc_lv<8> > RoundKey_11_d0;
    sc_in< sc_lv<8> > RoundKey_11_q0;
    sc_out< sc_lv<4> > RoundKey_12_address0;
    sc_out< sc_logic > RoundKey_12_ce0;
    sc_out< sc_logic > RoundKey_12_we0;
    sc_out< sc_lv<8> > RoundKey_12_d0;
    sc_in< sc_lv<8> > RoundKey_12_q0;
    sc_out< sc_lv<4> > RoundKey_13_address0;
    sc_out< sc_logic > RoundKey_13_ce0;
    sc_out< sc_logic > RoundKey_13_we0;
    sc_out< sc_lv<8> > RoundKey_13_d0;
    sc_in< sc_lv<8> > RoundKey_13_q0;
    sc_out< sc_lv<4> > RoundKey_14_address0;
    sc_out< sc_logic > RoundKey_14_ce0;
    sc_out< sc_logic > RoundKey_14_we0;
    sc_out< sc_lv<8> > RoundKey_14_d0;
    sc_in< sc_lv<8> > RoundKey_14_q0;
    sc_out< sc_lv<4> > RoundKey_15_address0;
    sc_out< sc_logic > RoundKey_15_ce0;
    sc_out< sc_logic > RoundKey_15_we0;
    sc_out< sc_lv<8> > RoundKey_15_d0;
    sc_in< sc_lv<8> > RoundKey_15_q0;
    sc_in< sc_lv<8> > Key_0_read;
    sc_in< sc_lv<8> > Key_1_read;
    sc_in< sc_lv<8> > Key_2_read;
    sc_in< sc_lv<8> > Key_3_read;
    sc_in< sc_lv<8> > Key_4_read;
    sc_in< sc_lv<8> > Key_5_read;
    sc_in< sc_lv<8> > Key_6_read;
    sc_in< sc_lv<8> > Key_7_read;
    sc_in< sc_lv<8> > Key_8_read;
    sc_in< sc_lv<8> > Key_9_read;
    sc_in< sc_lv<8> > Key_10_read;
    sc_in< sc_lv<8> > Key_11_read;
    sc_in< sc_lv<8> > Key_12_read;
    sc_in< sc_lv<8> > Key_13_read;
    sc_in< sc_lv<8> > Key_14_read;
    sc_in< sc_lv<8> > Key_15_read;


    // Module declarations
    KeyExpansion(sc_module_name name);
    SC_HAS_PROCESS(KeyExpansion);

    ~KeyExpansion();

    sc_trace_file* mVcdFile;

    KeyExpansion_sbox_0* sbox_0_U;
    KeyExpansion_sbox_1* sbox_1_U;
    KeyExpansion_sbox_2* sbox_2_U;
    KeyExpansion_sbox_3* sbox_3_U;
    KeyExpansion_sbox_4* sbox_4_U;
    KeyExpansion_sbox_5* sbox_5_U;
    KeyExpansion_sbox_6* sbox_6_U;
    KeyExpansion_sbox_7* sbox_7_U;
    KeyExpansion_sbox_8* sbox_8_U;
    KeyExpansion_sbox_9* sbox_9_U;
    KeyExpansion_sboxbkb* sbox_10_U;
    KeyExpansion_sboxcud* sbox_11_U;
    KeyExpansion_sboxdEe* sbox_12_U;
    KeyExpansion_sboxeOg* sbox_13_U;
    KeyExpansion_sboxfYi* sbox_14_U;
    KeyExpansion_sboxg8j* sbox_15_U;
    KeyExpansion_Rcon* Rcon_U;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > sbox_0_address0;
    sc_signal< sc_logic > sbox_0_ce0;
    sc_signal< sc_lv<8> > sbox_0_q0;
    sc_signal< sc_lv<4> > sbox_0_address1;
    sc_signal< sc_logic > sbox_0_ce1;
    sc_signal< sc_lv<8> > sbox_0_q1;
    sc_signal< sc_lv<4> > sbox_1_address0;
    sc_signal< sc_logic > sbox_1_ce0;
    sc_signal< sc_lv<8> > sbox_1_q0;
    sc_signal< sc_lv<4> > sbox_1_address1;
    sc_signal< sc_logic > sbox_1_ce1;
    sc_signal< sc_lv<8> > sbox_1_q1;
    sc_signal< sc_lv<4> > sbox_2_address0;
    sc_signal< sc_logic > sbox_2_ce0;
    sc_signal< sc_lv<8> > sbox_2_q0;
    sc_signal< sc_lv<4> > sbox_2_address1;
    sc_signal< sc_logic > sbox_2_ce1;
    sc_signal< sc_lv<8> > sbox_2_q1;
    sc_signal< sc_lv<4> > sbox_3_address0;
    sc_signal< sc_logic > sbox_3_ce0;
    sc_signal< sc_lv<8> > sbox_3_q0;
    sc_signal< sc_lv<4> > sbox_3_address1;
    sc_signal< sc_logic > sbox_3_ce1;
    sc_signal< sc_lv<8> > sbox_3_q1;
    sc_signal< sc_lv<4> > sbox_4_address0;
    sc_signal< sc_logic > sbox_4_ce0;
    sc_signal< sc_lv<8> > sbox_4_q0;
    sc_signal< sc_lv<4> > sbox_4_address1;
    sc_signal< sc_logic > sbox_4_ce1;
    sc_signal< sc_lv<8> > sbox_4_q1;
    sc_signal< sc_lv<4> > sbox_5_address0;
    sc_signal< sc_logic > sbox_5_ce0;
    sc_signal< sc_lv<8> > sbox_5_q0;
    sc_signal< sc_lv<4> > sbox_5_address1;
    sc_signal< sc_logic > sbox_5_ce1;
    sc_signal< sc_lv<8> > sbox_5_q1;
    sc_signal< sc_lv<4> > sbox_6_address0;
    sc_signal< sc_logic > sbox_6_ce0;
    sc_signal< sc_lv<8> > sbox_6_q0;
    sc_signal< sc_lv<4> > sbox_6_address1;
    sc_signal< sc_logic > sbox_6_ce1;
    sc_signal< sc_lv<8> > sbox_6_q1;
    sc_signal< sc_lv<4> > sbox_7_address0;
    sc_signal< sc_logic > sbox_7_ce0;
    sc_signal< sc_lv<8> > sbox_7_q0;
    sc_signal< sc_lv<4> > sbox_7_address1;
    sc_signal< sc_logic > sbox_7_ce1;
    sc_signal< sc_lv<8> > sbox_7_q1;
    sc_signal< sc_lv<4> > sbox_8_address0;
    sc_signal< sc_logic > sbox_8_ce0;
    sc_signal< sc_lv<8> > sbox_8_q0;
    sc_signal< sc_lv<4> > sbox_8_address1;
    sc_signal< sc_logic > sbox_8_ce1;
    sc_signal< sc_lv<8> > sbox_8_q1;
    sc_signal< sc_lv<4> > sbox_9_address0;
    sc_signal< sc_logic > sbox_9_ce0;
    sc_signal< sc_lv<8> > sbox_9_q0;
    sc_signal< sc_lv<4> > sbox_9_address1;
    sc_signal< sc_logic > sbox_9_ce1;
    sc_signal< sc_lv<8> > sbox_9_q1;
    sc_signal< sc_lv<4> > sbox_10_address0;
    sc_signal< sc_logic > sbox_10_ce0;
    sc_signal< sc_lv<8> > sbox_10_q0;
    sc_signal< sc_lv<4> > sbox_10_address1;
    sc_signal< sc_logic > sbox_10_ce1;
    sc_signal< sc_lv<8> > sbox_10_q1;
    sc_signal< sc_lv<4> > sbox_11_address0;
    sc_signal< sc_logic > sbox_11_ce0;
    sc_signal< sc_lv<8> > sbox_11_q0;
    sc_signal< sc_lv<4> > sbox_11_address1;
    sc_signal< sc_logic > sbox_11_ce1;
    sc_signal< sc_lv<8> > sbox_11_q1;
    sc_signal< sc_lv<4> > sbox_12_address0;
    sc_signal< sc_logic > sbox_12_ce0;
    sc_signal< sc_lv<8> > sbox_12_q0;
    sc_signal< sc_lv<4> > sbox_12_address1;
    sc_signal< sc_logic > sbox_12_ce1;
    sc_signal< sc_lv<8> > sbox_12_q1;
    sc_signal< sc_lv<4> > sbox_13_address0;
    sc_signal< sc_logic > sbox_13_ce0;
    sc_signal< sc_lv<8> > sbox_13_q0;
    sc_signal< sc_lv<4> > sbox_13_address1;
    sc_signal< sc_logic > sbox_13_ce1;
    sc_signal< sc_lv<8> > sbox_13_q1;
    sc_signal< sc_lv<4> > sbox_14_address0;
    sc_signal< sc_logic > sbox_14_ce0;
    sc_signal< sc_lv<8> > sbox_14_q0;
    sc_signal< sc_lv<4> > sbox_14_address1;
    sc_signal< sc_logic > sbox_14_ce1;
    sc_signal< sc_lv<8> > sbox_14_q1;
    sc_signal< sc_lv<4> > sbox_15_address0;
    sc_signal< sc_logic > sbox_15_ce0;
    sc_signal< sc_lv<8> > sbox_15_q0;
    sc_signal< sc_lv<4> > sbox_15_address1;
    sc_signal< sc_logic > sbox_15_ce1;
    sc_signal< sc_lv<8> > sbox_15_q1;
    sc_signal< sc_lv<4> > Rcon_address0;
    sc_signal< sc_logic > Rcon_ce0;
    sc_signal< sc_lv<8> > Rcon_q0;
    sc_signal< sc_lv<1> > icmp_ln175_fu_1716_p2;
    sc_signal< sc_lv<1> > icmp_ln175_reg_2344;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > trunc_ln185_fu_1722_p1;
    sc_signal< sc_lv<4> > trunc_ln185_reg_2348;
    sc_signal< sc_lv<64> > zext_ln185_1_fu_1766_p1;
    sc_signal< sc_lv<64> > zext_ln185_1_reg_2432;
    sc_signal< sc_lv<4> > trunc_ln186_fu_1771_p1;
    sc_signal< sc_lv<4> > trunc_ln186_reg_2457;
    sc_signal< sc_lv<4> > trunc_ln188_fu_1805_p1;
    sc_signal< sc_lv<4> > trunc_ln188_reg_2541;
    sc_signal< sc_lv<4> > lshr_ln3_reg_2545;
    sc_signal< sc_lv<4> > trunc_ln187_fu_2155_p1;
    sc_signal< sc_lv<4> > trunc_ln187_reg_2630;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > RoundKey_2_load_reg_2794;
    sc_signal< sc_lv<8> > RoundKey_3_load_reg_2799;
    sc_signal< sc_lv<8> > RoundKey_6_load_reg_2804;
    sc_signal< sc_lv<8> > RoundKey_7_load_reg_2809;
    sc_signal< sc_lv<8> > RoundKey_10_load_reg_2814;
    sc_signal< sc_lv<8> > RoundKey_11_load_reg_2819;
    sc_signal< sc_lv<8> > xor_ln201_3_fu_2256_p2;
    sc_signal< sc_lv<8> > xor_ln201_3_reg_2824;
    sc_signal< sc_lv<8> > xor_ln202_3_fu_2263_p2;
    sc_signal< sc_lv<8> > xor_ln202_3_reg_2829;
    sc_signal< sc_lv<8> > RoundKey_14_load_reg_2834;
    sc_signal< sc_lv<8> > RoundKey_15_load_reg_2839;
    sc_signal< sc_lv<8> > xor_ln203_3_fu_2306_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > xor_ln204_3_fu_2312_p2;
    sc_signal< sc_lv<8> > add_ln175_fu_2318_p2;
    sc_signal< sc_lv<8> > d_0_0_reg_1455;
    sc_signal< sc_lv<8> > c_0_0_reg_1465;
    sc_signal< sc_lv<8> > b_0_0_reg_1474;
    sc_signal< sc_lv<8> > e_0_reg_1483;
    sc_signal< sc_lv<8> > s_0_0_reg_1492;
    sc_signal< sc_lv<8> > ap_phi_mux_UnifiedRetVal_i_phi_fu_1507_p32;
    sc_signal< sc_lv<8> > ap_phi_mux_UnifiedRetVal_i49_phi_fu_1560_p32;
    sc_signal< sc_lv<8> > ap_phi_mux_UnifiedRetVal_i99_phi_fu_1613_p32;
    sc_signal< sc_lv<8> > ap_phi_mux_UnifiedRetVal_i149_phi_fu_1666_p32;
    sc_signal< sc_lv<64> > zext_ln185_fu_1736_p1;
    sc_signal< sc_lv<64> > zext_ln186_fu_1785_p1;
    sc_signal< sc_lv<64> > zext_ln201_fu_1835_p1;
    sc_signal< sc_lv<64> > zext_ln202_fu_1856_p1;
    sc_signal< sc_lv<64> > zext_ln203_fu_1877_p1;
    sc_signal< sc_lv<64> > zext_ln204_fu_1898_p1;
    sc_signal< sc_lv<64> > zext_ln201_1_fu_1919_p1;
    sc_signal< sc_lv<64> > zext_ln202_1_fu_1940_p1;
    sc_signal< sc_lv<64> > zext_ln203_1_fu_1961_p1;
    sc_signal< sc_lv<64> > zext_ln204_1_fu_1982_p1;
    sc_signal< sc_lv<64> > zext_ln201_2_fu_2003_p1;
    sc_signal< sc_lv<64> > zext_ln202_2_fu_2024_p1;
    sc_signal< sc_lv<64> > zext_ln203_2_fu_2045_p1;
    sc_signal< sc_lv<64> > zext_ln204_2_fu_2066_p1;
    sc_signal< sc_lv<64> > zext_ln201_3_fu_2087_p1;
    sc_signal< sc_lv<64> > zext_ln202_3_fu_2108_p1;
    sc_signal< sc_lv<64> > zext_ln203_3_fu_2129_p1;
    sc_signal< sc_lv<64> > zext_ln204_3_fu_2150_p1;
    sc_signal< sc_lv<64> > zext_ln187_fu_2169_p1;
    sc_signal< sc_lv<64> > zext_ln188_fu_2189_p1;
    sc_signal< sc_lv<8> > xor_ln201_fu_2214_p2;
    sc_signal< sc_lv<8> > xor_ln202_fu_2221_p2;
    sc_signal< sc_lv<8> > xor_ln203_fu_2270_p2;
    sc_signal< sc_lv<8> > xor_ln204_fu_2276_p2;
    sc_signal< sc_lv<8> > xor_ln201_1_fu_2228_p2;
    sc_signal< sc_lv<8> > xor_ln202_1_fu_2235_p2;
    sc_signal< sc_lv<8> > xor_ln203_1_fu_2282_p2;
    sc_signal< sc_lv<8> > xor_ln204_1_fu_2288_p2;
    sc_signal< sc_lv<8> > xor_ln201_2_fu_2242_p2;
    sc_signal< sc_lv<8> > xor_ln202_2_fu_2249_p2;
    sc_signal< sc_lv<8> > xor_ln203_2_fu_2294_p2;
    sc_signal< sc_lv<8> > xor_ln204_2_fu_2300_p2;
    sc_signal< sc_lv<4> > lshr_ln_fu_1726_p4;
    sc_signal< sc_lv<4> > lshr_ln185_1_fu_1756_p4;
    sc_signal< sc_lv<4> > lshr_ln1_fu_1775_p4;
    sc_signal< sc_lv<8> > add_ln201_fu_1819_p2;
    sc_signal< sc_lv<4> > lshr_ln4_fu_1825_p4;
    sc_signal< sc_lv<8> > add_ln202_fu_1840_p2;
    sc_signal< sc_lv<4> > lshr_ln5_fu_1846_p4;
    sc_signal< sc_lv<8> > add_ln203_fu_1861_p2;
    sc_signal< sc_lv<4> > lshr_ln6_fu_1867_p4;
    sc_signal< sc_lv<8> > add_ln204_fu_1882_p2;
    sc_signal< sc_lv<4> > lshr_ln7_fu_1888_p4;
    sc_signal< sc_lv<8> > add_ln201_1_fu_1903_p2;
    sc_signal< sc_lv<4> > lshr_ln201_1_fu_1909_p4;
    sc_signal< sc_lv<8> > add_ln202_1_fu_1924_p2;
    sc_signal< sc_lv<4> > lshr_ln202_1_fu_1930_p4;
    sc_signal< sc_lv<8> > add_ln203_1_fu_1945_p2;
    sc_signal< sc_lv<4> > lshr_ln203_1_fu_1951_p4;
    sc_signal< sc_lv<8> > add_ln204_1_fu_1966_p2;
    sc_signal< sc_lv<4> > lshr_ln204_1_fu_1972_p4;
    sc_signal< sc_lv<8> > add_ln201_2_fu_1987_p2;
    sc_signal< sc_lv<4> > lshr_ln201_2_fu_1993_p4;
    sc_signal< sc_lv<8> > add_ln202_2_fu_2008_p2;
    sc_signal< sc_lv<4> > lshr_ln202_2_fu_2014_p4;
    sc_signal< sc_lv<8> > add_ln203_2_fu_2029_p2;
    sc_signal< sc_lv<4> > lshr_ln203_2_fu_2035_p4;
    sc_signal< sc_lv<8> > add_ln204_2_fu_2050_p2;
    sc_signal< sc_lv<4> > lshr_ln204_2_fu_2056_p4;
    sc_signal< sc_lv<8> > add_ln201_3_fu_2071_p2;
    sc_signal< sc_lv<4> > lshr_ln201_3_fu_2077_p4;
    sc_signal< sc_lv<8> > add_ln202_3_fu_2092_p2;
    sc_signal< sc_lv<4> > lshr_ln202_3_fu_2098_p4;
    sc_signal< sc_lv<8> > add_ln203_3_fu_2113_p2;
    sc_signal< sc_lv<4> > lshr_ln203_3_fu_2119_p4;
    sc_signal< sc_lv<8> > add_ln204_3_fu_2134_p2;
    sc_signal< sc_lv<4> > lshr_ln204_3_fu_2140_p4;
    sc_signal< sc_lv<4> > lshr_ln2_fu_2159_p4;
    sc_signal< sc_lv<8> > xor_ln201_4_fu_2208_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<8> ap_const_lv8_B0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<8> ap_const_lv8_F0;
    static const sc_lv<8> ap_const_lv8_F1;
    static const sc_lv<8> ap_const_lv8_F2;
    static const sc_lv<8> ap_const_lv8_F3;
    static const sc_lv<8> ap_const_lv8_F4;
    static const sc_lv<8> ap_const_lv8_F5;
    static const sc_lv<8> ap_const_lv8_F6;
    static const sc_lv<8> ap_const_lv8_F7;
    static const sc_lv<8> ap_const_lv8_F8;
    static const sc_lv<8> ap_const_lv8_F9;
    static const sc_lv<8> ap_const_lv8_FA;
    static const sc_lv<8> ap_const_lv8_FB;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_FF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Rcon_address0();
    void thread_Rcon_ce0();
    void thread_RoundKey_0_address0();
    void thread_RoundKey_0_ce0();
    void thread_RoundKey_0_d0();
    void thread_RoundKey_0_we0();
    void thread_RoundKey_10_address0();
    void thread_RoundKey_10_ce0();
    void thread_RoundKey_10_d0();
    void thread_RoundKey_10_we0();
    void thread_RoundKey_11_address0();
    void thread_RoundKey_11_ce0();
    void thread_RoundKey_11_d0();
    void thread_RoundKey_11_we0();
    void thread_RoundKey_12_address0();
    void thread_RoundKey_12_ce0();
    void thread_RoundKey_12_d0();
    void thread_RoundKey_12_we0();
    void thread_RoundKey_13_address0();
    void thread_RoundKey_13_ce0();
    void thread_RoundKey_13_d0();
    void thread_RoundKey_13_we0();
    void thread_RoundKey_14_address0();
    void thread_RoundKey_14_ce0();
    void thread_RoundKey_14_d0();
    void thread_RoundKey_14_we0();
    void thread_RoundKey_15_address0();
    void thread_RoundKey_15_ce0();
    void thread_RoundKey_15_d0();
    void thread_RoundKey_15_we0();
    void thread_RoundKey_1_address0();
    void thread_RoundKey_1_ce0();
    void thread_RoundKey_1_d0();
    void thread_RoundKey_1_we0();
    void thread_RoundKey_2_address0();
    void thread_RoundKey_2_ce0();
    void thread_RoundKey_2_d0();
    void thread_RoundKey_2_we0();
    void thread_RoundKey_3_address0();
    void thread_RoundKey_3_ce0();
    void thread_RoundKey_3_d0();
    void thread_RoundKey_3_we0();
    void thread_RoundKey_4_address0();
    void thread_RoundKey_4_ce0();
    void thread_RoundKey_4_d0();
    void thread_RoundKey_4_we0();
    void thread_RoundKey_5_address0();
    void thread_RoundKey_5_ce0();
    void thread_RoundKey_5_d0();
    void thread_RoundKey_5_we0();
    void thread_RoundKey_6_address0();
    void thread_RoundKey_6_ce0();
    void thread_RoundKey_6_d0();
    void thread_RoundKey_6_we0();
    void thread_RoundKey_7_address0();
    void thread_RoundKey_7_ce0();
    void thread_RoundKey_7_d0();
    void thread_RoundKey_7_we0();
    void thread_RoundKey_8_address0();
    void thread_RoundKey_8_ce0();
    void thread_RoundKey_8_d0();
    void thread_RoundKey_8_we0();
    void thread_RoundKey_9_address0();
    void thread_RoundKey_9_ce0();
    void thread_RoundKey_9_d0();
    void thread_RoundKey_9_we0();
    void thread_add_ln175_fu_2318_p2();
    void thread_add_ln201_1_fu_1903_p2();
    void thread_add_ln201_2_fu_1987_p2();
    void thread_add_ln201_3_fu_2071_p2();
    void thread_add_ln201_fu_1819_p2();
    void thread_add_ln202_1_fu_1924_p2();
    void thread_add_ln202_2_fu_2008_p2();
    void thread_add_ln202_3_fu_2092_p2();
    void thread_add_ln202_fu_1840_p2();
    void thread_add_ln203_1_fu_1945_p2();
    void thread_add_ln203_2_fu_2029_p2();
    void thread_add_ln203_3_fu_2113_p2();
    void thread_add_ln203_fu_1861_p2();
    void thread_add_ln204_1_fu_1966_p2();
    void thread_add_ln204_2_fu_2050_p2();
    void thread_add_ln204_3_fu_2134_p2();
    void thread_add_ln204_fu_1882_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_UnifiedRetVal_i149_phi_fu_1666_p32();
    void thread_ap_phi_mux_UnifiedRetVal_i49_phi_fu_1560_p32();
    void thread_ap_phi_mux_UnifiedRetVal_i99_phi_fu_1613_p32();
    void thread_ap_phi_mux_UnifiedRetVal_i_phi_fu_1507_p32();
    void thread_ap_ready();
    void thread_icmp_ln175_fu_1716_p2();
    void thread_lshr_ln185_1_fu_1756_p4();
    void thread_lshr_ln1_fu_1775_p4();
    void thread_lshr_ln201_1_fu_1909_p4();
    void thread_lshr_ln201_2_fu_1993_p4();
    void thread_lshr_ln201_3_fu_2077_p4();
    void thread_lshr_ln202_1_fu_1930_p4();
    void thread_lshr_ln202_2_fu_2014_p4();
    void thread_lshr_ln202_3_fu_2098_p4();
    void thread_lshr_ln203_1_fu_1951_p4();
    void thread_lshr_ln203_2_fu_2035_p4();
    void thread_lshr_ln203_3_fu_2119_p4();
    void thread_lshr_ln204_1_fu_1972_p4();
    void thread_lshr_ln204_2_fu_2056_p4();
    void thread_lshr_ln204_3_fu_2140_p4();
    void thread_lshr_ln2_fu_2159_p4();
    void thread_lshr_ln4_fu_1825_p4();
    void thread_lshr_ln5_fu_1846_p4();
    void thread_lshr_ln6_fu_1867_p4();
    void thread_lshr_ln7_fu_1888_p4();
    void thread_lshr_ln_fu_1726_p4();
    void thread_sbox_0_address0();
    void thread_sbox_0_address1();
    void thread_sbox_0_ce0();
    void thread_sbox_0_ce1();
    void thread_sbox_10_address0();
    void thread_sbox_10_address1();
    void thread_sbox_10_ce0();
    void thread_sbox_10_ce1();
    void thread_sbox_11_address0();
    void thread_sbox_11_address1();
    void thread_sbox_11_ce0();
    void thread_sbox_11_ce1();
    void thread_sbox_12_address0();
    void thread_sbox_12_address1();
    void thread_sbox_12_ce0();
    void thread_sbox_12_ce1();
    void thread_sbox_13_address0();
    void thread_sbox_13_address1();
    void thread_sbox_13_ce0();
    void thread_sbox_13_ce1();
    void thread_sbox_14_address0();
    void thread_sbox_14_address1();
    void thread_sbox_14_ce0();
    void thread_sbox_14_ce1();
    void thread_sbox_15_address0();
    void thread_sbox_15_address1();
    void thread_sbox_15_ce0();
    void thread_sbox_15_ce1();
    void thread_sbox_1_address0();
    void thread_sbox_1_address1();
    void thread_sbox_1_ce0();
    void thread_sbox_1_ce1();
    void thread_sbox_2_address0();
    void thread_sbox_2_address1();
    void thread_sbox_2_ce0();
    void thread_sbox_2_ce1();
    void thread_sbox_3_address0();
    void thread_sbox_3_address1();
    void thread_sbox_3_ce0();
    void thread_sbox_3_ce1();
    void thread_sbox_4_address0();
    void thread_sbox_4_address1();
    void thread_sbox_4_ce0();
    void thread_sbox_4_ce1();
    void thread_sbox_5_address0();
    void thread_sbox_5_address1();
    void thread_sbox_5_ce0();
    void thread_sbox_5_ce1();
    void thread_sbox_6_address0();
    void thread_sbox_6_address1();
    void thread_sbox_6_ce0();
    void thread_sbox_6_ce1();
    void thread_sbox_7_address0();
    void thread_sbox_7_address1();
    void thread_sbox_7_ce0();
    void thread_sbox_7_ce1();
    void thread_sbox_8_address0();
    void thread_sbox_8_address1();
    void thread_sbox_8_ce0();
    void thread_sbox_8_ce1();
    void thread_sbox_9_address0();
    void thread_sbox_9_address1();
    void thread_sbox_9_ce0();
    void thread_sbox_9_ce1();
    void thread_trunc_ln185_fu_1722_p1();
    void thread_trunc_ln186_fu_1771_p1();
    void thread_trunc_ln187_fu_2155_p1();
    void thread_trunc_ln188_fu_1805_p1();
    void thread_xor_ln201_1_fu_2228_p2();
    void thread_xor_ln201_2_fu_2242_p2();
    void thread_xor_ln201_3_fu_2256_p2();
    void thread_xor_ln201_4_fu_2208_p2();
    void thread_xor_ln201_fu_2214_p2();
    void thread_xor_ln202_1_fu_2235_p2();
    void thread_xor_ln202_2_fu_2249_p2();
    void thread_xor_ln202_3_fu_2263_p2();
    void thread_xor_ln202_fu_2221_p2();
    void thread_xor_ln203_1_fu_2282_p2();
    void thread_xor_ln203_2_fu_2294_p2();
    void thread_xor_ln203_3_fu_2306_p2();
    void thread_xor_ln203_fu_2270_p2();
    void thread_xor_ln204_1_fu_2288_p2();
    void thread_xor_ln204_2_fu_2300_p2();
    void thread_xor_ln204_3_fu_2312_p2();
    void thread_xor_ln204_fu_2276_p2();
    void thread_zext_ln185_1_fu_1766_p1();
    void thread_zext_ln185_fu_1736_p1();
    void thread_zext_ln186_fu_1785_p1();
    void thread_zext_ln187_fu_2169_p1();
    void thread_zext_ln188_fu_2189_p1();
    void thread_zext_ln201_1_fu_1919_p1();
    void thread_zext_ln201_2_fu_2003_p1();
    void thread_zext_ln201_3_fu_2087_p1();
    void thread_zext_ln201_fu_1835_p1();
    void thread_zext_ln202_1_fu_1940_p1();
    void thread_zext_ln202_2_fu_2024_p1();
    void thread_zext_ln202_3_fu_2108_p1();
    void thread_zext_ln202_fu_1856_p1();
    void thread_zext_ln203_1_fu_1961_p1();
    void thread_zext_ln203_2_fu_2045_p1();
    void thread_zext_ln203_3_fu_2129_p1();
    void thread_zext_ln203_fu_1877_p1();
    void thread_zext_ln204_1_fu_1982_p1();
    void thread_zext_ln204_2_fu_2066_p1();
    void thread_zext_ln204_3_fu_2150_p1();
    void thread_zext_ln204_fu_1898_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
