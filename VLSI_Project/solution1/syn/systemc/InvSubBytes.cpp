// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "InvSubBytes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic InvSubBytes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic InvSubBytes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> InvSubBytes::ap_ST_fsm_state1 = "1";
const sc_lv<4> InvSubBytes::ap_ST_fsm_state2 = "10";
const sc_lv<4> InvSubBytes::ap_ST_fsm_state3 = "100";
const sc_lv<4> InvSubBytes::ap_ST_fsm_state4 = "1000";
const sc_lv<32> InvSubBytes::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> InvSubBytes::ap_const_lv32_1 = "1";
const sc_lv<1> InvSubBytes::ap_const_lv1_0 = "0";
const sc_lv<32> InvSubBytes::ap_const_lv32_2 = "10";
const sc_lv<3> InvSubBytes::ap_const_lv3_0 = "000";
const sc_lv<1> InvSubBytes::ap_const_lv1_1 = "1";
const sc_lv<32> InvSubBytes::ap_const_lv32_3 = "11";
const sc_lv<2> InvSubBytes::ap_const_lv2_3 = "11";
const sc_lv<2> InvSubBytes::ap_const_lv2_2 = "10";
const sc_lv<2> InvSubBytes::ap_const_lv2_1 = "1";
const sc_lv<2> InvSubBytes::ap_const_lv2_0 = "00";
const sc_lv<3> InvSubBytes::ap_const_lv3_4 = "100";
const sc_lv<3> InvSubBytes::ap_const_lv3_1 = "1";
const bool InvSubBytes::ap_const_boolean_1 = true;

InvSubBytes::InvSubBytes(sc_module_name name) : sc_module(name), mVcdFile(0) {
    rsbox_U = new InvSubBytes_rsbox("rsbox_U");
    rsbox_U->clk(ap_clk);
    rsbox_U->reset(ap_rst);
    rsbox_U->address0(rsbox_address0);
    rsbox_U->ce0(rsbox_ce0);
    rsbox_U->q0(rsbox_q0);
    InvCipher_mux_165bkb_U1 = new InvCipher_mux_165bkb<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,8>("InvCipher_mux_165bkb_U1");
    InvCipher_mux_165bkb_U1->din0(state_0_0_0_fu_124);
    InvCipher_mux_165bkb_U1->din1(state_0_1_0_fu_120);
    InvCipher_mux_165bkb_U1->din2(state_0_2_0_fu_116);
    InvCipher_mux_165bkb_U1->din3(state_0_3_0_fu_112);
    InvCipher_mux_165bkb_U1->din4(state_1_0_0_fu_108);
    InvCipher_mux_165bkb_U1->din5(state_1_1_0_fu_104);
    InvCipher_mux_165bkb_U1->din6(state_1_2_0_fu_100);
    InvCipher_mux_165bkb_U1->din7(state_1_3_0_fu_96);
    InvCipher_mux_165bkb_U1->din8(state_2_0_0_fu_92);
    InvCipher_mux_165bkb_U1->din9(state_2_1_0_fu_88);
    InvCipher_mux_165bkb_U1->din10(state_2_2_0_fu_84);
    InvCipher_mux_165bkb_U1->din11(state_2_3_0_fu_80);
    InvCipher_mux_165bkb_U1->din12(state_3_0_0_fu_76);
    InvCipher_mux_165bkb_U1->din13(state_3_1_0_fu_72);
    InvCipher_mux_165bkb_U1->din14(state_3_2_0_fu_68);
    InvCipher_mux_165bkb_U1->din15(state_3_3_0_fu_64);
    InvCipher_mux_165bkb_U1->din16(tmp_fu_526_p17);
    InvCipher_mux_165bkb_U1->dout(tmp_fu_526_p18);
    InvCipher_mux_42_cud_U2 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U2");
    InvCipher_mux_42_cud_U2->din0(state_2_3_0_load_1_reg_986);
    InvCipher_mux_42_cud_U2->din1(state_2_3_0_load_1_reg_986);
    InvCipher_mux_42_cud_U2->din2(state_2_3_0_load_1_reg_986);
    InvCipher_mux_42_cud_U2->din3(rsbox_q0);
    InvCipher_mux_42_cud_U2->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U2->dout(state_2_3_3_fu_569_p6);
    InvCipher_mux_42_cud_U3 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U3");
    InvCipher_mux_42_cud_U3->din0(state_2_2_0_load_1_reg_993);
    InvCipher_mux_42_cud_U3->din1(state_2_2_0_load_1_reg_993);
    InvCipher_mux_42_cud_U3->din2(rsbox_q0);
    InvCipher_mux_42_cud_U3->din3(state_2_2_0_load_1_reg_993);
    InvCipher_mux_42_cud_U3->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U3->dout(state_2_2_3_fu_579_p6);
    InvCipher_mux_42_cud_U4 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U4");
    InvCipher_mux_42_cud_U4->din0(state_2_1_0_load_1_reg_1000);
    InvCipher_mux_42_cud_U4->din1(rsbox_q0);
    InvCipher_mux_42_cud_U4->din2(state_2_1_0_load_1_reg_1000);
    InvCipher_mux_42_cud_U4->din3(state_2_1_0_load_1_reg_1000);
    InvCipher_mux_42_cud_U4->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U4->dout(state_2_1_3_fu_589_p6);
    InvCipher_mux_42_cud_U5 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U5");
    InvCipher_mux_42_cud_U5->din0(rsbox_q0);
    InvCipher_mux_42_cud_U5->din1(state_2_0_0_load_1_reg_1007);
    InvCipher_mux_42_cud_U5->din2(state_2_0_0_load_1_reg_1007);
    InvCipher_mux_42_cud_U5->din3(state_2_0_0_load_1_reg_1007);
    InvCipher_mux_42_cud_U5->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U5->dout(state_2_0_3_fu_599_p6);
    InvCipher_mux_42_cud_U6 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U6");
    InvCipher_mux_42_cud_U6->din0(state_1_3_0_load_1_reg_1014);
    InvCipher_mux_42_cud_U6->din1(state_1_3_0_load_1_reg_1014);
    InvCipher_mux_42_cud_U6->din2(state_1_3_0_load_1_reg_1014);
    InvCipher_mux_42_cud_U6->din3(rsbox_q0);
    InvCipher_mux_42_cud_U6->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U6->dout(state_1_3_3_fu_629_p6);
    InvCipher_mux_42_cud_U7 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U7");
    InvCipher_mux_42_cud_U7->din0(state_1_2_0_load_1_reg_1021);
    InvCipher_mux_42_cud_U7->din1(state_1_2_0_load_1_reg_1021);
    InvCipher_mux_42_cud_U7->din2(rsbox_q0);
    InvCipher_mux_42_cud_U7->din3(state_1_2_0_load_1_reg_1021);
    InvCipher_mux_42_cud_U7->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U7->dout(state_1_2_3_fu_639_p6);
    InvCipher_mux_42_cud_U8 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U8");
    InvCipher_mux_42_cud_U8->din0(state_1_1_0_load_1_reg_1028);
    InvCipher_mux_42_cud_U8->din1(rsbox_q0);
    InvCipher_mux_42_cud_U8->din2(state_1_1_0_load_1_reg_1028);
    InvCipher_mux_42_cud_U8->din3(state_1_1_0_load_1_reg_1028);
    InvCipher_mux_42_cud_U8->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U8->dout(state_1_1_3_fu_649_p6);
    InvCipher_mux_42_cud_U9 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U9");
    InvCipher_mux_42_cud_U9->din0(rsbox_q0);
    InvCipher_mux_42_cud_U9->din1(state_1_0_0_load_1_reg_1035);
    InvCipher_mux_42_cud_U9->din2(state_1_0_0_load_1_reg_1035);
    InvCipher_mux_42_cud_U9->din3(state_1_0_0_load_1_reg_1035);
    InvCipher_mux_42_cud_U9->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U9->dout(state_1_0_3_fu_659_p6);
    InvCipher_mux_42_cud_U10 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U10");
    InvCipher_mux_42_cud_U10->din0(state_0_3_0_load_1_reg_1042);
    InvCipher_mux_42_cud_U10->din1(state_0_3_0_load_1_reg_1042);
    InvCipher_mux_42_cud_U10->din2(state_0_3_0_load_1_reg_1042);
    InvCipher_mux_42_cud_U10->din3(rsbox_q0);
    InvCipher_mux_42_cud_U10->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U10->dout(state_0_3_3_fu_689_p6);
    InvCipher_mux_42_cud_U11 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U11");
    InvCipher_mux_42_cud_U11->din0(state_0_2_0_load_1_reg_1049);
    InvCipher_mux_42_cud_U11->din1(state_0_2_0_load_1_reg_1049);
    InvCipher_mux_42_cud_U11->din2(rsbox_q0);
    InvCipher_mux_42_cud_U11->din3(state_0_2_0_load_1_reg_1049);
    InvCipher_mux_42_cud_U11->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U11->dout(state_0_2_3_fu_699_p6);
    InvCipher_mux_42_cud_U12 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U12");
    InvCipher_mux_42_cud_U12->din0(state_0_1_0_load_1_reg_1056);
    InvCipher_mux_42_cud_U12->din1(rsbox_q0);
    InvCipher_mux_42_cud_U12->din2(state_0_1_0_load_1_reg_1056);
    InvCipher_mux_42_cud_U12->din3(state_0_1_0_load_1_reg_1056);
    InvCipher_mux_42_cud_U12->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U12->dout(state_0_1_3_fu_709_p6);
    InvCipher_mux_42_cud_U13 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U13");
    InvCipher_mux_42_cud_U13->din0(rsbox_q0);
    InvCipher_mux_42_cud_U13->din1(state_0_0_0_load_1_reg_1063);
    InvCipher_mux_42_cud_U13->din2(state_0_0_0_load_1_reg_1063);
    InvCipher_mux_42_cud_U13->din3(state_0_0_0_load_1_reg_1063);
    InvCipher_mux_42_cud_U13->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U13->dout(state_0_0_3_fu_719_p6);
    InvCipher_mux_42_cud_U14 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U14");
    InvCipher_mux_42_cud_U14->din0(state_3_3_0_load_1_reg_958);
    InvCipher_mux_42_cud_U14->din1(state_3_3_0_load_1_reg_958);
    InvCipher_mux_42_cud_U14->din2(state_3_3_0_load_1_reg_958);
    InvCipher_mux_42_cud_U14->din3(rsbox_q0);
    InvCipher_mux_42_cud_U14->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U14->dout(state_3_3_3_fu_749_p6);
    InvCipher_mux_42_cud_U15 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U15");
    InvCipher_mux_42_cud_U15->din0(state_3_2_0_load_1_reg_965);
    InvCipher_mux_42_cud_U15->din1(state_3_2_0_load_1_reg_965);
    InvCipher_mux_42_cud_U15->din2(rsbox_q0);
    InvCipher_mux_42_cud_U15->din3(state_3_2_0_load_1_reg_965);
    InvCipher_mux_42_cud_U15->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U15->dout(state_3_2_3_fu_759_p6);
    InvCipher_mux_42_cud_U16 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U16");
    InvCipher_mux_42_cud_U16->din0(state_3_1_0_load_1_reg_972);
    InvCipher_mux_42_cud_U16->din1(rsbox_q0);
    InvCipher_mux_42_cud_U16->din2(state_3_1_0_load_1_reg_972);
    InvCipher_mux_42_cud_U16->din3(state_3_1_0_load_1_reg_972);
    InvCipher_mux_42_cud_U16->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U16->dout(state_3_1_3_fu_769_p6);
    InvCipher_mux_42_cud_U17 = new InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>("InvCipher_mux_42_cud_U17");
    InvCipher_mux_42_cud_U17->din0(rsbox_q0);
    InvCipher_mux_42_cud_U17->din1(state_3_0_0_load_1_reg_979);
    InvCipher_mux_42_cud_U17->din2(state_3_0_0_load_1_reg_979);
    InvCipher_mux_42_cud_U17->din3(state_3_0_0_load_1_reg_979);
    InvCipher_mux_42_cud_U17->din4(trunc_ln390_reg_929);
    InvCipher_mux_42_cud_U17->dout(state_3_0_3_fu_779_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_0_0_0_fu_124 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_0_1_0_fu_120 );

    SC_METHOD(thread_ap_return_10);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_2_2_0_fu_84 );

    SC_METHOD(thread_ap_return_11);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_2_3_0_fu_80 );

    SC_METHOD(thread_ap_return_12);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_3_0_0_fu_76 );

    SC_METHOD(thread_ap_return_13);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_3_1_0_fu_72 );

    SC_METHOD(thread_ap_return_14);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_3_2_0_fu_68 );

    SC_METHOD(thread_ap_return_15);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_3_3_0_fu_64 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_0_2_0_fu_116 );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_0_3_0_fu_112 );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_1_0_0_fu_108 );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_1_1_0_fu_104 );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_1_2_0_fu_100 );

    SC_METHOD(thread_ap_return_7);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_1_3_0_fu_96 );

    SC_METHOD(thread_ap_return_8);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_2_0_0_fu_92 );

    SC_METHOD(thread_ap_return_9);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( state_2_1_0_fu_88 );

    SC_METHOD(thread_i_fu_393_p2);
    sensitive << ( i_0_reg_237 );

    SC_METHOD(thread_icmp_ln384_fu_387_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_237 );

    SC_METHOD(thread_icmp_ln387_fu_499_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_248 );

    SC_METHOD(thread_j_fu_505_p2);
    sensitive << ( j_0_reg_248 );

    SC_METHOD(thread_rsbox_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln390_1_fu_564_p1 );

    SC_METHOD(thread_rsbox_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_1_fu_515_p3);
    sensitive << ( trunc_ln390_reg_929 );
    sensitive << ( trunc_ln390_1_fu_511_p1 );

    SC_METHOD(thread_tmp_fu_526_p17);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_515_p3 );

    SC_METHOD(thread_trunc_ln390_1_fu_511_p1);
    sensitive << ( j_0_reg_248 );

    SC_METHOD(thread_trunc_ln390_fu_399_p1);
    sensitive << ( i_0_reg_237 );

    SC_METHOD(thread_zext_ln390_1_fu_564_p1);
    sensitive << ( tmp_fu_526_p18 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln384_fu_387_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln387_fu_499_p2 );

    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "InvSubBytes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, state_0_0_read, "(port)state_0_0_read");
    sc_trace(mVcdFile, state_0_1_read, "(port)state_0_1_read");
    sc_trace(mVcdFile, state_0_2_read, "(port)state_0_2_read");
    sc_trace(mVcdFile, state_0_3_read, "(port)state_0_3_read");
    sc_trace(mVcdFile, state_1_0_read, "(port)state_1_0_read");
    sc_trace(mVcdFile, state_1_1_read, "(port)state_1_1_read");
    sc_trace(mVcdFile, state_1_2_read, "(port)state_1_2_read");
    sc_trace(mVcdFile, state_1_3_read, "(port)state_1_3_read");
    sc_trace(mVcdFile, state_2_0_read, "(port)state_2_0_read");
    sc_trace(mVcdFile, state_2_1_read, "(port)state_2_1_read");
    sc_trace(mVcdFile, state_2_2_read, "(port)state_2_2_read");
    sc_trace(mVcdFile, state_2_3_read, "(port)state_2_3_read");
    sc_trace(mVcdFile, state_3_0_read, "(port)state_3_0_read");
    sc_trace(mVcdFile, state_3_1_read, "(port)state_3_1_read");
    sc_trace(mVcdFile, state_3_2_read, "(port)state_3_2_read");
    sc_trace(mVcdFile, state_3_3_read, "(port)state_3_3_read");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
    sc_trace(mVcdFile, ap_return_8, "(port)ap_return_8");
    sc_trace(mVcdFile, ap_return_9, "(port)ap_return_9");
    sc_trace(mVcdFile, ap_return_10, "(port)ap_return_10");
    sc_trace(mVcdFile, ap_return_11, "(port)ap_return_11");
    sc_trace(mVcdFile, ap_return_12, "(port)ap_return_12");
    sc_trace(mVcdFile, ap_return_13, "(port)ap_return_13");
    sc_trace(mVcdFile, ap_return_14, "(port)ap_return_14");
    sc_trace(mVcdFile, ap_return_15, "(port)ap_return_15");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, rsbox_address0, "rsbox_address0");
    sc_trace(mVcdFile, rsbox_ce0, "rsbox_ce0");
    sc_trace(mVcdFile, rsbox_q0, "rsbox_q0");
    sc_trace(mVcdFile, i_fu_393_p2, "i_fu_393_p2");
    sc_trace(mVcdFile, i_reg_924, "i_reg_924");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, trunc_ln390_fu_399_p1, "trunc_ln390_fu_399_p1");
    sc_trace(mVcdFile, trunc_ln390_reg_929, "trunc_ln390_reg_929");
    sc_trace(mVcdFile, icmp_ln384_fu_387_p2, "icmp_ln384_fu_387_p2");
    sc_trace(mVcdFile, j_fu_505_p2, "j_fu_505_p2");
    sc_trace(mVcdFile, j_reg_953, "j_reg_953");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, state_3_3_0_load_1_reg_958, "state_3_3_0_load_1_reg_958");
    sc_trace(mVcdFile, icmp_ln387_fu_499_p2, "icmp_ln387_fu_499_p2");
    sc_trace(mVcdFile, state_3_2_0_load_1_reg_965, "state_3_2_0_load_1_reg_965");
    sc_trace(mVcdFile, state_3_1_0_load_1_reg_972, "state_3_1_0_load_1_reg_972");
    sc_trace(mVcdFile, state_3_0_0_load_1_reg_979, "state_3_0_0_load_1_reg_979");
    sc_trace(mVcdFile, state_2_3_0_load_1_reg_986, "state_2_3_0_load_1_reg_986");
    sc_trace(mVcdFile, state_2_2_0_load_1_reg_993, "state_2_2_0_load_1_reg_993");
    sc_trace(mVcdFile, state_2_1_0_load_1_reg_1000, "state_2_1_0_load_1_reg_1000");
    sc_trace(mVcdFile, state_2_0_0_load_1_reg_1007, "state_2_0_0_load_1_reg_1007");
    sc_trace(mVcdFile, state_1_3_0_load_1_reg_1014, "state_1_3_0_load_1_reg_1014");
    sc_trace(mVcdFile, state_1_2_0_load_1_reg_1021, "state_1_2_0_load_1_reg_1021");
    sc_trace(mVcdFile, state_1_1_0_load_1_reg_1028, "state_1_1_0_load_1_reg_1028");
    sc_trace(mVcdFile, state_1_0_0_load_1_reg_1035, "state_1_0_0_load_1_reg_1035");
    sc_trace(mVcdFile, state_0_3_0_load_1_reg_1042, "state_0_3_0_load_1_reg_1042");
    sc_trace(mVcdFile, state_0_2_0_load_1_reg_1049, "state_0_2_0_load_1_reg_1049");
    sc_trace(mVcdFile, state_0_1_0_load_1_reg_1056, "state_0_1_0_load_1_reg_1056");
    sc_trace(mVcdFile, state_0_0_0_load_1_reg_1063, "state_0_0_0_load_1_reg_1063");
    sc_trace(mVcdFile, trunc_ln390_1_fu_511_p1, "trunc_ln390_1_fu_511_p1");
    sc_trace(mVcdFile, trunc_ln390_1_reg_1070, "trunc_ln390_1_reg_1070");
    sc_trace(mVcdFile, i_0_reg_237, "i_0_reg_237");
    sc_trace(mVcdFile, j_0_reg_248, "j_0_reg_248");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln390_1_fu_564_p1, "zext_ln390_1_fu_564_p1");
    sc_trace(mVcdFile, state_3_3_0_fu_64, "state_3_3_0_fu_64");
    sc_trace(mVcdFile, state_3_3_3_fu_749_p6, "state_3_3_3_fu_749_p6");
    sc_trace(mVcdFile, state_3_2_0_fu_68, "state_3_2_0_fu_68");
    sc_trace(mVcdFile, state_3_2_3_fu_759_p6, "state_3_2_3_fu_759_p6");
    sc_trace(mVcdFile, state_3_1_0_fu_72, "state_3_1_0_fu_72");
    sc_trace(mVcdFile, state_3_1_3_fu_769_p6, "state_3_1_3_fu_769_p6");
    sc_trace(mVcdFile, state_3_0_0_fu_76, "state_3_0_0_fu_76");
    sc_trace(mVcdFile, state_3_0_3_fu_779_p6, "state_3_0_3_fu_779_p6");
    sc_trace(mVcdFile, state_2_3_0_fu_80, "state_2_3_0_fu_80");
    sc_trace(mVcdFile, state_2_3_3_fu_569_p6, "state_2_3_3_fu_569_p6");
    sc_trace(mVcdFile, state_2_2_0_fu_84, "state_2_2_0_fu_84");
    sc_trace(mVcdFile, state_2_2_3_fu_579_p6, "state_2_2_3_fu_579_p6");
    sc_trace(mVcdFile, state_2_1_0_fu_88, "state_2_1_0_fu_88");
    sc_trace(mVcdFile, state_2_1_3_fu_589_p6, "state_2_1_3_fu_589_p6");
    sc_trace(mVcdFile, state_2_0_0_fu_92, "state_2_0_0_fu_92");
    sc_trace(mVcdFile, state_2_0_3_fu_599_p6, "state_2_0_3_fu_599_p6");
    sc_trace(mVcdFile, state_1_3_0_fu_96, "state_1_3_0_fu_96");
    sc_trace(mVcdFile, state_1_3_3_fu_629_p6, "state_1_3_3_fu_629_p6");
    sc_trace(mVcdFile, state_1_2_0_fu_100, "state_1_2_0_fu_100");
    sc_trace(mVcdFile, state_1_2_3_fu_639_p6, "state_1_2_3_fu_639_p6");
    sc_trace(mVcdFile, state_1_1_0_fu_104, "state_1_1_0_fu_104");
    sc_trace(mVcdFile, state_1_1_3_fu_649_p6, "state_1_1_3_fu_649_p6");
    sc_trace(mVcdFile, state_1_0_0_fu_108, "state_1_0_0_fu_108");
    sc_trace(mVcdFile, state_1_0_3_fu_659_p6, "state_1_0_3_fu_659_p6");
    sc_trace(mVcdFile, state_0_3_0_fu_112, "state_0_3_0_fu_112");
    sc_trace(mVcdFile, state_0_3_3_fu_689_p6, "state_0_3_3_fu_689_p6");
    sc_trace(mVcdFile, state_0_2_0_fu_116, "state_0_2_0_fu_116");
    sc_trace(mVcdFile, state_0_2_3_fu_699_p6, "state_0_2_3_fu_699_p6");
    sc_trace(mVcdFile, state_0_1_0_fu_120, "state_0_1_0_fu_120");
    sc_trace(mVcdFile, state_0_1_3_fu_709_p6, "state_0_1_3_fu_709_p6");
    sc_trace(mVcdFile, state_0_0_0_fu_124, "state_0_0_0_fu_124");
    sc_trace(mVcdFile, state_0_0_3_fu_719_p6, "state_0_0_3_fu_719_p6");
    sc_trace(mVcdFile, tmp_1_fu_515_p3, "tmp_1_fu_515_p3");
    sc_trace(mVcdFile, tmp_fu_526_p17, "tmp_fu_526_p17");
    sc_trace(mVcdFile, tmp_fu_526_p18, "tmp_fu_526_p18");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

InvSubBytes::~InvSubBytes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete rsbox_U;
    delete InvCipher_mux_165bkb_U1;
    delete InvCipher_mux_42_cud_U2;
    delete InvCipher_mux_42_cud_U3;
    delete InvCipher_mux_42_cud_U4;
    delete InvCipher_mux_42_cud_U5;
    delete InvCipher_mux_42_cud_U6;
    delete InvCipher_mux_42_cud_U7;
    delete InvCipher_mux_42_cud_U8;
    delete InvCipher_mux_42_cud_U9;
    delete InvCipher_mux_42_cud_U10;
    delete InvCipher_mux_42_cud_U11;
    delete InvCipher_mux_42_cud_U12;
    delete InvCipher_mux_42_cud_U13;
    delete InvCipher_mux_42_cud_U14;
    delete InvCipher_mux_42_cud_U15;
    delete InvCipher_mux_42_cud_U16;
    delete InvCipher_mux_42_cud_U17;
}

void InvSubBytes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln387_fu_499_p2.read(), ap_const_lv1_1))) {
        i_0_reg_237 = i_reg_924.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_237 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_reg_248 = j_reg_953.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln384_fu_387_p2.read(), ap_const_lv1_0))) {
        j_0_reg_248 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_0))) {
        state_0_0_0_fu_124 = state_0_0_3_fu_719_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_0_0_0_fu_124 = state_0_0_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_0))) {
        state_0_1_0_fu_120 = state_0_1_3_fu_709_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_0_1_0_fu_120 = state_0_1_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_0))) {
        state_0_2_0_fu_116 = state_0_2_3_fu_699_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_0_2_0_fu_116 = state_0_2_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_0))) {
        state_0_3_0_fu_112 = state_0_3_3_fu_689_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_0_3_0_fu_112 = state_0_3_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_1))) {
        state_1_0_0_fu_108 = state_1_0_3_fu_659_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_1_0_0_fu_108 = state_1_0_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_1))) {
        state_1_1_0_fu_104 = state_1_1_3_fu_649_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_1_1_0_fu_104 = state_1_1_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_1))) {
        state_1_2_0_fu_100 = state_1_2_3_fu_639_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_1_2_0_fu_100 = state_1_2_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_1))) {
        state_1_3_0_fu_96 = state_1_3_3_fu_629_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_1_3_0_fu_96 = state_1_3_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_2))) {
        state_2_0_0_fu_92 = state_2_0_3_fu_599_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_2_0_0_fu_92 = state_2_0_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_2))) {
        state_2_1_0_fu_88 = state_2_1_3_fu_589_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_2_1_0_fu_88 = state_2_1_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_2))) {
        state_2_2_0_fu_84 = state_2_2_3_fu_579_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_2_2_0_fu_84 = state_2_2_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_2))) {
        state_2_3_0_fu_80 = state_2_3_3_fu_569_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_2_3_0_fu_80 = state_2_3_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_3))) {
        state_3_0_0_fu_76 = state_3_0_3_fu_779_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_3_0_0_fu_76 = state_3_0_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_3))) {
        state_3_1_0_fu_72 = state_3_1_3_fu_769_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_3_1_0_fu_72 = state_3_1_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_3))) {
        state_3_2_0_fu_68 = state_3_2_3_fu_759_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_3_2_0_fu_68 = state_3_2_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(trunc_ln390_1_reg_1070.read(), ap_const_lv2_3))) {
        state_3_3_0_fu_64 = state_3_3_3_fu_749_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_3_3_0_fu_64 = state_3_3_read.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_924 = i_fu_393_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_953 = j_fu_505_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln387_fu_499_p2.read()))) {
        state_0_0_0_load_1_reg_1063 = state_0_0_0_fu_124.read();
        state_0_1_0_load_1_reg_1056 = state_0_1_0_fu_120.read();
        state_0_2_0_load_1_reg_1049 = state_0_2_0_fu_116.read();
        state_0_3_0_load_1_reg_1042 = state_0_3_0_fu_112.read();
        state_1_0_0_load_1_reg_1035 = state_1_0_0_fu_108.read();
        state_1_1_0_load_1_reg_1028 = state_1_1_0_fu_104.read();
        state_1_2_0_load_1_reg_1021 = state_1_2_0_fu_100.read();
        state_1_3_0_load_1_reg_1014 = state_1_3_0_fu_96.read();
        state_2_0_0_load_1_reg_1007 = state_2_0_0_fu_92.read();
        state_2_1_0_load_1_reg_1000 = state_2_1_0_fu_88.read();
        state_2_2_0_load_1_reg_993 = state_2_2_0_fu_84.read();
        state_2_3_0_load_1_reg_986 = state_2_3_0_fu_80.read();
        state_3_0_0_load_1_reg_979 = state_3_0_0_fu_76.read();
        state_3_1_0_load_1_reg_972 = state_3_1_0_fu_72.read();
        state_3_2_0_load_1_reg_965 = state_3_2_0_fu_68.read();
        state_3_3_0_load_1_reg_958 = state_3_3_0_fu_64.read();
        trunc_ln390_1_reg_1070 = trunc_ln390_1_fu_511_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln384_fu_387_p2.read(), ap_const_lv1_0))) {
        trunc_ln390_reg_929 = trunc_ln390_fu_399_p1.read();
    }
}

void InvSubBytes::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void InvSubBytes::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void InvSubBytes::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void InvSubBytes::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void InvSubBytes::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln384_fu_387_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void InvSubBytes::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void InvSubBytes::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln384_fu_387_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void InvSubBytes::thread_ap_return_0() {
    ap_return_0 = state_0_0_0_fu_124.read();
}

void InvSubBytes::thread_ap_return_1() {
    ap_return_1 = state_0_1_0_fu_120.read();
}

void InvSubBytes::thread_ap_return_10() {
    ap_return_10 = state_2_2_0_fu_84.read();
}

void InvSubBytes::thread_ap_return_11() {
    ap_return_11 = state_2_3_0_fu_80.read();
}

void InvSubBytes::thread_ap_return_12() {
    ap_return_12 = state_3_0_0_fu_76.read();
}

void InvSubBytes::thread_ap_return_13() {
    ap_return_13 = state_3_1_0_fu_72.read();
}

void InvSubBytes::thread_ap_return_14() {
    ap_return_14 = state_3_2_0_fu_68.read();
}

void InvSubBytes::thread_ap_return_15() {
    ap_return_15 = state_3_3_0_fu_64.read();
}

void InvSubBytes::thread_ap_return_2() {
    ap_return_2 = state_0_2_0_fu_116.read();
}

void InvSubBytes::thread_ap_return_3() {
    ap_return_3 = state_0_3_0_fu_112.read();
}

void InvSubBytes::thread_ap_return_4() {
    ap_return_4 = state_1_0_0_fu_108.read();
}

void InvSubBytes::thread_ap_return_5() {
    ap_return_5 = state_1_1_0_fu_104.read();
}

void InvSubBytes::thread_ap_return_6() {
    ap_return_6 = state_1_2_0_fu_100.read();
}

void InvSubBytes::thread_ap_return_7() {
    ap_return_7 = state_1_3_0_fu_96.read();
}

void InvSubBytes::thread_ap_return_8() {
    ap_return_8 = state_2_0_0_fu_92.read();
}

void InvSubBytes::thread_ap_return_9() {
    ap_return_9 = state_2_1_0_fu_88.read();
}

void InvSubBytes::thread_i_fu_393_p2() {
    i_fu_393_p2 = (!i_0_reg_237.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_237.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void InvSubBytes::thread_icmp_ln384_fu_387_p2() {
    icmp_ln384_fu_387_p2 = (!i_0_reg_237.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_237.read() == ap_const_lv3_4);
}

void InvSubBytes::thread_icmp_ln387_fu_499_p2() {
    icmp_ln387_fu_499_p2 = (!j_0_reg_248.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_248.read() == ap_const_lv3_4);
}

void InvSubBytes::thread_j_fu_505_p2() {
    j_fu_505_p2 = (!j_0_reg_248.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_reg_248.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void InvSubBytes::thread_rsbox_address0() {
    rsbox_address0 =  (sc_lv<8>) (zext_ln390_1_fu_564_p1.read());
}

void InvSubBytes::thread_rsbox_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        rsbox_ce0 = ap_const_logic_1;
    } else {
        rsbox_ce0 = ap_const_logic_0;
    }
}

void InvSubBytes::thread_tmp_1_fu_515_p3() {
    tmp_1_fu_515_p3 = esl_concat<2,2>(trunc_ln390_1_fu_511_p1.read(), trunc_ln390_reg_929.read());
}

void InvSubBytes::thread_tmp_fu_526_p17() {
    tmp_fu_526_p17 = esl_zext<5,4>(tmp_1_fu_515_p3.read());
}

void InvSubBytes::thread_trunc_ln390_1_fu_511_p1() {
    trunc_ln390_1_fu_511_p1 = j_0_reg_248.read().range(2-1, 0);
}

void InvSubBytes::thread_trunc_ln390_fu_399_p1() {
    trunc_ln390_fu_399_p1 = i_0_reg_237.read().range(2-1, 0);
}

void InvSubBytes::thread_zext_ln390_1_fu_564_p1() {
    zext_ln390_1_fu_564_p1 = esl_zext<64,8>(tmp_fu_526_p18.read());
}

void InvSubBytes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln384_fu_387_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln387_fu_499_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

