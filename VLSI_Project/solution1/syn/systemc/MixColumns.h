// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _MixColumns_HH_
#define _MixColumns_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct MixColumns : public sc_module {
    // Port declarations 33
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > state_0_0_read;
    sc_in< sc_lv<8> > state_0_1_read;
    sc_in< sc_lv<8> > state_0_2_read;
    sc_in< sc_lv<8> > state_0_3_read;
    sc_in< sc_lv<8> > state_1_0_read;
    sc_in< sc_lv<8> > state_1_1_read;
    sc_in< sc_lv<8> > state_1_2_read;
    sc_in< sc_lv<8> > state_1_3_read;
    sc_in< sc_lv<8> > state_2_0_read;
    sc_in< sc_lv<8> > state_2_1_read;
    sc_in< sc_lv<8> > state_2_2_read;
    sc_in< sc_lv<8> > state_2_3_read;
    sc_in< sc_lv<8> > state_3_0_read;
    sc_in< sc_lv<8> > state_3_1_read;
    sc_in< sc_lv<8> > state_3_2_read;
    sc_in< sc_lv<8> > state_3_3_read;
    sc_out< sc_lv<8> > ap_return_0;
    sc_out< sc_lv<8> > ap_return_1;
    sc_out< sc_lv<8> > ap_return_2;
    sc_out< sc_lv<8> > ap_return_3;
    sc_out< sc_lv<8> > ap_return_4;
    sc_out< sc_lv<8> > ap_return_5;
    sc_out< sc_lv<8> > ap_return_6;
    sc_out< sc_lv<8> > ap_return_7;
    sc_out< sc_lv<8> > ap_return_8;
    sc_out< sc_lv<8> > ap_return_9;
    sc_out< sc_lv<8> > ap_return_10;
    sc_out< sc_lv<8> > ap_return_11;
    sc_out< sc_lv<8> > ap_return_12;
    sc_out< sc_lv<8> > ap_return_13;
    sc_out< sc_lv<8> > ap_return_14;
    sc_out< sc_lv<8> > ap_return_15;


    // Module declarations
    MixColumns(sc_module_name name);
    SC_HAS_PROCESS(MixColumns);

    ~MixColumns();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > xor_ln323_fu_142_p2;
    sc_signal< sc_lv<1> > tmp_fu_172_p3;
    sc_signal< sc_lv<8> > select_ln309_fu_180_p3;
    sc_signal< sc_lv<8> > shl_ln309_fu_166_p2;
    sc_signal< sc_lv<8> > Tm_2_fu_154_p2;
    sc_signal< sc_lv<8> > xor_ln329_1_fu_194_p2;
    sc_signal< sc_lv<8> > xor_ln329_fu_188_p2;
    sc_signal< sc_lv<8> > Tm_1_fu_148_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_212_p3;
    sc_signal< sc_lv<8> > select_ln309_1_fu_220_p3;
    sc_signal< sc_lv<8> > shl_ln309_1_fu_206_p2;
    sc_signal< sc_lv<8> > xor_ln330_1_fu_234_p2;
    sc_signal< sc_lv<8> > xor_ln330_fu_228_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_252_p3;
    sc_signal< sc_lv<8> > select_ln309_2_fu_260_p3;
    sc_signal< sc_lv<8> > shl_ln309_2_fu_246_p2;
    sc_signal< sc_lv<8> > xor_ln331_1_fu_274_p2;
    sc_signal< sc_lv<8> > xor_ln331_fu_268_p2;
    sc_signal< sc_lv<8> > Tm_3_fu_160_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_292_p3;
    sc_signal< sc_lv<8> > select_ln309_3_fu_300_p3;
    sc_signal< sc_lv<8> > shl_ln309_3_fu_286_p2;
    sc_signal< sc_lv<8> > xor_ln332_1_fu_314_p2;
    sc_signal< sc_lv<8> > xor_ln332_fu_308_p2;
    sc_signal< sc_lv<8> > xor_ln323_1_fu_326_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_356_p3;
    sc_signal< sc_lv<8> > select_ln309_4_fu_364_p3;
    sc_signal< sc_lv<8> > shl_ln309_4_fu_350_p2;
    sc_signal< sc_lv<8> > Tm_2_1_fu_338_p2;
    sc_signal< sc_lv<8> > xor_ln329_4_fu_378_p2;
    sc_signal< sc_lv<8> > xor_ln329_3_fu_372_p2;
    sc_signal< sc_lv<8> > Tm_1_1_fu_332_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_396_p3;
    sc_signal< sc_lv<8> > select_ln309_5_fu_404_p3;
    sc_signal< sc_lv<8> > shl_ln309_5_fu_390_p2;
    sc_signal< sc_lv<8> > xor_ln330_4_fu_418_p2;
    sc_signal< sc_lv<8> > xor_ln330_3_fu_412_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_436_p3;
    sc_signal< sc_lv<8> > select_ln309_6_fu_444_p3;
    sc_signal< sc_lv<8> > shl_ln309_6_fu_430_p2;
    sc_signal< sc_lv<8> > xor_ln331_4_fu_458_p2;
    sc_signal< sc_lv<8> > xor_ln331_3_fu_452_p2;
    sc_signal< sc_lv<8> > Tm_3_1_fu_344_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_476_p3;
    sc_signal< sc_lv<8> > select_ln309_7_fu_484_p3;
    sc_signal< sc_lv<8> > shl_ln309_7_fu_470_p2;
    sc_signal< sc_lv<8> > xor_ln332_4_fu_498_p2;
    sc_signal< sc_lv<8> > xor_ln332_3_fu_492_p2;
    sc_signal< sc_lv<8> > xor_ln323_2_fu_510_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_540_p3;
    sc_signal< sc_lv<8> > select_ln309_8_fu_548_p3;
    sc_signal< sc_lv<8> > shl_ln309_8_fu_534_p2;
    sc_signal< sc_lv<8> > Tm_2_2_fu_522_p2;
    sc_signal< sc_lv<8> > xor_ln329_7_fu_562_p2;
    sc_signal< sc_lv<8> > xor_ln329_6_fu_556_p2;
    sc_signal< sc_lv<8> > Tm_1_2_fu_516_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_580_p3;
    sc_signal< sc_lv<8> > select_ln309_9_fu_588_p3;
    sc_signal< sc_lv<8> > shl_ln309_9_fu_574_p2;
    sc_signal< sc_lv<8> > xor_ln330_7_fu_602_p2;
    sc_signal< sc_lv<8> > xor_ln330_6_fu_596_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_620_p3;
    sc_signal< sc_lv<8> > select_ln309_10_fu_628_p3;
    sc_signal< sc_lv<8> > shl_ln309_10_fu_614_p2;
    sc_signal< sc_lv<8> > xor_ln331_7_fu_642_p2;
    sc_signal< sc_lv<8> > xor_ln331_6_fu_636_p2;
    sc_signal< sc_lv<8> > Tm_3_2_fu_528_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_660_p3;
    sc_signal< sc_lv<8> > select_ln309_11_fu_668_p3;
    sc_signal< sc_lv<8> > shl_ln309_11_fu_654_p2;
    sc_signal< sc_lv<8> > xor_ln332_7_fu_682_p2;
    sc_signal< sc_lv<8> > xor_ln332_6_fu_676_p2;
    sc_signal< sc_lv<8> > xor_ln323_3_fu_694_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_724_p3;
    sc_signal< sc_lv<8> > select_ln309_12_fu_732_p3;
    sc_signal< sc_lv<8> > shl_ln309_12_fu_718_p2;
    sc_signal< sc_lv<8> > Tm_2_3_fu_706_p2;
    sc_signal< sc_lv<8> > xor_ln329_10_fu_746_p2;
    sc_signal< sc_lv<8> > xor_ln329_9_fu_740_p2;
    sc_signal< sc_lv<8> > Tm_1_3_fu_700_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_764_p3;
    sc_signal< sc_lv<8> > select_ln309_13_fu_772_p3;
    sc_signal< sc_lv<8> > shl_ln309_13_fu_758_p2;
    sc_signal< sc_lv<8> > xor_ln330_10_fu_786_p2;
    sc_signal< sc_lv<8> > xor_ln330_9_fu_780_p2;
    sc_signal< sc_lv<1> > tmp_14_fu_804_p3;
    sc_signal< sc_lv<8> > select_ln309_14_fu_812_p3;
    sc_signal< sc_lv<8> > shl_ln309_14_fu_798_p2;
    sc_signal< sc_lv<8> > xor_ln331_10_fu_826_p2;
    sc_signal< sc_lv<8> > xor_ln331_9_fu_820_p2;
    sc_signal< sc_lv<8> > Tm_3_3_fu_712_p2;
    sc_signal< sc_lv<1> > tmp_15_fu_844_p3;
    sc_signal< sc_lv<8> > select_ln309_15_fu_852_p3;
    sc_signal< sc_lv<8> > shl_ln309_15_fu_838_p2;
    sc_signal< sc_lv<8> > xor_ln332_10_fu_866_p2;
    sc_signal< sc_lv<8> > xor_ln332_9_fu_860_p2;
    sc_signal< sc_lv<8> > xor_ln329_2_fu_200_p2;
    sc_signal< sc_lv<8> > xor_ln330_2_fu_240_p2;
    sc_signal< sc_lv<8> > xor_ln331_2_fu_280_p2;
    sc_signal< sc_lv<8> > xor_ln332_2_fu_320_p2;
    sc_signal< sc_lv<8> > xor_ln329_5_fu_384_p2;
    sc_signal< sc_lv<8> > xor_ln330_5_fu_424_p2;
    sc_signal< sc_lv<8> > xor_ln331_5_fu_464_p2;
    sc_signal< sc_lv<8> > xor_ln332_5_fu_504_p2;
    sc_signal< sc_lv<8> > xor_ln329_8_fu_568_p2;
    sc_signal< sc_lv<8> > xor_ln330_8_fu_608_p2;
    sc_signal< sc_lv<8> > xor_ln331_8_fu_648_p2;
    sc_signal< sc_lv<8> > xor_ln332_8_fu_688_p2;
    sc_signal< sc_lv<8> > xor_ln329_11_fu_752_p2;
    sc_signal< sc_lv<8> > xor_ln330_11_fu_792_p2;
    sc_signal< sc_lv<8> > xor_ln331_11_fu_832_p2;
    sc_signal< sc_lv<8> > xor_ln332_11_fu_872_p2;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<8> ap_const_lv8_1B;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_Tm_1_1_fu_332_p2();
    void thread_Tm_1_2_fu_516_p2();
    void thread_Tm_1_3_fu_700_p2();
    void thread_Tm_1_fu_148_p2();
    void thread_Tm_2_1_fu_338_p2();
    void thread_Tm_2_2_fu_522_p2();
    void thread_Tm_2_3_fu_706_p2();
    void thread_Tm_2_fu_154_p2();
    void thread_Tm_3_1_fu_344_p2();
    void thread_Tm_3_2_fu_528_p2();
    void thread_Tm_3_3_fu_712_p2();
    void thread_Tm_3_fu_160_p2();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_12();
    void thread_ap_return_13();
    void thread_ap_return_14();
    void thread_ap_return_15();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_select_ln309_10_fu_628_p3();
    void thread_select_ln309_11_fu_668_p3();
    void thread_select_ln309_12_fu_732_p3();
    void thread_select_ln309_13_fu_772_p3();
    void thread_select_ln309_14_fu_812_p3();
    void thread_select_ln309_15_fu_852_p3();
    void thread_select_ln309_1_fu_220_p3();
    void thread_select_ln309_2_fu_260_p3();
    void thread_select_ln309_3_fu_300_p3();
    void thread_select_ln309_4_fu_364_p3();
    void thread_select_ln309_5_fu_404_p3();
    void thread_select_ln309_6_fu_444_p3();
    void thread_select_ln309_7_fu_484_p3();
    void thread_select_ln309_8_fu_548_p3();
    void thread_select_ln309_9_fu_588_p3();
    void thread_select_ln309_fu_180_p3();
    void thread_shl_ln309_10_fu_614_p2();
    void thread_shl_ln309_11_fu_654_p2();
    void thread_shl_ln309_12_fu_718_p2();
    void thread_shl_ln309_13_fu_758_p2();
    void thread_shl_ln309_14_fu_798_p2();
    void thread_shl_ln309_15_fu_838_p2();
    void thread_shl_ln309_1_fu_206_p2();
    void thread_shl_ln309_2_fu_246_p2();
    void thread_shl_ln309_3_fu_286_p2();
    void thread_shl_ln309_4_fu_350_p2();
    void thread_shl_ln309_5_fu_390_p2();
    void thread_shl_ln309_6_fu_430_p2();
    void thread_shl_ln309_7_fu_470_p2();
    void thread_shl_ln309_8_fu_534_p2();
    void thread_shl_ln309_9_fu_574_p2();
    void thread_shl_ln309_fu_166_p2();
    void thread_tmp_10_fu_620_p3();
    void thread_tmp_11_fu_660_p3();
    void thread_tmp_12_fu_724_p3();
    void thread_tmp_13_fu_764_p3();
    void thread_tmp_14_fu_804_p3();
    void thread_tmp_15_fu_844_p3();
    void thread_tmp_1_fu_212_p3();
    void thread_tmp_2_fu_252_p3();
    void thread_tmp_3_fu_292_p3();
    void thread_tmp_4_fu_356_p3();
    void thread_tmp_5_fu_396_p3();
    void thread_tmp_6_fu_436_p3();
    void thread_tmp_7_fu_476_p3();
    void thread_tmp_8_fu_540_p3();
    void thread_tmp_9_fu_580_p3();
    void thread_tmp_fu_172_p3();
    void thread_xor_ln323_1_fu_326_p2();
    void thread_xor_ln323_2_fu_510_p2();
    void thread_xor_ln323_3_fu_694_p2();
    void thread_xor_ln323_fu_142_p2();
    void thread_xor_ln329_10_fu_746_p2();
    void thread_xor_ln329_11_fu_752_p2();
    void thread_xor_ln329_1_fu_194_p2();
    void thread_xor_ln329_2_fu_200_p2();
    void thread_xor_ln329_3_fu_372_p2();
    void thread_xor_ln329_4_fu_378_p2();
    void thread_xor_ln329_5_fu_384_p2();
    void thread_xor_ln329_6_fu_556_p2();
    void thread_xor_ln329_7_fu_562_p2();
    void thread_xor_ln329_8_fu_568_p2();
    void thread_xor_ln329_9_fu_740_p2();
    void thread_xor_ln329_fu_188_p2();
    void thread_xor_ln330_10_fu_786_p2();
    void thread_xor_ln330_11_fu_792_p2();
    void thread_xor_ln330_1_fu_234_p2();
    void thread_xor_ln330_2_fu_240_p2();
    void thread_xor_ln330_3_fu_412_p2();
    void thread_xor_ln330_4_fu_418_p2();
    void thread_xor_ln330_5_fu_424_p2();
    void thread_xor_ln330_6_fu_596_p2();
    void thread_xor_ln330_7_fu_602_p2();
    void thread_xor_ln330_8_fu_608_p2();
    void thread_xor_ln330_9_fu_780_p2();
    void thread_xor_ln330_fu_228_p2();
    void thread_xor_ln331_10_fu_826_p2();
    void thread_xor_ln331_11_fu_832_p2();
    void thread_xor_ln331_1_fu_274_p2();
    void thread_xor_ln331_2_fu_280_p2();
    void thread_xor_ln331_3_fu_452_p2();
    void thread_xor_ln331_4_fu_458_p2();
    void thread_xor_ln331_5_fu_464_p2();
    void thread_xor_ln331_6_fu_636_p2();
    void thread_xor_ln331_7_fu_642_p2();
    void thread_xor_ln331_8_fu_648_p2();
    void thread_xor_ln331_9_fu_820_p2();
    void thread_xor_ln331_fu_268_p2();
    void thread_xor_ln332_10_fu_866_p2();
    void thread_xor_ln332_11_fu_872_p2();
    void thread_xor_ln332_1_fu_314_p2();
    void thread_xor_ln332_2_fu_320_p2();
    void thread_xor_ln332_3_fu_492_p2();
    void thread_xor_ln332_4_fu_498_p2();
    void thread_xor_ln332_5_fu_504_p2();
    void thread_xor_ln332_6_fu_676_p2();
    void thread_xor_ln332_7_fu_682_p2();
    void thread_xor_ln332_8_fu_688_p2();
    void thread_xor_ln332_9_fu_860_p2();
    void thread_xor_ln332_fu_308_p2();
};

}

using namespace ap_rtl;

#endif
