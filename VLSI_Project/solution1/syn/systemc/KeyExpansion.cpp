// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "KeyExpansion.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic KeyExpansion::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic KeyExpansion::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> KeyExpansion::ap_ST_fsm_state1 = "1";
const sc_lv<6> KeyExpansion::ap_ST_fsm_state2 = "10";
const sc_lv<6> KeyExpansion::ap_ST_fsm_state3 = "100";
const sc_lv<6> KeyExpansion::ap_ST_fsm_state4 = "1000";
const sc_lv<6> KeyExpansion::ap_ST_fsm_state5 = "10000";
const sc_lv<6> KeyExpansion::ap_ST_fsm_state6 = "100000";
const sc_lv<32> KeyExpansion::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> KeyExpansion::ap_const_lv32_1 = "1";
const sc_lv<1> KeyExpansion::ap_const_lv1_0 = "0";
const sc_lv<32> KeyExpansion::ap_const_lv32_3 = "11";
const sc_lv<32> KeyExpansion::ap_const_lv32_4 = "100";
const sc_lv<32> KeyExpansion::ap_const_lv32_5 = "101";
const sc_lv<3> KeyExpansion::ap_const_lv3_0 = "000";
const sc_lv<32> KeyExpansion::ap_const_lv32_2 = "10";
const sc_lv<6> KeyExpansion::ap_const_lv6_4 = "100";
const sc_lv<1> KeyExpansion::ap_const_lv1_1 = "1";
const sc_lv<3> KeyExpansion::ap_const_lv3_4 = "100";
const sc_lv<3> KeyExpansion::ap_const_lv3_1 = "1";
const sc_lv<6> KeyExpansion::ap_const_lv6_2C = "101100";
const sc_lv<2> KeyExpansion::ap_const_lv2_0 = "00";
const sc_lv<8> KeyExpansion::ap_const_lv8_FC = "11111100";
const sc_lv<32> KeyExpansion::ap_const_lv32_7 = "111";
const sc_lv<8> KeyExpansion::ap_const_lv8_F0 = "11110000";
const sc_lv<5> KeyExpansion::ap_const_lv5_7 = "111";
const sc_lv<32> KeyExpansion::ap_const_lv32_1F = "11111";
const sc_lv<6> KeyExpansion::ap_const_lv6_1F = "11111";
const sc_lv<32> KeyExpansion::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<6> KeyExpansion::ap_const_lv6_1 = "1";
const bool KeyExpansion::ap_const_boolean_1 = true;

KeyExpansion::KeyExpansion(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sbox_U = new KeyExpansion_sbox("sbox_U");
    sbox_U->clk(ap_clk);
    sbox_U->reset(ap_rst);
    sbox_U->address0(sbox_address0);
    sbox_U->ce0(sbox_ce0);
    sbox_U->q0(sbox_q0);
    sbox_U->address1(sbox_address1);
    sbox_U->ce1(sbox_ce1);
    sbox_U->q1(sbox_q1);
    sbox_U->address2(sbox_address2);
    sbox_U->ce2(sbox_ce2);
    sbox_U->q2(sbox_q2);
    sbox_U->address3(sbox_address3);
    sbox_U->ce3(sbox_ce3);
    sbox_U->q3(sbox_q3);
    Rcon_U = new KeyExpansion_Rcon("Rcon_U");
    Rcon_U->clk(ap_clk);
    Rcon_U->reset(ap_rst);
    Rcon_U->address0(Rcon_address0);
    Rcon_U->ce0(Rcon_ce0);
    Rcon_U->q0(Rcon_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Key_0_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln167_fu_379_p1 );

    SC_METHOD(thread_Key_0_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_Key_1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln167_fu_379_p1 );

    SC_METHOD(thread_Key_1_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_Key_2_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln167_fu_379_p1 );

    SC_METHOD(thread_Key_2_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_Key_3_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln167_fu_379_p1 );

    SC_METHOD(thread_Key_3_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_Rcon_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln212_fu_527_p1 );

    SC_METHOD(thread_Rcon_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_RoundKey_0_address0);
    sensitive << ( zext_ln167_reg_1093 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln181_fu_417_p1 );
    sensitive << ( zext_ln227_fu_532_p1 );
    sensitive << ( zext_ln227_1_fu_1050_p1 );

    SC_METHOD(thread_RoundKey_0_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_RoundKey_0_d0);
    sensitive << ( Key_0_q0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( xor_ln227_fu_1043_p2 );

    SC_METHOD(thread_RoundKey_0_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_RoundKey_1_address0);
    sensitive << ( zext_ln167_reg_1093 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln181_fu_417_p1 );
    sensitive << ( zext_ln227_fu_532_p1 );
    sensitive << ( zext_ln227_1_fu_1050_p1 );

    SC_METHOD(thread_RoundKey_1_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_RoundKey_1_d0);
    sensitive << ( Key_1_q0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( xor_ln228_fu_1058_p2 );

    SC_METHOD(thread_RoundKey_1_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_RoundKey_2_address0);
    sensitive << ( zext_ln167_reg_1093 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln181_fu_417_p1 );
    sensitive << ( zext_ln227_fu_532_p1 );
    sensitive << ( zext_ln227_1_fu_1050_p1 );

    SC_METHOD(thread_RoundKey_2_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_RoundKey_2_d0);
    sensitive << ( Key_2_q0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( xor_ln229_fu_1065_p2 );

    SC_METHOD(thread_RoundKey_2_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_RoundKey_3_address0);
    sensitive << ( zext_ln167_reg_1093 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln181_fu_417_p1 );
    sensitive << ( zext_ln227_fu_532_p1 );
    sensitive << ( zext_ln227_1_fu_1050_p1 );

    SC_METHOD(thread_RoundKey_3_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_RoundKey_3_d0);
    sensitive << ( Key_3_q0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( xor_ln230_fu_1072_p2 );

    SC_METHOD(thread_RoundKey_3_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_add_ln181_fu_401_p2);
    sensitive << ( j_fu_393_p3 );

    SC_METHOD(thread_add_ln227_fu_425_p2);
    sensitive << ( j_fu_393_p3 );

    SC_METHOD(thread_and_ln207_fu_654_p2);
    sensitive << ( lshr_ln207_fu_642_p2 );
    sensitive << ( lshr_ln207_1_fu_648_p2 );

    SC_METHOD(thread_and_ln208_fu_769_p2);
    sensitive << ( lshr_ln208_fu_757_p2 );
    sensitive << ( lshr_ln208_1_fu_763_p2 );

    SC_METHOD(thread_and_ln209_fu_884_p2);
    sensitive << ( lshr_ln209_fu_872_p2 );
    sensitive << ( lshr_ln209_1_fu_878_p2 );

    SC_METHOD(thread_and_ln210_fu_999_p2);
    sensitive << ( lshr_ln210_fu_987_p2 );
    sensitive << ( lshr_ln210_1_fu_993_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln177_fu_387_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln177_fu_387_p2 );

    SC_METHOD(thread_empty_17_fu_456_p1);
    sensitive << ( RoundKey_1_q0 );

    SC_METHOD(thread_empty_18_fu_556_p2);
    sensitive << ( tmp_2_fu_549_p3 );

    SC_METHOD(thread_empty_19_fu_475_p1);
    sensitive << ( RoundKey_2_q0 );

    SC_METHOD(thread_empty_20_fu_671_p2);
    sensitive << ( tmp_4_fu_664_p3 );

    SC_METHOD(thread_empty_21_fu_494_p1);
    sensitive << ( RoundKey_3_q0 );

    SC_METHOD(thread_empty_22_fu_786_p2);
    sensitive << ( tmp_6_fu_779_p3 );

    SC_METHOD(thread_empty_23_fu_513_p1);
    sensitive << ( RoundKey_0_q0 );

    SC_METHOD(thread_empty_24_fu_901_p2);
    sensitive << ( tmp_8_fu_894_p3 );

    SC_METHOD(thread_i_2_fu_1079_p2);
    sensitive << ( i_1_reg_355 );

    SC_METHOD(thread_i_fu_373_p2);
    sensitive << ( i_0_reg_344 );

    SC_METHOD(thread_icmp_ln164_fu_367_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_344 );

    SC_METHOD(thread_icmp_ln177_fu_387_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_1_reg_355 );

    SC_METHOD(thread_icmp_ln188_fu_543_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( trunc_ln177_fu_539_p1 );

    SC_METHOD(thread_icmp_ln207_fu_562_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_549_p3 );
    sensitive << ( empty_18_fu_556_p2 );

    SC_METHOD(thread_icmp_ln208_fu_677_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_664_p3 );
    sensitive << ( empty_20_fu_671_p2 );

    SC_METHOD(thread_icmp_ln209_fu_792_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_6_fu_779_p3 );
    sensitive << ( empty_22_fu_786_p2 );

    SC_METHOD(thread_icmp_ln210_fu_907_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_8_fu_894_p3 );
    sensitive << ( empty_24_fu_901_p2 );

    SC_METHOD(thread_j_fu_393_p3);
    sensitive << ( i_1_reg_355 );

    SC_METHOD(thread_lshr_ln1_fu_441_p4);
    sensitive << ( RoundKey_1_q0 );

    SC_METHOD(thread_lshr_ln207_1_fu_648_p2);
    sensitive << ( zext_ln207_4_fu_638_p1 );

    SC_METHOD(thread_lshr_ln207_fu_642_p2);
    sensitive << ( select_ln207_1_fu_612_p3 );
    sensitive << ( zext_ln207_3_fu_634_p1 );

    SC_METHOD(thread_lshr_ln208_1_fu_763_p2);
    sensitive << ( zext_ln208_4_fu_753_p1 );

    SC_METHOD(thread_lshr_ln208_fu_757_p2);
    sensitive << ( select_ln208_1_fu_727_p3 );
    sensitive << ( zext_ln208_3_fu_749_p1 );

    SC_METHOD(thread_lshr_ln209_1_fu_878_p2);
    sensitive << ( zext_ln209_4_fu_868_p1 );

    SC_METHOD(thread_lshr_ln209_fu_872_p2);
    sensitive << ( select_ln209_1_fu_842_p3 );
    sensitive << ( zext_ln209_3_fu_864_p1 );

    SC_METHOD(thread_lshr_ln210_1_fu_993_p2);
    sensitive << ( zext_ln210_4_fu_983_p1 );

    SC_METHOD(thread_lshr_ln210_fu_987_p2);
    sensitive << ( select_ln210_1_fu_957_p3 );
    sensitive << ( zext_ln210_3_fu_979_p1 );

    SC_METHOD(thread_lshr_ln2_fu_460_p4);
    sensitive << ( RoundKey_2_q0 );

    SC_METHOD(thread_lshr_ln3_fu_479_p4);
    sensitive << ( RoundKey_3_q0 );

    SC_METHOD(thread_lshr_ln4_fu_498_p4);
    sensitive << ( RoundKey_0_q0 );

    SC_METHOD(thread_lshr_ln5_fu_517_p4);
    sensitive << ( i_1_reg_355 );

    SC_METHOD(thread_lshr_ln_fu_407_p4);
    sensitive << ( add_ln181_fu_401_p2 );

    SC_METHOD(thread_sbox_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln207_fu_451_p1 );

    SC_METHOD(thread_sbox_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln208_fu_470_p1 );

    SC_METHOD(thread_sbox_address2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln209_fu_489_p1 );

    SC_METHOD(thread_sbox_address3);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln210_fu_508_p1 );

    SC_METHOD(thread_sbox_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_sbox_ce1);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_sbox_ce2);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_sbox_ce3);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_select_ln207_1_fu_612_p3);
    sensitive << ( sbox_q0 );
    sensitive << ( icmp_ln207_fu_562_p2 );
    sensitive << ( tmp_fu_576_p4 );

    SC_METHOD(thread_select_ln207_2_fu_620_p3);
    sensitive << ( zext_ln207_1_fu_568_p1 );
    sensitive << ( icmp_ln207_fu_562_p2 );
    sensitive << ( xor_ln207_fu_592_p2 );

    SC_METHOD(thread_select_ln207_fu_604_p3);
    sensitive << ( icmp_ln207_fu_562_p2 );
    sensitive << ( sub_ln207_fu_586_p2 );
    sensitive << ( sub_ln207_1_fu_598_p2 );

    SC_METHOD(thread_select_ln208_1_fu_727_p3);
    sensitive << ( sbox_q1 );
    sensitive << ( icmp_ln208_fu_677_p2 );
    sensitive << ( tmp_1_fu_691_p4 );

    SC_METHOD(thread_select_ln208_2_fu_735_p3);
    sensitive << ( zext_ln208_1_fu_683_p1 );
    sensitive << ( icmp_ln208_fu_677_p2 );
    sensitive << ( xor_ln208_fu_707_p2 );

    SC_METHOD(thread_select_ln208_fu_719_p3);
    sensitive << ( icmp_ln208_fu_677_p2 );
    sensitive << ( sub_ln208_fu_701_p2 );
    sensitive << ( sub_ln208_1_fu_713_p2 );

    SC_METHOD(thread_select_ln209_1_fu_842_p3);
    sensitive << ( sbox_q2 );
    sensitive << ( icmp_ln209_fu_792_p2 );
    sensitive << ( tmp_3_fu_806_p4 );

    SC_METHOD(thread_select_ln209_2_fu_850_p3);
    sensitive << ( zext_ln209_1_fu_798_p1 );
    sensitive << ( icmp_ln209_fu_792_p2 );
    sensitive << ( xor_ln209_fu_822_p2 );

    SC_METHOD(thread_select_ln209_fu_834_p3);
    sensitive << ( icmp_ln209_fu_792_p2 );
    sensitive << ( sub_ln209_fu_816_p2 );
    sensitive << ( sub_ln209_1_fu_828_p2 );

    SC_METHOD(thread_select_ln210_1_fu_957_p3);
    sensitive << ( sbox_q3 );
    sensitive << ( icmp_ln210_fu_907_p2 );
    sensitive << ( tmp_5_fu_921_p4 );

    SC_METHOD(thread_select_ln210_2_fu_965_p3);
    sensitive << ( zext_ln210_1_fu_913_p1 );
    sensitive << ( icmp_ln210_fu_907_p2 );
    sensitive << ( xor_ln210_fu_937_p2 );

    SC_METHOD(thread_select_ln210_fu_949_p3);
    sensitive << ( icmp_ln210_fu_907_p2 );
    sensitive << ( sub_ln210_fu_931_p2 );
    sensitive << ( sub_ln210_1_fu_943_p2 );

    SC_METHOD(thread_sub_ln207_1_fu_598_p2);
    sensitive << ( zext_ln207_1_fu_568_p1 );
    sensitive << ( zext_ln207_2_fu_572_p1 );

    SC_METHOD(thread_sub_ln207_2_fu_628_p2);
    sensitive << ( select_ln207_fu_604_p3 );

    SC_METHOD(thread_sub_ln207_fu_586_p2);
    sensitive << ( zext_ln207_1_fu_568_p1 );
    sensitive << ( zext_ln207_2_fu_572_p1 );

    SC_METHOD(thread_sub_ln208_1_fu_713_p2);
    sensitive << ( zext_ln208_1_fu_683_p1 );
    sensitive << ( zext_ln208_2_fu_687_p1 );

    SC_METHOD(thread_sub_ln208_2_fu_743_p2);
    sensitive << ( select_ln208_fu_719_p3 );

    SC_METHOD(thread_sub_ln208_fu_701_p2);
    sensitive << ( zext_ln208_1_fu_683_p1 );
    sensitive << ( zext_ln208_2_fu_687_p1 );

    SC_METHOD(thread_sub_ln209_1_fu_828_p2);
    sensitive << ( zext_ln209_1_fu_798_p1 );
    sensitive << ( zext_ln209_2_fu_802_p1 );

    SC_METHOD(thread_sub_ln209_2_fu_858_p2);
    sensitive << ( select_ln209_fu_834_p3 );

    SC_METHOD(thread_sub_ln209_fu_816_p2);
    sensitive << ( zext_ln209_1_fu_798_p1 );
    sensitive << ( zext_ln209_2_fu_802_p1 );

    SC_METHOD(thread_sub_ln210_1_fu_943_p2);
    sensitive << ( zext_ln210_1_fu_913_p1 );
    sensitive << ( zext_ln210_2_fu_917_p1 );

    SC_METHOD(thread_sub_ln210_2_fu_973_p2);
    sensitive << ( select_ln210_fu_949_p3 );

    SC_METHOD(thread_sub_ln210_fu_931_p2);
    sensitive << ( zext_ln210_1_fu_913_p1 );
    sensitive << ( zext_ln210_2_fu_917_p1 );

    SC_METHOD(thread_tempa_0_2_fu_1036_p3);
    sensitive << ( tempa_0_3_reg_1149 );
    sensitive << ( icmp_ln188_fu_543_p2 );
    sensitive << ( tempa_0_fu_1009_p2 );

    SC_METHOD(thread_tempa_0_fu_1009_p2);
    sensitive << ( Rcon_q0 );
    sensitive << ( trunc_ln207_fu_660_p1 );

    SC_METHOD(thread_tempa_1_1_fu_775_p1);
    sensitive << ( and_ln208_fu_769_p2 );

    SC_METHOD(thread_tempa_1_2_fu_1029_p3);
    sensitive << ( tempa_1_reg_1154 );
    sensitive << ( icmp_ln188_fu_543_p2 );
    sensitive << ( tempa_1_1_fu_775_p1 );

    SC_METHOD(thread_tempa_2_1_fu_890_p1);
    sensitive << ( and_ln209_fu_884_p2 );

    SC_METHOD(thread_tempa_2_2_fu_1022_p3);
    sensitive << ( tempa_2_reg_1159 );
    sensitive << ( icmp_ln188_fu_543_p2 );
    sensitive << ( tempa_2_1_fu_890_p1 );

    SC_METHOD(thread_tempa_3_1_fu_1005_p1);
    sensitive << ( and_ln210_fu_999_p2 );

    SC_METHOD(thread_tempa_3_2_fu_1015_p3);
    sensitive << ( tempa_3_reg_1164 );
    sensitive << ( icmp_ln188_fu_543_p2 );
    sensitive << ( tempa_3_1_fu_1005_p1 );

    SC_METHOD(thread_tmp_1_fu_691_p4);
    sensitive << ( sbox_q1 );

    SC_METHOD(thread_tmp_2_fu_549_p3);
    sensitive << ( empty_17_reg_1174 );

    SC_METHOD(thread_tmp_3_fu_806_p4);
    sensitive << ( sbox_q2 );

    SC_METHOD(thread_tmp_4_fu_664_p3);
    sensitive << ( empty_19_reg_1184 );

    SC_METHOD(thread_tmp_5_fu_921_p4);
    sensitive << ( sbox_q3 );

    SC_METHOD(thread_tmp_6_fu_779_p3);
    sensitive << ( empty_21_reg_1194 );

    SC_METHOD(thread_tmp_8_fu_894_p3);
    sensitive << ( empty_23_reg_1204 );

    SC_METHOD(thread_tmp_fu_576_p4);
    sensitive << ( sbox_q0 );

    SC_METHOD(thread_trunc_ln177_fu_539_p1);
    sensitive << ( i_1_reg_355 );

    SC_METHOD(thread_trunc_ln207_fu_660_p1);
    sensitive << ( and_ln207_fu_654_p2 );

    SC_METHOD(thread_xor_ln207_fu_592_p2);
    sensitive << ( zext_ln207_1_fu_568_p1 );

    SC_METHOD(thread_xor_ln208_fu_707_p2);
    sensitive << ( zext_ln208_1_fu_683_p1 );

    SC_METHOD(thread_xor_ln209_fu_822_p2);
    sensitive << ( zext_ln209_1_fu_798_p1 );

    SC_METHOD(thread_xor_ln210_fu_937_p2);
    sensitive << ( zext_ln210_1_fu_913_p1 );

    SC_METHOD(thread_xor_ln227_fu_1043_p2);
    sensitive << ( RoundKey_0_q0 );
    sensitive << ( tempa_0_2_fu_1036_p3 );

    SC_METHOD(thread_xor_ln228_fu_1058_p2);
    sensitive << ( RoundKey_1_q0 );
    sensitive << ( tempa_1_2_fu_1029_p3 );

    SC_METHOD(thread_xor_ln229_fu_1065_p2);
    sensitive << ( RoundKey_2_q0 );
    sensitive << ( tempa_2_2_fu_1022_p3 );

    SC_METHOD(thread_xor_ln230_fu_1072_p2);
    sensitive << ( RoundKey_3_q0 );
    sensitive << ( tempa_3_2_fu_1015_p3 );

    SC_METHOD(thread_zext_ln167_fu_379_p1);
    sensitive << ( i_0_reg_344 );

    SC_METHOD(thread_zext_ln181_fu_417_p1);
    sensitive << ( lshr_ln_fu_407_p4 );

    SC_METHOD(thread_zext_ln207_1_fu_568_p1);
    sensitive << ( tmp_2_fu_549_p3 );

    SC_METHOD(thread_zext_ln207_2_fu_572_p1);
    sensitive << ( empty_18_fu_556_p2 );

    SC_METHOD(thread_zext_ln207_3_fu_634_p1);
    sensitive << ( select_ln207_2_fu_620_p3 );

    SC_METHOD(thread_zext_ln207_4_fu_638_p1);
    sensitive << ( sub_ln207_2_fu_628_p2 );

    SC_METHOD(thread_zext_ln207_fu_451_p1);
    sensitive << ( lshr_ln1_fu_441_p4 );

    SC_METHOD(thread_zext_ln208_1_fu_683_p1);
    sensitive << ( tmp_4_fu_664_p3 );

    SC_METHOD(thread_zext_ln208_2_fu_687_p1);
    sensitive << ( empty_20_fu_671_p2 );

    SC_METHOD(thread_zext_ln208_3_fu_749_p1);
    sensitive << ( select_ln208_2_fu_735_p3 );

    SC_METHOD(thread_zext_ln208_4_fu_753_p1);
    sensitive << ( sub_ln208_2_fu_743_p2 );

    SC_METHOD(thread_zext_ln208_fu_470_p1);
    sensitive << ( lshr_ln2_fu_460_p4 );

    SC_METHOD(thread_zext_ln209_1_fu_798_p1);
    sensitive << ( tmp_6_fu_779_p3 );

    SC_METHOD(thread_zext_ln209_2_fu_802_p1);
    sensitive << ( empty_22_fu_786_p2 );

    SC_METHOD(thread_zext_ln209_3_fu_864_p1);
    sensitive << ( select_ln209_2_fu_850_p3 );

    SC_METHOD(thread_zext_ln209_4_fu_868_p1);
    sensitive << ( sub_ln209_2_fu_858_p2 );

    SC_METHOD(thread_zext_ln209_fu_489_p1);
    sensitive << ( lshr_ln3_fu_479_p4 );

    SC_METHOD(thread_zext_ln210_1_fu_913_p1);
    sensitive << ( tmp_8_fu_894_p3 );

    SC_METHOD(thread_zext_ln210_2_fu_917_p1);
    sensitive << ( empty_24_fu_901_p2 );

    SC_METHOD(thread_zext_ln210_3_fu_979_p1);
    sensitive << ( select_ln210_2_fu_965_p3 );

    SC_METHOD(thread_zext_ln210_4_fu_983_p1);
    sensitive << ( sub_ln210_2_fu_973_p2 );

    SC_METHOD(thread_zext_ln210_fu_508_p1);
    sensitive << ( lshr_ln4_fu_498_p4 );

    SC_METHOD(thread_zext_ln212_fu_527_p1);
    sensitive << ( lshr_ln5_fu_517_p4 );

    SC_METHOD(thread_zext_ln227_1_fu_1050_p1);
    sensitive << ( i_1_reg_355 );

    SC_METHOD(thread_zext_ln227_fu_532_p1);
    sensitive << ( lshr_ln6_reg_1144 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln164_fu_367_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln177_fu_387_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "KeyExpansion_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, RoundKey_0_address0, "(port)RoundKey_0_address0");
    sc_trace(mVcdFile, RoundKey_0_ce0, "(port)RoundKey_0_ce0");
    sc_trace(mVcdFile, RoundKey_0_we0, "(port)RoundKey_0_we0");
    sc_trace(mVcdFile, RoundKey_0_d0, "(port)RoundKey_0_d0");
    sc_trace(mVcdFile, RoundKey_0_q0, "(port)RoundKey_0_q0");
    sc_trace(mVcdFile, RoundKey_1_address0, "(port)RoundKey_1_address0");
    sc_trace(mVcdFile, RoundKey_1_ce0, "(port)RoundKey_1_ce0");
    sc_trace(mVcdFile, RoundKey_1_we0, "(port)RoundKey_1_we0");
    sc_trace(mVcdFile, RoundKey_1_d0, "(port)RoundKey_1_d0");
    sc_trace(mVcdFile, RoundKey_1_q0, "(port)RoundKey_1_q0");
    sc_trace(mVcdFile, RoundKey_2_address0, "(port)RoundKey_2_address0");
    sc_trace(mVcdFile, RoundKey_2_ce0, "(port)RoundKey_2_ce0");
    sc_trace(mVcdFile, RoundKey_2_we0, "(port)RoundKey_2_we0");
    sc_trace(mVcdFile, RoundKey_2_d0, "(port)RoundKey_2_d0");
    sc_trace(mVcdFile, RoundKey_2_q0, "(port)RoundKey_2_q0");
    sc_trace(mVcdFile, RoundKey_3_address0, "(port)RoundKey_3_address0");
    sc_trace(mVcdFile, RoundKey_3_ce0, "(port)RoundKey_3_ce0");
    sc_trace(mVcdFile, RoundKey_3_we0, "(port)RoundKey_3_we0");
    sc_trace(mVcdFile, RoundKey_3_d0, "(port)RoundKey_3_d0");
    sc_trace(mVcdFile, RoundKey_3_q0, "(port)RoundKey_3_q0");
    sc_trace(mVcdFile, Key_0_address0, "(port)Key_0_address0");
    sc_trace(mVcdFile, Key_0_ce0, "(port)Key_0_ce0");
    sc_trace(mVcdFile, Key_0_q0, "(port)Key_0_q0");
    sc_trace(mVcdFile, Key_1_address0, "(port)Key_1_address0");
    sc_trace(mVcdFile, Key_1_ce0, "(port)Key_1_ce0");
    sc_trace(mVcdFile, Key_1_q0, "(port)Key_1_q0");
    sc_trace(mVcdFile, Key_2_address0, "(port)Key_2_address0");
    sc_trace(mVcdFile, Key_2_ce0, "(port)Key_2_ce0");
    sc_trace(mVcdFile, Key_2_q0, "(port)Key_2_q0");
    sc_trace(mVcdFile, Key_3_address0, "(port)Key_3_address0");
    sc_trace(mVcdFile, Key_3_ce0, "(port)Key_3_ce0");
    sc_trace(mVcdFile, Key_3_q0, "(port)Key_3_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, sbox_address0, "sbox_address0");
    sc_trace(mVcdFile, sbox_ce0, "sbox_ce0");
    sc_trace(mVcdFile, sbox_q0, "sbox_q0");
    sc_trace(mVcdFile, sbox_address1, "sbox_address1");
    sc_trace(mVcdFile, sbox_ce1, "sbox_ce1");
    sc_trace(mVcdFile, sbox_q1, "sbox_q1");
    sc_trace(mVcdFile, sbox_address2, "sbox_address2");
    sc_trace(mVcdFile, sbox_ce2, "sbox_ce2");
    sc_trace(mVcdFile, sbox_q2, "sbox_q2");
    sc_trace(mVcdFile, sbox_address3, "sbox_address3");
    sc_trace(mVcdFile, sbox_ce3, "sbox_ce3");
    sc_trace(mVcdFile, sbox_q3, "sbox_q3");
    sc_trace(mVcdFile, Rcon_address0, "Rcon_address0");
    sc_trace(mVcdFile, Rcon_ce0, "Rcon_ce0");
    sc_trace(mVcdFile, Rcon_q0, "Rcon_q0");
    sc_trace(mVcdFile, i_fu_373_p2, "i_fu_373_p2");
    sc_trace(mVcdFile, i_reg_1088, "i_reg_1088");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln167_fu_379_p1, "zext_ln167_fu_379_p1");
    sc_trace(mVcdFile, zext_ln167_reg_1093, "zext_ln167_reg_1093");
    sc_trace(mVcdFile, icmp_ln164_fu_367_p2, "icmp_ln164_fu_367_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln177_fu_387_p2, "icmp_ln177_fu_387_p2");
    sc_trace(mVcdFile, lshr_ln6_reg_1144, "lshr_ln6_reg_1144");
    sc_trace(mVcdFile, tempa_0_3_reg_1149, "tempa_0_3_reg_1149");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tempa_1_reg_1154, "tempa_1_reg_1154");
    sc_trace(mVcdFile, tempa_2_reg_1159, "tempa_2_reg_1159");
    sc_trace(mVcdFile, tempa_3_reg_1164, "tempa_3_reg_1164");
    sc_trace(mVcdFile, empty_17_fu_456_p1, "empty_17_fu_456_p1");
    sc_trace(mVcdFile, empty_17_reg_1174, "empty_17_reg_1174");
    sc_trace(mVcdFile, empty_19_fu_475_p1, "empty_19_fu_475_p1");
    sc_trace(mVcdFile, empty_19_reg_1184, "empty_19_reg_1184");
    sc_trace(mVcdFile, empty_21_fu_494_p1, "empty_21_fu_494_p1");
    sc_trace(mVcdFile, empty_21_reg_1194, "empty_21_reg_1194");
    sc_trace(mVcdFile, empty_23_fu_513_p1, "empty_23_fu_513_p1");
    sc_trace(mVcdFile, empty_23_reg_1204, "empty_23_reg_1204");
    sc_trace(mVcdFile, i_2_fu_1079_p2, "i_2_fu_1079_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_0_reg_344, "i_0_reg_344");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_1_reg_355, "i_1_reg_355");
    sc_trace(mVcdFile, zext_ln181_fu_417_p1, "zext_ln181_fu_417_p1");
    sc_trace(mVcdFile, zext_ln207_fu_451_p1, "zext_ln207_fu_451_p1");
    sc_trace(mVcdFile, zext_ln208_fu_470_p1, "zext_ln208_fu_470_p1");
    sc_trace(mVcdFile, zext_ln209_fu_489_p1, "zext_ln209_fu_489_p1");
    sc_trace(mVcdFile, zext_ln210_fu_508_p1, "zext_ln210_fu_508_p1");
    sc_trace(mVcdFile, zext_ln212_fu_527_p1, "zext_ln212_fu_527_p1");
    sc_trace(mVcdFile, zext_ln227_fu_532_p1, "zext_ln227_fu_532_p1");
    sc_trace(mVcdFile, zext_ln227_1_fu_1050_p1, "zext_ln227_1_fu_1050_p1");
    sc_trace(mVcdFile, xor_ln227_fu_1043_p2, "xor_ln227_fu_1043_p2");
    sc_trace(mVcdFile, xor_ln228_fu_1058_p2, "xor_ln228_fu_1058_p2");
    sc_trace(mVcdFile, xor_ln229_fu_1065_p2, "xor_ln229_fu_1065_p2");
    sc_trace(mVcdFile, xor_ln230_fu_1072_p2, "xor_ln230_fu_1072_p2");
    sc_trace(mVcdFile, j_fu_393_p3, "j_fu_393_p3");
    sc_trace(mVcdFile, add_ln181_fu_401_p2, "add_ln181_fu_401_p2");
    sc_trace(mVcdFile, lshr_ln_fu_407_p4, "lshr_ln_fu_407_p4");
    sc_trace(mVcdFile, add_ln227_fu_425_p2, "add_ln227_fu_425_p2");
    sc_trace(mVcdFile, lshr_ln1_fu_441_p4, "lshr_ln1_fu_441_p4");
    sc_trace(mVcdFile, lshr_ln2_fu_460_p4, "lshr_ln2_fu_460_p4");
    sc_trace(mVcdFile, lshr_ln3_fu_479_p4, "lshr_ln3_fu_479_p4");
    sc_trace(mVcdFile, lshr_ln4_fu_498_p4, "lshr_ln4_fu_498_p4");
    sc_trace(mVcdFile, lshr_ln5_fu_517_p4, "lshr_ln5_fu_517_p4");
    sc_trace(mVcdFile, trunc_ln177_fu_539_p1, "trunc_ln177_fu_539_p1");
    sc_trace(mVcdFile, tmp_2_fu_549_p3, "tmp_2_fu_549_p3");
    sc_trace(mVcdFile, empty_18_fu_556_p2, "empty_18_fu_556_p2");
    sc_trace(mVcdFile, zext_ln207_1_fu_568_p1, "zext_ln207_1_fu_568_p1");
    sc_trace(mVcdFile, zext_ln207_2_fu_572_p1, "zext_ln207_2_fu_572_p1");
    sc_trace(mVcdFile, icmp_ln207_fu_562_p2, "icmp_ln207_fu_562_p2");
    sc_trace(mVcdFile, sub_ln207_fu_586_p2, "sub_ln207_fu_586_p2");
    sc_trace(mVcdFile, sub_ln207_1_fu_598_p2, "sub_ln207_1_fu_598_p2");
    sc_trace(mVcdFile, tmp_fu_576_p4, "tmp_fu_576_p4");
    sc_trace(mVcdFile, xor_ln207_fu_592_p2, "xor_ln207_fu_592_p2");
    sc_trace(mVcdFile, select_ln207_fu_604_p3, "select_ln207_fu_604_p3");
    sc_trace(mVcdFile, select_ln207_2_fu_620_p3, "select_ln207_2_fu_620_p3");
    sc_trace(mVcdFile, sub_ln207_2_fu_628_p2, "sub_ln207_2_fu_628_p2");
    sc_trace(mVcdFile, select_ln207_1_fu_612_p3, "select_ln207_1_fu_612_p3");
    sc_trace(mVcdFile, zext_ln207_3_fu_634_p1, "zext_ln207_3_fu_634_p1");
    sc_trace(mVcdFile, zext_ln207_4_fu_638_p1, "zext_ln207_4_fu_638_p1");
    sc_trace(mVcdFile, lshr_ln207_fu_642_p2, "lshr_ln207_fu_642_p2");
    sc_trace(mVcdFile, lshr_ln207_1_fu_648_p2, "lshr_ln207_1_fu_648_p2");
    sc_trace(mVcdFile, and_ln207_fu_654_p2, "and_ln207_fu_654_p2");
    sc_trace(mVcdFile, tmp_4_fu_664_p3, "tmp_4_fu_664_p3");
    sc_trace(mVcdFile, empty_20_fu_671_p2, "empty_20_fu_671_p2");
    sc_trace(mVcdFile, zext_ln208_1_fu_683_p1, "zext_ln208_1_fu_683_p1");
    sc_trace(mVcdFile, zext_ln208_2_fu_687_p1, "zext_ln208_2_fu_687_p1");
    sc_trace(mVcdFile, icmp_ln208_fu_677_p2, "icmp_ln208_fu_677_p2");
    sc_trace(mVcdFile, sub_ln208_fu_701_p2, "sub_ln208_fu_701_p2");
    sc_trace(mVcdFile, sub_ln208_1_fu_713_p2, "sub_ln208_1_fu_713_p2");
    sc_trace(mVcdFile, tmp_1_fu_691_p4, "tmp_1_fu_691_p4");
    sc_trace(mVcdFile, xor_ln208_fu_707_p2, "xor_ln208_fu_707_p2");
    sc_trace(mVcdFile, select_ln208_fu_719_p3, "select_ln208_fu_719_p3");
    sc_trace(mVcdFile, select_ln208_2_fu_735_p3, "select_ln208_2_fu_735_p3");
    sc_trace(mVcdFile, sub_ln208_2_fu_743_p2, "sub_ln208_2_fu_743_p2");
    sc_trace(mVcdFile, select_ln208_1_fu_727_p3, "select_ln208_1_fu_727_p3");
    sc_trace(mVcdFile, zext_ln208_3_fu_749_p1, "zext_ln208_3_fu_749_p1");
    sc_trace(mVcdFile, zext_ln208_4_fu_753_p1, "zext_ln208_4_fu_753_p1");
    sc_trace(mVcdFile, lshr_ln208_fu_757_p2, "lshr_ln208_fu_757_p2");
    sc_trace(mVcdFile, lshr_ln208_1_fu_763_p2, "lshr_ln208_1_fu_763_p2");
    sc_trace(mVcdFile, and_ln208_fu_769_p2, "and_ln208_fu_769_p2");
    sc_trace(mVcdFile, tmp_6_fu_779_p3, "tmp_6_fu_779_p3");
    sc_trace(mVcdFile, empty_22_fu_786_p2, "empty_22_fu_786_p2");
    sc_trace(mVcdFile, zext_ln209_1_fu_798_p1, "zext_ln209_1_fu_798_p1");
    sc_trace(mVcdFile, zext_ln209_2_fu_802_p1, "zext_ln209_2_fu_802_p1");
    sc_trace(mVcdFile, icmp_ln209_fu_792_p2, "icmp_ln209_fu_792_p2");
    sc_trace(mVcdFile, sub_ln209_fu_816_p2, "sub_ln209_fu_816_p2");
    sc_trace(mVcdFile, sub_ln209_1_fu_828_p2, "sub_ln209_1_fu_828_p2");
    sc_trace(mVcdFile, tmp_3_fu_806_p4, "tmp_3_fu_806_p4");
    sc_trace(mVcdFile, xor_ln209_fu_822_p2, "xor_ln209_fu_822_p2");
    sc_trace(mVcdFile, select_ln209_fu_834_p3, "select_ln209_fu_834_p3");
    sc_trace(mVcdFile, select_ln209_2_fu_850_p3, "select_ln209_2_fu_850_p3");
    sc_trace(mVcdFile, sub_ln209_2_fu_858_p2, "sub_ln209_2_fu_858_p2");
    sc_trace(mVcdFile, select_ln209_1_fu_842_p3, "select_ln209_1_fu_842_p3");
    sc_trace(mVcdFile, zext_ln209_3_fu_864_p1, "zext_ln209_3_fu_864_p1");
    sc_trace(mVcdFile, zext_ln209_4_fu_868_p1, "zext_ln209_4_fu_868_p1");
    sc_trace(mVcdFile, lshr_ln209_fu_872_p2, "lshr_ln209_fu_872_p2");
    sc_trace(mVcdFile, lshr_ln209_1_fu_878_p2, "lshr_ln209_1_fu_878_p2");
    sc_trace(mVcdFile, and_ln209_fu_884_p2, "and_ln209_fu_884_p2");
    sc_trace(mVcdFile, tmp_8_fu_894_p3, "tmp_8_fu_894_p3");
    sc_trace(mVcdFile, empty_24_fu_901_p2, "empty_24_fu_901_p2");
    sc_trace(mVcdFile, zext_ln210_1_fu_913_p1, "zext_ln210_1_fu_913_p1");
    sc_trace(mVcdFile, zext_ln210_2_fu_917_p1, "zext_ln210_2_fu_917_p1");
    sc_trace(mVcdFile, icmp_ln210_fu_907_p2, "icmp_ln210_fu_907_p2");
    sc_trace(mVcdFile, sub_ln210_fu_931_p2, "sub_ln210_fu_931_p2");
    sc_trace(mVcdFile, sub_ln210_1_fu_943_p2, "sub_ln210_1_fu_943_p2");
    sc_trace(mVcdFile, tmp_5_fu_921_p4, "tmp_5_fu_921_p4");
    sc_trace(mVcdFile, xor_ln210_fu_937_p2, "xor_ln210_fu_937_p2");
    sc_trace(mVcdFile, select_ln210_fu_949_p3, "select_ln210_fu_949_p3");
    sc_trace(mVcdFile, select_ln210_2_fu_965_p3, "select_ln210_2_fu_965_p3");
    sc_trace(mVcdFile, sub_ln210_2_fu_973_p2, "sub_ln210_2_fu_973_p2");
    sc_trace(mVcdFile, select_ln210_1_fu_957_p3, "select_ln210_1_fu_957_p3");
    sc_trace(mVcdFile, zext_ln210_3_fu_979_p1, "zext_ln210_3_fu_979_p1");
    sc_trace(mVcdFile, zext_ln210_4_fu_983_p1, "zext_ln210_4_fu_983_p1");
    sc_trace(mVcdFile, lshr_ln210_fu_987_p2, "lshr_ln210_fu_987_p2");
    sc_trace(mVcdFile, lshr_ln210_1_fu_993_p2, "lshr_ln210_1_fu_993_p2");
    sc_trace(mVcdFile, and_ln210_fu_999_p2, "and_ln210_fu_999_p2");
    sc_trace(mVcdFile, trunc_ln207_fu_660_p1, "trunc_ln207_fu_660_p1");
    sc_trace(mVcdFile, icmp_ln188_fu_543_p2, "icmp_ln188_fu_543_p2");
    sc_trace(mVcdFile, tempa_3_1_fu_1005_p1, "tempa_3_1_fu_1005_p1");
    sc_trace(mVcdFile, tempa_2_1_fu_890_p1, "tempa_2_1_fu_890_p1");
    sc_trace(mVcdFile, tempa_1_1_fu_775_p1, "tempa_1_1_fu_775_p1");
    sc_trace(mVcdFile, tempa_0_fu_1009_p2, "tempa_0_fu_1009_p2");
    sc_trace(mVcdFile, tempa_0_2_fu_1036_p3, "tempa_0_2_fu_1036_p3");
    sc_trace(mVcdFile, tempa_1_2_fu_1029_p3, "tempa_1_2_fu_1029_p3");
    sc_trace(mVcdFile, tempa_2_2_fu_1022_p3, "tempa_2_2_fu_1022_p3");
    sc_trace(mVcdFile, tempa_3_2_fu_1015_p3, "tempa_3_2_fu_1015_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("KeyExpansion.hdltvin.dat");
    mHdltvoutHandle.open("KeyExpansion.hdltvout.dat");
}

KeyExpansion::~KeyExpansion() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete sbox_U;
    delete Rcon_U;
}

void KeyExpansion::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_344 = i_reg_1088.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_344 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln164_fu_367_p2.read(), ap_const_lv1_1))) {
        i_1_reg_355 = ap_const_lv6_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_1_reg_355 = i_2_fu_1079_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        empty_17_reg_1174 = empty_17_fu_456_p1.read();
        empty_19_reg_1184 = empty_19_fu_475_p1.read();
        empty_21_reg_1194 = empty_21_fu_494_p1.read();
        empty_23_reg_1204 = empty_23_fu_513_p1.read();
        tempa_0_3_reg_1149 = RoundKey_0_q0.read();
        tempa_1_reg_1154 = RoundKey_1_q0.read();
        tempa_2_reg_1159 = RoundKey_2_q0.read();
        tempa_3_reg_1164 = RoundKey_3_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_1088 = i_fu_373_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln177_fu_387_p2.read()))) {
        lshr_ln6_reg_1144 = add_ln227_fu_425_p2.read().range(7, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln164_fu_367_p2.read(), ap_const_lv1_0))) {
        zext_ln167_reg_1093 = zext_ln167_fu_379_p1.read();
    }
}

void KeyExpansion::thread_Key_0_address0() {
    Key_0_address0 =  (sc_lv<2>) (zext_ln167_fu_379_p1.read());
}

void KeyExpansion::thread_Key_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        Key_0_ce0 = ap_const_logic_1;
    } else {
        Key_0_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_Key_1_address0() {
    Key_1_address0 =  (sc_lv<2>) (zext_ln167_fu_379_p1.read());
}

void KeyExpansion::thread_Key_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        Key_1_ce0 = ap_const_logic_1;
    } else {
        Key_1_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_Key_2_address0() {
    Key_2_address0 =  (sc_lv<2>) (zext_ln167_fu_379_p1.read());
}

void KeyExpansion::thread_Key_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        Key_2_ce0 = ap_const_logic_1;
    } else {
        Key_2_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_Key_3_address0() {
    Key_3_address0 =  (sc_lv<2>) (zext_ln167_fu_379_p1.read());
}

void KeyExpansion::thread_Key_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        Key_3_ce0 = ap_const_logic_1;
    } else {
        Key_3_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_Rcon_address0() {
    Rcon_address0 =  (sc_lv<4>) (zext_ln212_fu_527_p1.read());
}

void KeyExpansion::thread_Rcon_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        Rcon_ce0 = ap_const_logic_1;
    } else {
        Rcon_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_RoundKey_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        RoundKey_0_address0 =  (sc_lv<6>) (zext_ln227_1_fu_1050_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        RoundKey_0_address0 =  (sc_lv<6>) (zext_ln227_fu_532_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        RoundKey_0_address0 =  (sc_lv<6>) (zext_ln181_fu_417_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        RoundKey_0_address0 =  (sc_lv<6>) (zext_ln167_reg_1093.read());
    } else {
        RoundKey_0_address0 = "XXXXXX";
    }
}

void KeyExpansion::thread_RoundKey_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        RoundKey_0_ce0 = ap_const_logic_1;
    } else {
        RoundKey_0_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_RoundKey_0_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        RoundKey_0_d0 = xor_ln227_fu_1043_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        RoundKey_0_d0 = Key_0_q0.read();
    } else {
        RoundKey_0_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeyExpansion::thread_RoundKey_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        RoundKey_0_we0 = ap_const_logic_1;
    } else {
        RoundKey_0_we0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_RoundKey_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        RoundKey_1_address0 =  (sc_lv<6>) (zext_ln227_1_fu_1050_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        RoundKey_1_address0 =  (sc_lv<6>) (zext_ln227_fu_532_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        RoundKey_1_address0 =  (sc_lv<6>) (zext_ln181_fu_417_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        RoundKey_1_address0 =  (sc_lv<6>) (zext_ln167_reg_1093.read());
    } else {
        RoundKey_1_address0 = "XXXXXX";
    }
}

void KeyExpansion::thread_RoundKey_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        RoundKey_1_ce0 = ap_const_logic_1;
    } else {
        RoundKey_1_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_RoundKey_1_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        RoundKey_1_d0 = xor_ln228_fu_1058_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        RoundKey_1_d0 = Key_1_q0.read();
    } else {
        RoundKey_1_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeyExpansion::thread_RoundKey_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        RoundKey_1_we0 = ap_const_logic_1;
    } else {
        RoundKey_1_we0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_RoundKey_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        RoundKey_2_address0 =  (sc_lv<6>) (zext_ln227_1_fu_1050_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        RoundKey_2_address0 =  (sc_lv<6>) (zext_ln227_fu_532_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        RoundKey_2_address0 =  (sc_lv<6>) (zext_ln181_fu_417_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        RoundKey_2_address0 =  (sc_lv<6>) (zext_ln167_reg_1093.read());
    } else {
        RoundKey_2_address0 = "XXXXXX";
    }
}

void KeyExpansion::thread_RoundKey_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        RoundKey_2_ce0 = ap_const_logic_1;
    } else {
        RoundKey_2_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_RoundKey_2_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        RoundKey_2_d0 = xor_ln229_fu_1065_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        RoundKey_2_d0 = Key_2_q0.read();
    } else {
        RoundKey_2_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeyExpansion::thread_RoundKey_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        RoundKey_2_we0 = ap_const_logic_1;
    } else {
        RoundKey_2_we0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_RoundKey_3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        RoundKey_3_address0 =  (sc_lv<6>) (zext_ln227_1_fu_1050_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        RoundKey_3_address0 =  (sc_lv<6>) (zext_ln227_fu_532_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        RoundKey_3_address0 =  (sc_lv<6>) (zext_ln181_fu_417_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        RoundKey_3_address0 =  (sc_lv<6>) (zext_ln167_reg_1093.read());
    } else {
        RoundKey_3_address0 = "XXXXXX";
    }
}

void KeyExpansion::thread_RoundKey_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        RoundKey_3_ce0 = ap_const_logic_1;
    } else {
        RoundKey_3_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_RoundKey_3_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        RoundKey_3_d0 = xor_ln230_fu_1072_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        RoundKey_3_d0 = Key_3_q0.read();
    } else {
        RoundKey_3_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void KeyExpansion::thread_RoundKey_3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        RoundKey_3_we0 = ap_const_logic_1;
    } else {
        RoundKey_3_we0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_add_ln181_fu_401_p2() {
    add_ln181_fu_401_p2 = (!ap_const_lv8_FC.is_01() || !j_fu_393_p3.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FC) + sc_biguint<8>(j_fu_393_p3.read()));
}

void KeyExpansion::thread_add_ln227_fu_425_p2() {
    add_ln227_fu_425_p2 = (!ap_const_lv8_F0.is_01() || !j_fu_393_p3.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_F0) + sc_biguint<8>(j_fu_393_p3.read()));
}

void KeyExpansion::thread_and_ln207_fu_654_p2() {
    and_ln207_fu_654_p2 = (lshr_ln207_fu_642_p2.read() & lshr_ln207_1_fu_648_p2.read());
}

void KeyExpansion::thread_and_ln208_fu_769_p2() {
    and_ln208_fu_769_p2 = (lshr_ln208_fu_757_p2.read() & lshr_ln208_1_fu_763_p2.read());
}

void KeyExpansion::thread_and_ln209_fu_884_p2() {
    and_ln209_fu_884_p2 = (lshr_ln209_fu_872_p2.read() & lshr_ln209_1_fu_878_p2.read());
}

void KeyExpansion::thread_and_ln210_fu_999_p2() {
    and_ln210_fu_999_p2 = (lshr_ln210_fu_987_p2.read() & lshr_ln210_1_fu_993_p2.read());
}

void KeyExpansion::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void KeyExpansion::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void KeyExpansion::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void KeyExpansion::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void KeyExpansion::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void KeyExpansion::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void KeyExpansion::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln177_fu_387_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void KeyExpansion::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void KeyExpansion::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln177_fu_387_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void KeyExpansion::thread_empty_17_fu_456_p1() {
    empty_17_fu_456_p1 = RoundKey_1_q0.read().range(2-1, 0);
}

void KeyExpansion::thread_empty_18_fu_556_p2() {
    empty_18_fu_556_p2 = (tmp_2_fu_549_p3.read() | ap_const_lv5_7);
}

void KeyExpansion::thread_empty_19_fu_475_p1() {
    empty_19_fu_475_p1 = RoundKey_2_q0.read().range(2-1, 0);
}

void KeyExpansion::thread_empty_20_fu_671_p2() {
    empty_20_fu_671_p2 = (tmp_4_fu_664_p3.read() | ap_const_lv5_7);
}

void KeyExpansion::thread_empty_21_fu_494_p1() {
    empty_21_fu_494_p1 = RoundKey_3_q0.read().range(2-1, 0);
}

void KeyExpansion::thread_empty_22_fu_786_p2() {
    empty_22_fu_786_p2 = (tmp_6_fu_779_p3.read() | ap_const_lv5_7);
}

void KeyExpansion::thread_empty_23_fu_513_p1() {
    empty_23_fu_513_p1 = RoundKey_0_q0.read().range(2-1, 0);
}

void KeyExpansion::thread_empty_24_fu_901_p2() {
    empty_24_fu_901_p2 = (tmp_8_fu_894_p3.read() | ap_const_lv5_7);
}

void KeyExpansion::thread_i_2_fu_1079_p2() {
    i_2_fu_1079_p2 = (!ap_const_lv6_1.is_01() || !i_1_reg_355.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(i_1_reg_355.read()));
}

void KeyExpansion::thread_i_fu_373_p2() {
    i_fu_373_p2 = (!i_0_reg_344.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_344.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void KeyExpansion::thread_icmp_ln164_fu_367_p2() {
    icmp_ln164_fu_367_p2 = (!i_0_reg_344.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_344.read() == ap_const_lv3_4);
}

void KeyExpansion::thread_icmp_ln177_fu_387_p2() {
    icmp_ln177_fu_387_p2 = (!i_1_reg_355.read().is_01() || !ap_const_lv6_2C.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_355.read() == ap_const_lv6_2C);
}

void KeyExpansion::thread_icmp_ln188_fu_543_p2() {
    icmp_ln188_fu_543_p2 = (!trunc_ln177_fu_539_p1.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln177_fu_539_p1.read() == ap_const_lv2_0);
}

void KeyExpansion::thread_icmp_ln207_fu_562_p2() {
    icmp_ln207_fu_562_p2 = (!tmp_2_fu_549_p3.read().is_01() || !empty_18_fu_556_p2.read().is_01())? sc_lv<1>(): (sc_biguint<5>(tmp_2_fu_549_p3.read()) > sc_biguint<5>(empty_18_fu_556_p2.read()));
}

void KeyExpansion::thread_icmp_ln208_fu_677_p2() {
    icmp_ln208_fu_677_p2 = (!tmp_4_fu_664_p3.read().is_01() || !empty_20_fu_671_p2.read().is_01())? sc_lv<1>(): (sc_biguint<5>(tmp_4_fu_664_p3.read()) > sc_biguint<5>(empty_20_fu_671_p2.read()));
}

void KeyExpansion::thread_icmp_ln209_fu_792_p2() {
    icmp_ln209_fu_792_p2 = (!tmp_6_fu_779_p3.read().is_01() || !empty_22_fu_786_p2.read().is_01())? sc_lv<1>(): (sc_biguint<5>(tmp_6_fu_779_p3.read()) > sc_biguint<5>(empty_22_fu_786_p2.read()));
}

void KeyExpansion::thread_icmp_ln210_fu_907_p2() {
    icmp_ln210_fu_907_p2 = (!tmp_8_fu_894_p3.read().is_01() || !empty_24_fu_901_p2.read().is_01())? sc_lv<1>(): (sc_biguint<5>(tmp_8_fu_894_p3.read()) > sc_biguint<5>(empty_24_fu_901_p2.read()));
}

void KeyExpansion::thread_j_fu_393_p3() {
    j_fu_393_p3 = esl_concat<6,2>(i_1_reg_355.read(), ap_const_lv2_0);
}

void KeyExpansion::thread_lshr_ln1_fu_441_p4() {
    lshr_ln1_fu_441_p4 = RoundKey_1_q0.read().range(7, 2);
}

void KeyExpansion::thread_lshr_ln207_1_fu_648_p2() {
    lshr_ln207_1_fu_648_p2 = (!zext_ln207_4_fu_638_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF >> (unsigned short)zext_ln207_4_fu_638_p1.read().to_uint();
}

void KeyExpansion::thread_lshr_ln207_fu_642_p2() {
    lshr_ln207_fu_642_p2 = (!zext_ln207_3_fu_634_p1.read().is_01())? sc_lv<32>(): select_ln207_1_fu_612_p3.read() >> (unsigned short)zext_ln207_3_fu_634_p1.read().to_uint();
}

void KeyExpansion::thread_lshr_ln208_1_fu_763_p2() {
    lshr_ln208_1_fu_763_p2 = (!zext_ln208_4_fu_753_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF >> (unsigned short)zext_ln208_4_fu_753_p1.read().to_uint();
}

void KeyExpansion::thread_lshr_ln208_fu_757_p2() {
    lshr_ln208_fu_757_p2 = (!zext_ln208_3_fu_749_p1.read().is_01())? sc_lv<32>(): select_ln208_1_fu_727_p3.read() >> (unsigned short)zext_ln208_3_fu_749_p1.read().to_uint();
}

void KeyExpansion::thread_lshr_ln209_1_fu_878_p2() {
    lshr_ln209_1_fu_878_p2 = (!zext_ln209_4_fu_868_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF >> (unsigned short)zext_ln209_4_fu_868_p1.read().to_uint();
}

void KeyExpansion::thread_lshr_ln209_fu_872_p2() {
    lshr_ln209_fu_872_p2 = (!zext_ln209_3_fu_864_p1.read().is_01())? sc_lv<32>(): select_ln209_1_fu_842_p3.read() >> (unsigned short)zext_ln209_3_fu_864_p1.read().to_uint();
}

void KeyExpansion::thread_lshr_ln210_1_fu_993_p2() {
    lshr_ln210_1_fu_993_p2 = (!zext_ln210_4_fu_983_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF >> (unsigned short)zext_ln210_4_fu_983_p1.read().to_uint();
}

void KeyExpansion::thread_lshr_ln210_fu_987_p2() {
    lshr_ln210_fu_987_p2 = (!zext_ln210_3_fu_979_p1.read().is_01())? sc_lv<32>(): select_ln210_1_fu_957_p3.read() >> (unsigned short)zext_ln210_3_fu_979_p1.read().to_uint();
}

void KeyExpansion::thread_lshr_ln2_fu_460_p4() {
    lshr_ln2_fu_460_p4 = RoundKey_2_q0.read().range(7, 2);
}

void KeyExpansion::thread_lshr_ln3_fu_479_p4() {
    lshr_ln3_fu_479_p4 = RoundKey_3_q0.read().range(7, 2);
}

void KeyExpansion::thread_lshr_ln4_fu_498_p4() {
    lshr_ln4_fu_498_p4 = RoundKey_0_q0.read().range(7, 2);
}

void KeyExpansion::thread_lshr_ln5_fu_517_p4() {
    lshr_ln5_fu_517_p4 = i_1_reg_355.read().range(5, 2);
}

void KeyExpansion::thread_lshr_ln_fu_407_p4() {
    lshr_ln_fu_407_p4 = add_ln181_fu_401_p2.read().range(7, 2);
}

void KeyExpansion::thread_sbox_address0() {
    sbox_address0 =  (sc_lv<6>) (zext_ln207_fu_451_p1.read());
}

void KeyExpansion::thread_sbox_address1() {
    sbox_address1 =  (sc_lv<6>) (zext_ln208_fu_470_p1.read());
}

void KeyExpansion::thread_sbox_address2() {
    sbox_address2 =  (sc_lv<6>) (zext_ln209_fu_489_p1.read());
}

void KeyExpansion::thread_sbox_address3() {
    sbox_address3 =  (sc_lv<6>) (zext_ln210_fu_508_p1.read());
}

void KeyExpansion::thread_sbox_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sbox_ce0 = ap_const_logic_1;
    } else {
        sbox_ce0 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_sbox_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sbox_ce1 = ap_const_logic_1;
    } else {
        sbox_ce1 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_sbox_ce2() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sbox_ce2 = ap_const_logic_1;
    } else {
        sbox_ce2 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_sbox_ce3() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sbox_ce3 = ap_const_logic_1;
    } else {
        sbox_ce3 = ap_const_logic_0;
    }
}

void KeyExpansion::thread_select_ln207_1_fu_612_p3() {
    select_ln207_1_fu_612_p3 = (!icmp_ln207_fu_562_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln207_fu_562_p2.read()[0].to_bool())? tmp_fu_576_p4.read(): sbox_q0.read());
}

void KeyExpansion::thread_select_ln207_2_fu_620_p3() {
    select_ln207_2_fu_620_p3 = (!icmp_ln207_fu_562_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln207_fu_562_p2.read()[0].to_bool())? xor_ln207_fu_592_p2.read(): zext_ln207_1_fu_568_p1.read());
}

void KeyExpansion::thread_select_ln207_fu_604_p3() {
    select_ln207_fu_604_p3 = (!icmp_ln207_fu_562_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln207_fu_562_p2.read()[0].to_bool())? sub_ln207_fu_586_p2.read(): sub_ln207_1_fu_598_p2.read());
}

void KeyExpansion::thread_select_ln208_1_fu_727_p3() {
    select_ln208_1_fu_727_p3 = (!icmp_ln208_fu_677_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln208_fu_677_p2.read()[0].to_bool())? tmp_1_fu_691_p4.read(): sbox_q1.read());
}

void KeyExpansion::thread_select_ln208_2_fu_735_p3() {
    select_ln208_2_fu_735_p3 = (!icmp_ln208_fu_677_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln208_fu_677_p2.read()[0].to_bool())? xor_ln208_fu_707_p2.read(): zext_ln208_1_fu_683_p1.read());
}

void KeyExpansion::thread_select_ln208_fu_719_p3() {
    select_ln208_fu_719_p3 = (!icmp_ln208_fu_677_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln208_fu_677_p2.read()[0].to_bool())? sub_ln208_fu_701_p2.read(): sub_ln208_1_fu_713_p2.read());
}

void KeyExpansion::thread_select_ln209_1_fu_842_p3() {
    select_ln209_1_fu_842_p3 = (!icmp_ln209_fu_792_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln209_fu_792_p2.read()[0].to_bool())? tmp_3_fu_806_p4.read(): sbox_q2.read());
}

void KeyExpansion::thread_select_ln209_2_fu_850_p3() {
    select_ln209_2_fu_850_p3 = (!icmp_ln209_fu_792_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln209_fu_792_p2.read()[0].to_bool())? xor_ln209_fu_822_p2.read(): zext_ln209_1_fu_798_p1.read());
}

void KeyExpansion::thread_select_ln209_fu_834_p3() {
    select_ln209_fu_834_p3 = (!icmp_ln209_fu_792_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln209_fu_792_p2.read()[0].to_bool())? sub_ln209_fu_816_p2.read(): sub_ln209_1_fu_828_p2.read());
}

void KeyExpansion::thread_select_ln210_1_fu_957_p3() {
    select_ln210_1_fu_957_p3 = (!icmp_ln210_fu_907_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln210_fu_907_p2.read()[0].to_bool())? tmp_5_fu_921_p4.read(): sbox_q3.read());
}

void KeyExpansion::thread_select_ln210_2_fu_965_p3() {
    select_ln210_2_fu_965_p3 = (!icmp_ln210_fu_907_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln210_fu_907_p2.read()[0].to_bool())? xor_ln210_fu_937_p2.read(): zext_ln210_1_fu_913_p1.read());
}

void KeyExpansion::thread_select_ln210_fu_949_p3() {
    select_ln210_fu_949_p3 = (!icmp_ln210_fu_907_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln210_fu_907_p2.read()[0].to_bool())? sub_ln210_fu_931_p2.read(): sub_ln210_1_fu_943_p2.read());
}

void KeyExpansion::thread_sub_ln207_1_fu_598_p2() {
    sub_ln207_1_fu_598_p2 = (!zext_ln207_2_fu_572_p1.read().is_01() || !zext_ln207_1_fu_568_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln207_2_fu_572_p1.read()) - sc_biguint<6>(zext_ln207_1_fu_568_p1.read()));
}

void KeyExpansion::thread_sub_ln207_2_fu_628_p2() {
    sub_ln207_2_fu_628_p2 = (!ap_const_lv6_1F.is_01() || !select_ln207_fu_604_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1F) - sc_biguint<6>(select_ln207_fu_604_p3.read()));
}

void KeyExpansion::thread_sub_ln207_fu_586_p2() {
    sub_ln207_fu_586_p2 = (!zext_ln207_1_fu_568_p1.read().is_01() || !zext_ln207_2_fu_572_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln207_1_fu_568_p1.read()) - sc_biguint<6>(zext_ln207_2_fu_572_p1.read()));
}

void KeyExpansion::thread_sub_ln208_1_fu_713_p2() {
    sub_ln208_1_fu_713_p2 = (!zext_ln208_2_fu_687_p1.read().is_01() || !zext_ln208_1_fu_683_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln208_2_fu_687_p1.read()) - sc_biguint<6>(zext_ln208_1_fu_683_p1.read()));
}

void KeyExpansion::thread_sub_ln208_2_fu_743_p2() {
    sub_ln208_2_fu_743_p2 = (!ap_const_lv6_1F.is_01() || !select_ln208_fu_719_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1F) - sc_biguint<6>(select_ln208_fu_719_p3.read()));
}

void KeyExpansion::thread_sub_ln208_fu_701_p2() {
    sub_ln208_fu_701_p2 = (!zext_ln208_1_fu_683_p1.read().is_01() || !zext_ln208_2_fu_687_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln208_1_fu_683_p1.read()) - sc_biguint<6>(zext_ln208_2_fu_687_p1.read()));
}

void KeyExpansion::thread_sub_ln209_1_fu_828_p2() {
    sub_ln209_1_fu_828_p2 = (!zext_ln209_2_fu_802_p1.read().is_01() || !zext_ln209_1_fu_798_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln209_2_fu_802_p1.read()) - sc_biguint<6>(zext_ln209_1_fu_798_p1.read()));
}

void KeyExpansion::thread_sub_ln209_2_fu_858_p2() {
    sub_ln209_2_fu_858_p2 = (!ap_const_lv6_1F.is_01() || !select_ln209_fu_834_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1F) - sc_biguint<6>(select_ln209_fu_834_p3.read()));
}

void KeyExpansion::thread_sub_ln209_fu_816_p2() {
    sub_ln209_fu_816_p2 = (!zext_ln209_1_fu_798_p1.read().is_01() || !zext_ln209_2_fu_802_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln209_1_fu_798_p1.read()) - sc_biguint<6>(zext_ln209_2_fu_802_p1.read()));
}

void KeyExpansion::thread_sub_ln210_1_fu_943_p2() {
    sub_ln210_1_fu_943_p2 = (!zext_ln210_2_fu_917_p1.read().is_01() || !zext_ln210_1_fu_913_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln210_2_fu_917_p1.read()) - sc_biguint<6>(zext_ln210_1_fu_913_p1.read()));
}

void KeyExpansion::thread_sub_ln210_2_fu_973_p2() {
    sub_ln210_2_fu_973_p2 = (!ap_const_lv6_1F.is_01() || !select_ln210_fu_949_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1F) - sc_biguint<6>(select_ln210_fu_949_p3.read()));
}

void KeyExpansion::thread_sub_ln210_fu_931_p2() {
    sub_ln210_fu_931_p2 = (!zext_ln210_1_fu_913_p1.read().is_01() || !zext_ln210_2_fu_917_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln210_1_fu_913_p1.read()) - sc_biguint<6>(zext_ln210_2_fu_917_p1.read()));
}

void KeyExpansion::thread_tempa_0_2_fu_1036_p3() {
    tempa_0_2_fu_1036_p3 = (!icmp_ln188_fu_543_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln188_fu_543_p2.read()[0].to_bool())? tempa_0_fu_1009_p2.read(): tempa_0_3_reg_1149.read());
}

void KeyExpansion::thread_tempa_0_fu_1009_p2() {
    tempa_0_fu_1009_p2 = (Rcon_q0.read() ^ trunc_ln207_fu_660_p1.read());
}

void KeyExpansion::thread_tempa_1_1_fu_775_p1() {
    tempa_1_1_fu_775_p1 = and_ln208_fu_769_p2.read().range(8-1, 0);
}

void KeyExpansion::thread_tempa_1_2_fu_1029_p3() {
    tempa_1_2_fu_1029_p3 = (!icmp_ln188_fu_543_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln188_fu_543_p2.read()[0].to_bool())? tempa_1_1_fu_775_p1.read(): tempa_1_reg_1154.read());
}

void KeyExpansion::thread_tempa_2_1_fu_890_p1() {
    tempa_2_1_fu_890_p1 = and_ln209_fu_884_p2.read().range(8-1, 0);
}

void KeyExpansion::thread_tempa_2_2_fu_1022_p3() {
    tempa_2_2_fu_1022_p3 = (!icmp_ln188_fu_543_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln188_fu_543_p2.read()[0].to_bool())? tempa_2_1_fu_890_p1.read(): tempa_2_reg_1159.read());
}

void KeyExpansion::thread_tempa_3_1_fu_1005_p1() {
    tempa_3_1_fu_1005_p1 = and_ln210_fu_999_p2.read().range(8-1, 0);
}

void KeyExpansion::thread_tempa_3_2_fu_1015_p3() {
    tempa_3_2_fu_1015_p3 = (!icmp_ln188_fu_543_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln188_fu_543_p2.read()[0].to_bool())? tempa_3_1_fu_1005_p1.read(): tempa_3_reg_1164.read());
}

void KeyExpansion::thread_tmp_1_fu_691_p4() {
    tmp_1_fu_691_p4 = sbox_q1.read().range(0, 31);
}

void KeyExpansion::thread_tmp_2_fu_549_p3() {
    tmp_2_fu_549_p3 = esl_concat<2,3>(empty_17_reg_1174.read(), ap_const_lv3_0);
}

void KeyExpansion::thread_tmp_3_fu_806_p4() {
    tmp_3_fu_806_p4 = sbox_q2.read().range(0, 31);
}

void KeyExpansion::thread_tmp_4_fu_664_p3() {
    tmp_4_fu_664_p3 = esl_concat<2,3>(empty_19_reg_1184.read(), ap_const_lv3_0);
}

void KeyExpansion::thread_tmp_5_fu_921_p4() {
    tmp_5_fu_921_p4 = sbox_q3.read().range(0, 31);
}

void KeyExpansion::thread_tmp_6_fu_779_p3() {
    tmp_6_fu_779_p3 = esl_concat<2,3>(empty_21_reg_1194.read(), ap_const_lv3_0);
}

void KeyExpansion::thread_tmp_8_fu_894_p3() {
    tmp_8_fu_894_p3 = esl_concat<2,3>(empty_23_reg_1204.read(), ap_const_lv3_0);
}

void KeyExpansion::thread_tmp_fu_576_p4() {
    tmp_fu_576_p4 = sbox_q0.read().range(0, 31);
}

void KeyExpansion::thread_trunc_ln177_fu_539_p1() {
    trunc_ln177_fu_539_p1 = i_1_reg_355.read().range(2-1, 0);
}

void KeyExpansion::thread_trunc_ln207_fu_660_p1() {
    trunc_ln207_fu_660_p1 = and_ln207_fu_654_p2.read().range(8-1, 0);
}

void KeyExpansion::thread_xor_ln207_fu_592_p2() {
    xor_ln207_fu_592_p2 = (zext_ln207_1_fu_568_p1.read() ^ ap_const_lv6_1F);
}

void KeyExpansion::thread_xor_ln208_fu_707_p2() {
    xor_ln208_fu_707_p2 = (zext_ln208_1_fu_683_p1.read() ^ ap_const_lv6_1F);
}

void KeyExpansion::thread_xor_ln209_fu_822_p2() {
    xor_ln209_fu_822_p2 = (zext_ln209_1_fu_798_p1.read() ^ ap_const_lv6_1F);
}

void KeyExpansion::thread_xor_ln210_fu_937_p2() {
    xor_ln210_fu_937_p2 = (zext_ln210_1_fu_913_p1.read() ^ ap_const_lv6_1F);
}

void KeyExpansion::thread_xor_ln227_fu_1043_p2() {
    xor_ln227_fu_1043_p2 = (RoundKey_0_q0.read() ^ tempa_0_2_fu_1036_p3.read());
}

void KeyExpansion::thread_xor_ln228_fu_1058_p2() {
    xor_ln228_fu_1058_p2 = (RoundKey_1_q0.read() ^ tempa_1_2_fu_1029_p3.read());
}

void KeyExpansion::thread_xor_ln229_fu_1065_p2() {
    xor_ln229_fu_1065_p2 = (RoundKey_2_q0.read() ^ tempa_2_2_fu_1022_p3.read());
}

void KeyExpansion::thread_xor_ln230_fu_1072_p2() {
    xor_ln230_fu_1072_p2 = (RoundKey_3_q0.read() ^ tempa_3_2_fu_1015_p3.read());
}

void KeyExpansion::thread_zext_ln167_fu_379_p1() {
    zext_ln167_fu_379_p1 = esl_zext<64,3>(i_0_reg_344.read());
}

void KeyExpansion::thread_zext_ln181_fu_417_p1() {
    zext_ln181_fu_417_p1 = esl_zext<64,6>(lshr_ln_fu_407_p4.read());
}

void KeyExpansion::thread_zext_ln207_1_fu_568_p1() {
    zext_ln207_1_fu_568_p1 = esl_zext<6,5>(tmp_2_fu_549_p3.read());
}

void KeyExpansion::thread_zext_ln207_2_fu_572_p1() {
    zext_ln207_2_fu_572_p1 = esl_zext<6,5>(empty_18_fu_556_p2.read());
}

void KeyExpansion::thread_zext_ln207_3_fu_634_p1() {
    zext_ln207_3_fu_634_p1 = esl_zext<32,6>(select_ln207_2_fu_620_p3.read());
}

void KeyExpansion::thread_zext_ln207_4_fu_638_p1() {
    zext_ln207_4_fu_638_p1 = esl_zext<32,6>(sub_ln207_2_fu_628_p2.read());
}

void KeyExpansion::thread_zext_ln207_fu_451_p1() {
    zext_ln207_fu_451_p1 = esl_zext<64,6>(lshr_ln1_fu_441_p4.read());
}

void KeyExpansion::thread_zext_ln208_1_fu_683_p1() {
    zext_ln208_1_fu_683_p1 = esl_zext<6,5>(tmp_4_fu_664_p3.read());
}

void KeyExpansion::thread_zext_ln208_2_fu_687_p1() {
    zext_ln208_2_fu_687_p1 = esl_zext<6,5>(empty_20_fu_671_p2.read());
}

void KeyExpansion::thread_zext_ln208_3_fu_749_p1() {
    zext_ln208_3_fu_749_p1 = esl_zext<32,6>(select_ln208_2_fu_735_p3.read());
}

void KeyExpansion::thread_zext_ln208_4_fu_753_p1() {
    zext_ln208_4_fu_753_p1 = esl_zext<32,6>(sub_ln208_2_fu_743_p2.read());
}

void KeyExpansion::thread_zext_ln208_fu_470_p1() {
    zext_ln208_fu_470_p1 = esl_zext<64,6>(lshr_ln2_fu_460_p4.read());
}

void KeyExpansion::thread_zext_ln209_1_fu_798_p1() {
    zext_ln209_1_fu_798_p1 = esl_zext<6,5>(tmp_6_fu_779_p3.read());
}

void KeyExpansion::thread_zext_ln209_2_fu_802_p1() {
    zext_ln209_2_fu_802_p1 = esl_zext<6,5>(empty_22_fu_786_p2.read());
}

void KeyExpansion::thread_zext_ln209_3_fu_864_p1() {
    zext_ln209_3_fu_864_p1 = esl_zext<32,6>(select_ln209_2_fu_850_p3.read());
}

void KeyExpansion::thread_zext_ln209_4_fu_868_p1() {
    zext_ln209_4_fu_868_p1 = esl_zext<32,6>(sub_ln209_2_fu_858_p2.read());
}

void KeyExpansion::thread_zext_ln209_fu_489_p1() {
    zext_ln209_fu_489_p1 = esl_zext<64,6>(lshr_ln3_fu_479_p4.read());
}

void KeyExpansion::thread_zext_ln210_1_fu_913_p1() {
    zext_ln210_1_fu_913_p1 = esl_zext<6,5>(tmp_8_fu_894_p3.read());
}

void KeyExpansion::thread_zext_ln210_2_fu_917_p1() {
    zext_ln210_2_fu_917_p1 = esl_zext<6,5>(empty_24_fu_901_p2.read());
}

void KeyExpansion::thread_zext_ln210_3_fu_979_p1() {
    zext_ln210_3_fu_979_p1 = esl_zext<32,6>(select_ln210_2_fu_965_p3.read());
}

void KeyExpansion::thread_zext_ln210_4_fu_983_p1() {
    zext_ln210_4_fu_983_p1 = esl_zext<32,6>(sub_ln210_2_fu_973_p2.read());
}

void KeyExpansion::thread_zext_ln210_fu_508_p1() {
    zext_ln210_fu_508_p1 = esl_zext<64,6>(lshr_ln4_fu_498_p4.read());
}

void KeyExpansion::thread_zext_ln212_fu_527_p1() {
    zext_ln212_fu_527_p1 = esl_zext<64,4>(lshr_ln5_fu_517_p4.read());
}

void KeyExpansion::thread_zext_ln227_1_fu_1050_p1() {
    zext_ln227_1_fu_1050_p1 = esl_zext<64,6>(i_1_reg_355.read());
}

void KeyExpansion::thread_zext_ln227_fu_532_p1() {
    zext_ln227_fu_532_p1 = esl_zext<64,6>(lshr_ln6_reg_1144.read());
}

void KeyExpansion::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln164_fu_367_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln177_fu_387_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

void KeyExpansion::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_0_address0\" :  \"" << RoundKey_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_0_ce0\" :  \"" << RoundKey_0_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_0_we0\" :  \"" << RoundKey_0_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_0_d0\" :  \"" << RoundKey_0_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"RoundKey_0_q0\" :  \"" << RoundKey_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_1_address0\" :  \"" << RoundKey_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_1_ce0\" :  \"" << RoundKey_1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_1_we0\" :  \"" << RoundKey_1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_1_d0\" :  \"" << RoundKey_1_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"RoundKey_1_q0\" :  \"" << RoundKey_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_2_address0\" :  \"" << RoundKey_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_2_ce0\" :  \"" << RoundKey_2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_2_we0\" :  \"" << RoundKey_2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_2_d0\" :  \"" << RoundKey_2_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"RoundKey_2_q0\" :  \"" << RoundKey_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_3_address0\" :  \"" << RoundKey_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_3_ce0\" :  \"" << RoundKey_3_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_3_we0\" :  \"" << RoundKey_3_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"RoundKey_3_d0\" :  \"" << RoundKey_3_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"RoundKey_3_q0\" :  \"" << RoundKey_3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Key_0_address0\" :  \"" << Key_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Key_0_ce0\" :  \"" << Key_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Key_0_q0\" :  \"" << Key_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Key_1_address0\" :  \"" << Key_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Key_1_ce0\" :  \"" << Key_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Key_1_q0\" :  \"" << Key_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Key_2_address0\" :  \"" << Key_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Key_2_ce0\" :  \"" << Key_2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Key_2_q0\" :  \"" << Key_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Key_3_address0\" :  \"" << Key_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Key_3_ce0\" :  \"" << Key_3_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Key_3_q0\" :  \"" << Key_3_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

