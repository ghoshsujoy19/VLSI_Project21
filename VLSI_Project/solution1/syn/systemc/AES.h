// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AES_HH_
#define _AES_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Cipher.h"
#include "KeyExpansion.h"

namespace ap_rtl {

struct AES : public sc_module {
    // Port declarations 160
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > ctx_RoundKey_0_address0;
    sc_out< sc_logic > ctx_RoundKey_0_ce0;
    sc_out< sc_logic > ctx_RoundKey_0_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_0_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_0_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_1_address0;
    sc_out< sc_logic > ctx_RoundKey_1_ce0;
    sc_out< sc_logic > ctx_RoundKey_1_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_1_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_1_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_2_address0;
    sc_out< sc_logic > ctx_RoundKey_2_ce0;
    sc_out< sc_logic > ctx_RoundKey_2_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_2_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_2_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_3_address0;
    sc_out< sc_logic > ctx_RoundKey_3_ce0;
    sc_out< sc_logic > ctx_RoundKey_3_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_3_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_3_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_4_address0;
    sc_out< sc_logic > ctx_RoundKey_4_ce0;
    sc_out< sc_logic > ctx_RoundKey_4_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_4_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_4_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_5_address0;
    sc_out< sc_logic > ctx_RoundKey_5_ce0;
    sc_out< sc_logic > ctx_RoundKey_5_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_5_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_5_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_6_address0;
    sc_out< sc_logic > ctx_RoundKey_6_ce0;
    sc_out< sc_logic > ctx_RoundKey_6_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_6_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_6_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_7_address0;
    sc_out< sc_logic > ctx_RoundKey_7_ce0;
    sc_out< sc_logic > ctx_RoundKey_7_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_7_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_7_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_8_address0;
    sc_out< sc_logic > ctx_RoundKey_8_ce0;
    sc_out< sc_logic > ctx_RoundKey_8_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_8_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_8_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_9_address0;
    sc_out< sc_logic > ctx_RoundKey_9_ce0;
    sc_out< sc_logic > ctx_RoundKey_9_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_9_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_9_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_10_address0;
    sc_out< sc_logic > ctx_RoundKey_10_ce0;
    sc_out< sc_logic > ctx_RoundKey_10_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_10_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_10_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_11_address0;
    sc_out< sc_logic > ctx_RoundKey_11_ce0;
    sc_out< sc_logic > ctx_RoundKey_11_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_11_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_11_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_12_address0;
    sc_out< sc_logic > ctx_RoundKey_12_ce0;
    sc_out< sc_logic > ctx_RoundKey_12_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_12_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_12_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_13_address0;
    sc_out< sc_logic > ctx_RoundKey_13_ce0;
    sc_out< sc_logic > ctx_RoundKey_13_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_13_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_13_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_14_address0;
    sc_out< sc_logic > ctx_RoundKey_14_ce0;
    sc_out< sc_logic > ctx_RoundKey_14_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_14_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_14_q0;
    sc_out< sc_lv<4> > ctx_RoundKey_15_address0;
    sc_out< sc_logic > ctx_RoundKey_15_ce0;
    sc_out< sc_logic > ctx_RoundKey_15_we0;
    sc_out< sc_lv<8> > ctx_RoundKey_15_d0;
    sc_in< sc_lv<8> > ctx_RoundKey_15_q0;
    sc_out< sc_lv<4> > ctx_Iv_address0;
    sc_out< sc_logic > ctx_Iv_ce0;
    sc_out< sc_logic > ctx_Iv_we0;
    sc_out< sc_lv<8> > ctx_Iv_d0;
    sc_in< sc_lv<8> > ctx_Iv_q0;
    sc_out< sc_lv<4> > ctx_Iv_address1;
    sc_out< sc_logic > ctx_Iv_ce1;
    sc_out< sc_logic > ctx_Iv_we1;
    sc_out< sc_lv<8> > ctx_Iv_d1;
    sc_in< sc_lv<8> > ctx_Iv_q1;
    sc_in< sc_lv<8> > key_0;
    sc_in< sc_lv<8> > key_1;
    sc_in< sc_lv<8> > key_2;
    sc_in< sc_lv<8> > key_3;
    sc_in< sc_lv<8> > key_4;
    sc_in< sc_lv<8> > key_5;
    sc_in< sc_lv<8> > key_6;
    sc_in< sc_lv<8> > key_7;
    sc_in< sc_lv<8> > key_8;
    sc_in< sc_lv<8> > key_9;
    sc_in< sc_lv<8> > key_10;
    sc_in< sc_lv<8> > key_11;
    sc_in< sc_lv<8> > key_12;
    sc_in< sc_lv<8> > key_13;
    sc_in< sc_lv<8> > key_14;
    sc_in< sc_lv<8> > key_15;
    sc_in< sc_lv<8> > in_0_0_i;
    sc_out< sc_lv<8> > in_0_0_o;
    sc_out< sc_logic > in_0_0_o_ap_vld;
    sc_in< sc_lv<8> > in_0_1_i;
    sc_out< sc_lv<8> > in_0_1_o;
    sc_out< sc_logic > in_0_1_o_ap_vld;
    sc_in< sc_lv<8> > in_0_2_i;
    sc_out< sc_lv<8> > in_0_2_o;
    sc_out< sc_logic > in_0_2_o_ap_vld;
    sc_in< sc_lv<8> > in_0_3_i;
    sc_out< sc_lv<8> > in_0_3_o;
    sc_out< sc_logic > in_0_3_o_ap_vld;
    sc_in< sc_lv<8> > in_1_0_i;
    sc_out< sc_lv<8> > in_1_0_o;
    sc_out< sc_logic > in_1_0_o_ap_vld;
    sc_in< sc_lv<8> > in_1_1_i;
    sc_out< sc_lv<8> > in_1_1_o;
    sc_out< sc_logic > in_1_1_o_ap_vld;
    sc_in< sc_lv<8> > in_1_2_i;
    sc_out< sc_lv<8> > in_1_2_o;
    sc_out< sc_logic > in_1_2_o_ap_vld;
    sc_in< sc_lv<8> > in_1_3_i;
    sc_out< sc_lv<8> > in_1_3_o;
    sc_out< sc_logic > in_1_3_o_ap_vld;
    sc_in< sc_lv<8> > in_2_0_i;
    sc_out< sc_lv<8> > in_2_0_o;
    sc_out< sc_logic > in_2_0_o_ap_vld;
    sc_in< sc_lv<8> > in_2_1_i;
    sc_out< sc_lv<8> > in_2_1_o;
    sc_out< sc_logic > in_2_1_o_ap_vld;
    sc_in< sc_lv<8> > in_2_2_i;
    sc_out< sc_lv<8> > in_2_2_o;
    sc_out< sc_logic > in_2_2_o_ap_vld;
    sc_in< sc_lv<8> > in_2_3_i;
    sc_out< sc_lv<8> > in_2_3_o;
    sc_out< sc_logic > in_2_3_o_ap_vld;
    sc_in< sc_lv<8> > in_3_0_i;
    sc_out< sc_lv<8> > in_3_0_o;
    sc_out< sc_logic > in_3_0_o_ap_vld;
    sc_in< sc_lv<8> > in_3_1_i;
    sc_out< sc_lv<8> > in_3_1_o;
    sc_out< sc_logic > in_3_1_o_ap_vld;
    sc_in< sc_lv<8> > in_3_2_i;
    sc_out< sc_lv<8> > in_3_2_o;
    sc_out< sc_logic > in_3_2_o_ap_vld;
    sc_in< sc_lv<8> > in_3_3_i;
    sc_out< sc_lv<8> > in_3_3_o;
    sc_out< sc_logic > in_3_3_o_ap_vld;


    // Module declarations
    AES(sc_module_name name);
    SC_HAS_PROCESS(AES);

    ~AES();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Cipher* grp_Cipher_fu_450;
    KeyExpansion* grp_KeyExpansion_fu_550;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > grp_Cipher_fu_450_ap_start;
    sc_signal< sc_logic > grp_Cipher_fu_450_ap_done;
    sc_signal< sc_logic > grp_Cipher_fu_450_ap_idle;
    sc_signal< sc_logic > grp_Cipher_fu_450_ap_ready;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_0_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_0_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_1_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_1_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_2_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_2_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_3_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_3_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_4_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_4_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_5_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_5_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_6_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_6_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_7_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_7_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_8_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_8_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_9_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_9_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_10_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_10_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_11_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_11_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_12_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_12_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_13_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_13_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_14_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_14_ce0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_450_RoundKey_15_address0;
    sc_signal< sc_logic > grp_Cipher_fu_450_RoundKey_15_ce0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_1;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_2;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_3;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_4;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_5;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_6;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_7;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_8;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_9;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_10;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_11;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_12;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_13;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_14;
    sc_signal< sc_lv<8> > grp_Cipher_fu_450_ap_return_15;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_ap_start;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_ap_done;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_ap_idle;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_ap_ready;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_0_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_0_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_0_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_0_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_1_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_1_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_1_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_1_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_2_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_2_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_2_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_2_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_3_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_3_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_3_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_3_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_4_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_4_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_4_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_4_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_5_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_5_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_5_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_5_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_6_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_6_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_6_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_6_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_7_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_7_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_7_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_7_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_8_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_8_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_8_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_8_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_9_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_9_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_9_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_9_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_10_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_10_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_10_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_10_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_11_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_11_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_11_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_11_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_12_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_12_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_12_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_12_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_13_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_13_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_13_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_13_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_14_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_14_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_14_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_14_d0;
    sc_signal< sc_lv<4> > grp_KeyExpansion_fu_550_RoundKey_15_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_15_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_RoundKey_15_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_550_RoundKey_15_d0;
    sc_signal< sc_logic > grp_Cipher_fu_450_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_KeyExpansion_fu_550_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ctx_Iv_address0();
    void thread_ctx_Iv_address1();
    void thread_ctx_Iv_ce0();
    void thread_ctx_Iv_ce1();
    void thread_ctx_Iv_d0();
    void thread_ctx_Iv_d1();
    void thread_ctx_Iv_we0();
    void thread_ctx_Iv_we1();
    void thread_ctx_RoundKey_0_address0();
    void thread_ctx_RoundKey_0_ce0();
    void thread_ctx_RoundKey_0_d0();
    void thread_ctx_RoundKey_0_we0();
    void thread_ctx_RoundKey_10_address0();
    void thread_ctx_RoundKey_10_ce0();
    void thread_ctx_RoundKey_10_d0();
    void thread_ctx_RoundKey_10_we0();
    void thread_ctx_RoundKey_11_address0();
    void thread_ctx_RoundKey_11_ce0();
    void thread_ctx_RoundKey_11_d0();
    void thread_ctx_RoundKey_11_we0();
    void thread_ctx_RoundKey_12_address0();
    void thread_ctx_RoundKey_12_ce0();
    void thread_ctx_RoundKey_12_d0();
    void thread_ctx_RoundKey_12_we0();
    void thread_ctx_RoundKey_13_address0();
    void thread_ctx_RoundKey_13_ce0();
    void thread_ctx_RoundKey_13_d0();
    void thread_ctx_RoundKey_13_we0();
    void thread_ctx_RoundKey_14_address0();
    void thread_ctx_RoundKey_14_ce0();
    void thread_ctx_RoundKey_14_d0();
    void thread_ctx_RoundKey_14_we0();
    void thread_ctx_RoundKey_15_address0();
    void thread_ctx_RoundKey_15_ce0();
    void thread_ctx_RoundKey_15_d0();
    void thread_ctx_RoundKey_15_we0();
    void thread_ctx_RoundKey_1_address0();
    void thread_ctx_RoundKey_1_ce0();
    void thread_ctx_RoundKey_1_d0();
    void thread_ctx_RoundKey_1_we0();
    void thread_ctx_RoundKey_2_address0();
    void thread_ctx_RoundKey_2_ce0();
    void thread_ctx_RoundKey_2_d0();
    void thread_ctx_RoundKey_2_we0();
    void thread_ctx_RoundKey_3_address0();
    void thread_ctx_RoundKey_3_ce0();
    void thread_ctx_RoundKey_3_d0();
    void thread_ctx_RoundKey_3_we0();
    void thread_ctx_RoundKey_4_address0();
    void thread_ctx_RoundKey_4_ce0();
    void thread_ctx_RoundKey_4_d0();
    void thread_ctx_RoundKey_4_we0();
    void thread_ctx_RoundKey_5_address0();
    void thread_ctx_RoundKey_5_ce0();
    void thread_ctx_RoundKey_5_d0();
    void thread_ctx_RoundKey_5_we0();
    void thread_ctx_RoundKey_6_address0();
    void thread_ctx_RoundKey_6_ce0();
    void thread_ctx_RoundKey_6_d0();
    void thread_ctx_RoundKey_6_we0();
    void thread_ctx_RoundKey_7_address0();
    void thread_ctx_RoundKey_7_ce0();
    void thread_ctx_RoundKey_7_d0();
    void thread_ctx_RoundKey_7_we0();
    void thread_ctx_RoundKey_8_address0();
    void thread_ctx_RoundKey_8_ce0();
    void thread_ctx_RoundKey_8_d0();
    void thread_ctx_RoundKey_8_we0();
    void thread_ctx_RoundKey_9_address0();
    void thread_ctx_RoundKey_9_ce0();
    void thread_ctx_RoundKey_9_d0();
    void thread_ctx_RoundKey_9_we0();
    void thread_grp_Cipher_fu_450_ap_start();
    void thread_grp_KeyExpansion_fu_550_ap_start();
    void thread_in_0_0_o();
    void thread_in_0_0_o_ap_vld();
    void thread_in_0_1_o();
    void thread_in_0_1_o_ap_vld();
    void thread_in_0_2_o();
    void thread_in_0_2_o_ap_vld();
    void thread_in_0_3_o();
    void thread_in_0_3_o_ap_vld();
    void thread_in_1_0_o();
    void thread_in_1_0_o_ap_vld();
    void thread_in_1_1_o();
    void thread_in_1_1_o_ap_vld();
    void thread_in_1_2_o();
    void thread_in_1_2_o_ap_vld();
    void thread_in_1_3_o();
    void thread_in_1_3_o_ap_vld();
    void thread_in_2_0_o();
    void thread_in_2_0_o_ap_vld();
    void thread_in_2_1_o();
    void thread_in_2_1_o_ap_vld();
    void thread_in_2_2_o();
    void thread_in_2_2_o_ap_vld();
    void thread_in_2_3_o();
    void thread_in_2_3_o_ap_vld();
    void thread_in_3_0_o();
    void thread_in_3_0_o_ap_vld();
    void thread_in_3_1_o();
    void thread_in_3_1_o_ap_vld();
    void thread_in_3_2_o();
    void thread_in_3_2_o_ap_vld();
    void thread_in_3_3_o();
    void thread_in_3_3_o_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
