// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _InvMixColumns_HH_
#define _InvMixColumns_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "InvCipher_mux_42_cud.h"

namespace ap_rtl {

struct InvMixColumns : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > state_0_0_read;
    sc_in< sc_lv<8> > state_0_1_read;
    sc_in< sc_lv<8> > state_0_2_read;
    sc_in< sc_lv<8> > state_0_3_read;
    sc_in< sc_lv<8> > state_1_0_read;
    sc_in< sc_lv<8> > state_1_1_read;
    sc_in< sc_lv<8> > state_1_2_read;
    sc_in< sc_lv<8> > state_1_3_read;
    sc_in< sc_lv<8> > state_2_0_read;
    sc_in< sc_lv<8> > state_2_1_read;
    sc_in< sc_lv<8> > state_2_2_read;
    sc_in< sc_lv<8> > state_2_3_read;
    sc_in< sc_lv<8> > state_3_0_read;
    sc_in< sc_lv<8> > state_3_1_read;
    sc_in< sc_lv<8> > state_3_2_read;
    sc_in< sc_lv<8> > state_3_3_read;
    sc_out< sc_lv<8> > ap_return_0;
    sc_out< sc_lv<8> > ap_return_1;
    sc_out< sc_lv<8> > ap_return_2;
    sc_out< sc_lv<8> > ap_return_3;
    sc_out< sc_lv<8> > ap_return_4;
    sc_out< sc_lv<8> > ap_return_5;
    sc_out< sc_lv<8> > ap_return_6;
    sc_out< sc_lv<8> > ap_return_7;
    sc_out< sc_lv<8> > ap_return_8;
    sc_out< sc_lv<8> > ap_return_9;
    sc_out< sc_lv<8> > ap_return_10;
    sc_out< sc_lv<8> > ap_return_11;
    sc_out< sc_lv<8> > ap_return_12;
    sc_out< sc_lv<8> > ap_return_13;
    sc_out< sc_lv<8> > ap_return_14;
    sc_out< sc_lv<8> > ap_return_15;


    // Module declarations
    InvMixColumns(sc_module_name name);
    SC_HAS_PROCESS(InvMixColumns);

    ~InvMixColumns();

    sc_trace_file* mVcdFile;

    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U37;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U38;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U39;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U40;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U41;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U42;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U43;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U44;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U45;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U46;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U47;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U48;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U49;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U50;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U51;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U52;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U53;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U54;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U55;
    InvCipher_mux_42_cud<1,1,8,8,8,8,2,8>* InvCipher_mux_42_cud_U56;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_fu_315_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > state_3_3_1_fu_933_p6;
    sc_signal< sc_lv<1> > icmp_ln369_fu_309_p2;
    sc_signal< sc_lv<8> > state_3_2_1_fu_947_p6;
    sc_signal< sc_lv<8> > state_3_1_1_fu_961_p6;
    sc_signal< sc_lv<8> > state_3_0_1_fu_975_p6;
    sc_signal< sc_lv<8> > state_2_3_1_fu_989_p6;
    sc_signal< sc_lv<8> > state_2_2_1_fu_1003_p6;
    sc_signal< sc_lv<8> > state_2_1_1_fu_1017_p6;
    sc_signal< sc_lv<8> > state_2_0_1_fu_1031_p6;
    sc_signal< sc_lv<8> > state_1_3_1_fu_1045_p6;
    sc_signal< sc_lv<8> > state_1_2_1_fu_1059_p6;
    sc_signal< sc_lv<8> > state_1_1_1_fu_1073_p6;
    sc_signal< sc_lv<8> > state_1_0_1_fu_1087_p6;
    sc_signal< sc_lv<8> > state_0_3_1_fu_1101_p6;
    sc_signal< sc_lv<8> > state_0_2_1_fu_1115_p6;
    sc_signal< sc_lv<8> > state_0_1_1_fu_1129_p6;
    sc_signal< sc_lv<8> > state_0_0_1_fu_1143_p6;
    sc_signal< sc_lv<8> > state_0_0_0_reg_154;
    sc_signal< sc_lv<8> > state_0_1_0_reg_163;
    sc_signal< sc_lv<8> > state_0_2_0_reg_172;
    sc_signal< sc_lv<8> > state_0_3_0_reg_181;
    sc_signal< sc_lv<8> > state_1_0_0_reg_190;
    sc_signal< sc_lv<8> > state_1_1_0_reg_199;
    sc_signal< sc_lv<8> > state_1_2_0_reg_208;
    sc_signal< sc_lv<8> > state_1_3_0_reg_217;
    sc_signal< sc_lv<8> > state_2_0_0_reg_226;
    sc_signal< sc_lv<8> > state_2_1_0_reg_235;
    sc_signal< sc_lv<8> > state_2_2_0_reg_244;
    sc_signal< sc_lv<8> > state_2_3_0_reg_253;
    sc_signal< sc_lv<8> > state_3_0_0_reg_262;
    sc_signal< sc_lv<8> > state_3_1_0_reg_271;
    sc_signal< sc_lv<8> > state_3_2_0_reg_280;
    sc_signal< sc_lv<8> > state_3_3_0_reg_289;
    sc_signal< sc_lv<3> > i_0_reg_298;
    sc_signal< sc_lv<2> > trunc_ln371_fu_321_p1;
    sc_signal< sc_lv<8> > a_fu_325_p6;
    sc_signal< sc_lv<1> > tmp_fu_387_p3;
    sc_signal< sc_lv<8> > select_ln309_fu_395_p3;
    sc_signal< sc_lv<8> > shl_ln309_fu_381_p2;
    sc_signal< sc_lv<8> > xor_ln309_1_fu_403_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_415_p3;
    sc_signal< sc_lv<8> > select_ln309_1_fu_423_p3;
    sc_signal< sc_lv<8> > shl_ln309_1_fu_409_p2;
    sc_signal< sc_lv<8> > xor_ln309_2_fu_431_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_443_p3;
    sc_signal< sc_lv<8> > select_ln309_2_fu_451_p3;
    sc_signal< sc_lv<8> > shl_ln309_2_fu_437_p2;
    sc_signal< sc_lv<8> > b_fu_339_p6;
    sc_signal< sc_lv<1> > tmp_3_fu_471_p3;
    sc_signal< sc_lv<8> > select_ln309_3_fu_479_p3;
    sc_signal< sc_lv<8> > shl_ln309_3_fu_465_p2;
    sc_signal< sc_lv<8> > xor_ln309_4_fu_487_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_499_p3;
    sc_signal< sc_lv<8> > select_ln309_4_fu_507_p3;
    sc_signal< sc_lv<8> > shl_ln309_4_fu_493_p2;
    sc_signal< sc_lv<8> > xor_ln309_5_fu_515_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_527_p3;
    sc_signal< sc_lv<8> > select_ln309_5_fu_535_p3;
    sc_signal< sc_lv<8> > shl_ln309_5_fu_521_p2;
    sc_signal< sc_lv<8> > c_fu_353_p6;
    sc_signal< sc_lv<1> > tmp_6_fu_555_p3;
    sc_signal< sc_lv<8> > select_ln309_6_fu_563_p3;
    sc_signal< sc_lv<8> > shl_ln309_6_fu_549_p2;
    sc_signal< sc_lv<8> > xor_ln309_7_fu_571_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_583_p3;
    sc_signal< sc_lv<8> > select_ln309_7_fu_591_p3;
    sc_signal< sc_lv<8> > shl_ln309_7_fu_577_p2;
    sc_signal< sc_lv<8> > xor_ln309_8_fu_599_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_611_p3;
    sc_signal< sc_lv<8> > select_ln309_8_fu_619_p3;
    sc_signal< sc_lv<8> > shl_ln309_8_fu_605_p2;
    sc_signal< sc_lv<8> > d_fu_367_p6;
    sc_signal< sc_lv<1> > tmp_9_fu_639_p3;
    sc_signal< sc_lv<8> > select_ln309_9_fu_647_p3;
    sc_signal< sc_lv<8> > shl_ln309_9_fu_633_p2;
    sc_signal< sc_lv<8> > xor_ln309_10_fu_655_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_667_p3;
    sc_signal< sc_lv<8> > select_ln309_10_fu_675_p3;
    sc_signal< sc_lv<8> > shl_ln309_10_fu_661_p2;
    sc_signal< sc_lv<8> > xor_ln309_11_fu_683_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_695_p3;
    sc_signal< sc_lv<8> > select_ln309_11_fu_703_p3;
    sc_signal< sc_lv<8> > shl_ln309_11_fu_689_p2;
    sc_signal< sc_lv<8> > xor_ln309_6_fu_627_p2;
    sc_signal< sc_lv<8> > xor_ln309_fu_459_p2;
    sc_signal< sc_lv<8> > xor_ln376_1_fu_723_p2;
    sc_signal< sc_lv<8> > xor_ln309_3_fu_543_p2;
    sc_signal< sc_lv<8> > xor_ln376_2_fu_729_p2;
    sc_signal< sc_lv<8> > xor_ln376_fu_717_p2;
    sc_signal< sc_lv<8> > xor_ln376_4_fu_741_p2;
    sc_signal< sc_lv<8> > xor_ln309_9_fu_711_p2;
    sc_signal< sc_lv<8> > xor_ln376_6_fu_753_p2;
    sc_signal< sc_lv<8> > xor_ln376_7_fu_759_p2;
    sc_signal< sc_lv<8> > xor_ln376_5_fu_747_p2;
    sc_signal< sc_lv<8> > xor_ln376_8_fu_765_p2;
    sc_signal< sc_lv<8> > xor_ln376_3_fu_735_p2;
    sc_signal< sc_lv<8> > xor_ln377_1_fu_783_p2;
    sc_signal< sc_lv<8> > xor_ln377_2_fu_789_p2;
    sc_signal< sc_lv<8> > xor_ln377_fu_777_p2;
    sc_signal< sc_lv<8> > xor_ln377_5_fu_807_p2;
    sc_signal< sc_lv<8> > xor_ln377_6_fu_813_p2;
    sc_signal< sc_lv<8> > xor_ln377_4_fu_801_p2;
    sc_signal< sc_lv<8> > xor_ln377_7_fu_819_p2;
    sc_signal< sc_lv<8> > xor_ln377_3_fu_795_p2;
    sc_signal< sc_lv<8> > xor_ln378_2_fu_843_p2;
    sc_signal< sc_lv<8> > xor_ln378_3_fu_849_p2;
    sc_signal< sc_lv<8> > xor_ln378_1_fu_837_p2;
    sc_signal< sc_lv<8> > xor_ln378_fu_831_p2;
    sc_signal< sc_lv<8> > xor_ln378_6_fu_867_p2;
    sc_signal< sc_lv<8> > xor_ln378_7_fu_873_p2;
    sc_signal< sc_lv<8> > xor_ln378_5_fu_861_p2;
    sc_signal< sc_lv<8> > xor_ln378_8_fu_879_p2;
    sc_signal< sc_lv<8> > xor_ln378_4_fu_855_p2;
    sc_signal< sc_lv<8> > xor_ln379_1_fu_897_p2;
    sc_signal< sc_lv<8> > xor_ln379_fu_891_p2;
    sc_signal< sc_lv<8> > xor_ln379_4_fu_915_p2;
    sc_signal< sc_lv<8> > xor_ln379_3_fu_909_p2;
    sc_signal< sc_lv<8> > xor_ln379_5_fu_921_p2;
    sc_signal< sc_lv<8> > xor_ln379_2_fu_903_p2;
    sc_signal< sc_lv<8> > xor_ln379_6_fu_927_p2;
    sc_signal< sc_lv<8> > xor_ln378_9_fu_885_p2;
    sc_signal< sc_lv<8> > xor_ln377_8_fu_825_p2;
    sc_signal< sc_lv<8> > xor_ln376_9_fu_771_p2;
    sc_signal< sc_lv<8> > ap_return_0_preg;
    sc_signal< sc_lv<8> > ap_return_1_preg;
    sc_signal< sc_lv<8> > ap_return_2_preg;
    sc_signal< sc_lv<8> > ap_return_3_preg;
    sc_signal< sc_lv<8> > ap_return_4_preg;
    sc_signal< sc_lv<8> > ap_return_5_preg;
    sc_signal< sc_lv<8> > ap_return_6_preg;
    sc_signal< sc_lv<8> > ap_return_7_preg;
    sc_signal< sc_lv<8> > ap_return_8_preg;
    sc_signal< sc_lv<8> > ap_return_9_preg;
    sc_signal< sc_lv<8> > ap_return_10_preg;
    sc_signal< sc_lv<8> > ap_return_11_preg;
    sc_signal< sc_lv<8> > ap_return_12_preg;
    sc_signal< sc_lv<8> > ap_return_13_preg;
    sc_signal< sc_lv<8> > ap_return_14_preg;
    sc_signal< sc_lv<8> > ap_return_15_preg;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<8> ap_const_lv8_1B;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_12();
    void thread_ap_return_13();
    void thread_ap_return_14();
    void thread_ap_return_15();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_i_fu_315_p2();
    void thread_icmp_ln369_fu_309_p2();
    void thread_select_ln309_10_fu_675_p3();
    void thread_select_ln309_11_fu_703_p3();
    void thread_select_ln309_1_fu_423_p3();
    void thread_select_ln309_2_fu_451_p3();
    void thread_select_ln309_3_fu_479_p3();
    void thread_select_ln309_4_fu_507_p3();
    void thread_select_ln309_5_fu_535_p3();
    void thread_select_ln309_6_fu_563_p3();
    void thread_select_ln309_7_fu_591_p3();
    void thread_select_ln309_8_fu_619_p3();
    void thread_select_ln309_9_fu_647_p3();
    void thread_select_ln309_fu_395_p3();
    void thread_shl_ln309_10_fu_661_p2();
    void thread_shl_ln309_11_fu_689_p2();
    void thread_shl_ln309_1_fu_409_p2();
    void thread_shl_ln309_2_fu_437_p2();
    void thread_shl_ln309_3_fu_465_p2();
    void thread_shl_ln309_4_fu_493_p2();
    void thread_shl_ln309_5_fu_521_p2();
    void thread_shl_ln309_6_fu_549_p2();
    void thread_shl_ln309_7_fu_577_p2();
    void thread_shl_ln309_8_fu_605_p2();
    void thread_shl_ln309_9_fu_633_p2();
    void thread_shl_ln309_fu_381_p2();
    void thread_tmp_10_fu_667_p3();
    void thread_tmp_11_fu_695_p3();
    void thread_tmp_1_fu_415_p3();
    void thread_tmp_2_fu_443_p3();
    void thread_tmp_3_fu_471_p3();
    void thread_tmp_4_fu_499_p3();
    void thread_tmp_5_fu_527_p3();
    void thread_tmp_6_fu_555_p3();
    void thread_tmp_7_fu_583_p3();
    void thread_tmp_8_fu_611_p3();
    void thread_tmp_9_fu_639_p3();
    void thread_tmp_fu_387_p3();
    void thread_trunc_ln371_fu_321_p1();
    void thread_xor_ln309_10_fu_655_p2();
    void thread_xor_ln309_11_fu_683_p2();
    void thread_xor_ln309_1_fu_403_p2();
    void thread_xor_ln309_2_fu_431_p2();
    void thread_xor_ln309_3_fu_543_p2();
    void thread_xor_ln309_4_fu_487_p2();
    void thread_xor_ln309_5_fu_515_p2();
    void thread_xor_ln309_6_fu_627_p2();
    void thread_xor_ln309_7_fu_571_p2();
    void thread_xor_ln309_8_fu_599_p2();
    void thread_xor_ln309_9_fu_711_p2();
    void thread_xor_ln309_fu_459_p2();
    void thread_xor_ln376_1_fu_723_p2();
    void thread_xor_ln376_2_fu_729_p2();
    void thread_xor_ln376_3_fu_735_p2();
    void thread_xor_ln376_4_fu_741_p2();
    void thread_xor_ln376_5_fu_747_p2();
    void thread_xor_ln376_6_fu_753_p2();
    void thread_xor_ln376_7_fu_759_p2();
    void thread_xor_ln376_8_fu_765_p2();
    void thread_xor_ln376_9_fu_771_p2();
    void thread_xor_ln376_fu_717_p2();
    void thread_xor_ln377_1_fu_783_p2();
    void thread_xor_ln377_2_fu_789_p2();
    void thread_xor_ln377_3_fu_795_p2();
    void thread_xor_ln377_4_fu_801_p2();
    void thread_xor_ln377_5_fu_807_p2();
    void thread_xor_ln377_6_fu_813_p2();
    void thread_xor_ln377_7_fu_819_p2();
    void thread_xor_ln377_8_fu_825_p2();
    void thread_xor_ln377_fu_777_p2();
    void thread_xor_ln378_1_fu_837_p2();
    void thread_xor_ln378_2_fu_843_p2();
    void thread_xor_ln378_3_fu_849_p2();
    void thread_xor_ln378_4_fu_855_p2();
    void thread_xor_ln378_5_fu_861_p2();
    void thread_xor_ln378_6_fu_867_p2();
    void thread_xor_ln378_7_fu_873_p2();
    void thread_xor_ln378_8_fu_879_p2();
    void thread_xor_ln378_9_fu_885_p2();
    void thread_xor_ln378_fu_831_p2();
    void thread_xor_ln379_1_fu_897_p2();
    void thread_xor_ln379_2_fu_903_p2();
    void thread_xor_ln379_3_fu_909_p2();
    void thread_xor_ln379_4_fu_915_p2();
    void thread_xor_ln379_5_fu_921_p2();
    void thread_xor_ln379_6_fu_927_p2();
    void thread_xor_ln379_fu_891_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
