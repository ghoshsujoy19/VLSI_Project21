

================================================================
== Vivado HLS Report for 'InvMixColumns'
================================================================
* Date:           Wed May 13 23:30:45 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        VLSI_Project
* Solution:       solution1
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 7.821 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        5|        5| 50.000 ns | 50.000 ns |    5|    5|   none  |
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |        4|        4|         1|          -|          -|     4|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.18>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%state_3_3_read31 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_3_3_read)" [aes.c:365]   --->   Operation 3 'read' 'state_3_3_read31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%state_3_2_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_3_2_read)" [aes.c:365]   --->   Operation 4 'read' 'state_3_2_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%state_3_1_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_3_1_read)" [aes.c:365]   --->   Operation 5 'read' 'state_3_1_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%state_3_0_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_3_0_read)" [aes.c:365]   --->   Operation 6 'read' 'state_3_0_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%state_2_3_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_2_3_read)" [aes.c:365]   --->   Operation 7 'read' 'state_2_3_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%state_2_2_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_2_2_read)" [aes.c:365]   --->   Operation 8 'read' 'state_2_2_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%state_2_1_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_2_1_read)" [aes.c:365]   --->   Operation 9 'read' 'state_2_1_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%state_2_0_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_2_0_read)" [aes.c:365]   --->   Operation 10 'read' 'state_2_0_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%state_1_3_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_1_3_read)" [aes.c:365]   --->   Operation 11 'read' 'state_1_3_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%state_1_2_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_1_2_read)" [aes.c:365]   --->   Operation 12 'read' 'state_1_2_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%state_1_1_read21 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_1_1_read)" [aes.c:365]   --->   Operation 13 'read' 'state_1_1_read21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%state_1_0_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_1_0_read)" [aes.c:365]   --->   Operation 14 'read' 'state_1_0_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%state_0_3_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_0_3_read)" [aes.c:365]   --->   Operation 15 'read' 'state_0_3_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%state_0_2_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_0_2_read)" [aes.c:365]   --->   Operation 16 'read' 'state_0_2_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%state_0_1_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_0_1_read)" [aes.c:365]   --->   Operation 17 'read' 'state_0_1_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%state_0_0_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %state_0_0_read)" [aes.c:365]   --->   Operation 18 'read' 'state_0_0_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.18ns)   --->   "br label %1" [aes.c:369]   --->   Operation 19 'br' <Predicate = true> <Delay = 1.18>

State 2 <SV = 1> <Delay = 7.82>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%state_0_0_0 = phi i8 [ %state_0_0_read_2, %0 ], [ %state_0_0_1, %branch12 ]" [aes.c:365]   --->   Operation 20 'phi' 'state_0_0_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%state_0_1_0 = phi i8 [ %state_0_1_read_2, %0 ], [ %state_0_1_1, %branch12 ]" [aes.c:365]   --->   Operation 21 'phi' 'state_0_1_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%state_0_2_0 = phi i8 [ %state_0_2_read_2, %0 ], [ %state_0_2_1, %branch12 ]" [aes.c:365]   --->   Operation 22 'phi' 'state_0_2_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%state_0_3_0 = phi i8 [ %state_0_3_read_2, %0 ], [ %state_0_3_1, %branch12 ]" [aes.c:365]   --->   Operation 23 'phi' 'state_0_3_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%state_1_0_0 = phi i8 [ %state_1_0_read_2, %0 ], [ %state_1_0_1, %branch12 ]" [aes.c:365]   --->   Operation 24 'phi' 'state_1_0_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%state_1_1_0 = phi i8 [ %state_1_1_read21, %0 ], [ %state_1_1_1, %branch12 ]" [aes.c:365]   --->   Operation 25 'phi' 'state_1_1_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%state_1_2_0 = phi i8 [ %state_1_2_read_2, %0 ], [ %state_1_2_1, %branch12 ]" [aes.c:365]   --->   Operation 26 'phi' 'state_1_2_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%state_1_3_0 = phi i8 [ %state_1_3_read_2, %0 ], [ %state_1_3_1, %branch12 ]" [aes.c:365]   --->   Operation 27 'phi' 'state_1_3_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%state_2_0_0 = phi i8 [ %state_2_0_read_2, %0 ], [ %state_2_0_1, %branch12 ]" [aes.c:365]   --->   Operation 28 'phi' 'state_2_0_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%state_2_1_0 = phi i8 [ %state_2_1_read_2, %0 ], [ %state_2_1_1, %branch12 ]" [aes.c:365]   --->   Operation 29 'phi' 'state_2_1_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%state_2_2_0 = phi i8 [ %state_2_2_read_2, %0 ], [ %state_2_2_1, %branch12 ]" [aes.c:365]   --->   Operation 30 'phi' 'state_2_2_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%state_2_3_0 = phi i8 [ %state_2_3_read_2, %0 ], [ %state_2_3_1, %branch12 ]" [aes.c:365]   --->   Operation 31 'phi' 'state_2_3_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%state_3_0_0 = phi i8 [ %state_3_0_read_2, %0 ], [ %state_3_0_1, %branch12 ]" [aes.c:365]   --->   Operation 32 'phi' 'state_3_0_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%state_3_1_0 = phi i8 [ %state_3_1_read_2, %0 ], [ %state_3_1_1, %branch12 ]" [aes.c:365]   --->   Operation 33 'phi' 'state_3_1_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%state_3_2_0 = phi i8 [ %state_3_2_read_2, %0 ], [ %state_3_2_1, %branch12 ]" [aes.c:365]   --->   Operation 34 'phi' 'state_3_2_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%state_3_3_0 = phi i8 [ %state_3_3_read31, %0 ], [ %state_3_3_1, %branch12 ]" [aes.c:365]   --->   Operation 35 'phi' 'state_3_3_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %0 ], [ %i, %branch12 ]"   --->   Operation 36 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.86ns)   --->   "%icmp_ln369 = icmp eq i3 %i_0, -4" [aes.c:369]   --->   Operation 37 'icmp' 'icmp_ln369' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind"   --->   Operation 38 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (1.18ns)   --->   "%i = add i3 %i_0, 1" [aes.c:369]   --->   Operation 39 'add' 'i' <Predicate = true> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "br i1 %icmp_ln369, label %2, label %branch12" [aes.c:369]   --->   Operation 40 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln371 = trunc i3 %i_0 to i2" [aes.c:371]   --->   Operation 41 'trunc' 'trunc_ln371' <Predicate = (!icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (1.26ns)   --->   "%a = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_0_0_0, i8 %state_1_0_0, i8 %state_2_0_0, i8 %state_3_0_0, i2 %trunc_ln371)" [aes.c:371]   --->   Operation 42 'mux' 'a' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (1.26ns)   --->   "%b = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_0_1_0, i8 %state_1_1_0, i8 %state_2_1_0, i8 %state_3_1_0, i2 %trunc_ln371)" [aes.c:372]   --->   Operation 43 'mux' 'b' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (1.26ns)   --->   "%c = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_0_2_0, i8 %state_1_2_0, i8 %state_2_2_0, i8 %state_3_2_0, i2 %trunc_ln371)" [aes.c:373]   --->   Operation 44 'mux' 'c' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (1.26ns)   --->   "%d = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_0_3_0, i8 %state_1_3_0, i8 %state_2_3_0, i8 %state_3_3_0, i2 %trunc_ln371)" [aes.c:374]   --->   Operation 45 'mux' 'd' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (4.63ns)   --->   "%tmp = call fastcc zeroext i8 @Multiply(i8 zeroext %a, i5 zeroext 14)" [aes.c:376]   --->   Operation 46 'call' 'tmp' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 47 [1/1] (4.63ns)   --->   "%tmp_s = call fastcc zeroext i8 @Multiply(i8 zeroext %b, i5 zeroext 11)" [aes.c:376]   --->   Operation 47 'call' 'tmp_s' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 48 [1/1] (4.63ns)   --->   "%tmp_1 = call fastcc zeroext i8 @Multiply(i8 zeroext %c, i5 zeroext 13)" [aes.c:376]   --->   Operation 48 'call' 'tmp_1' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 49 [1/1] (4.63ns)   --->   "%tmp_2 = call fastcc zeroext i8 @Multiply(i8 zeroext %d, i5 zeroext 9)" [aes.c:376]   --->   Operation 49 'call' 'tmp_2' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node xor_ln376_2)   --->   "%xor_ln376 = xor i8 %tmp, %tmp_1" [aes.c:376]   --->   Operation 50 'xor' 'xor_ln376' <Predicate = (!icmp_ln369)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node xor_ln376_2)   --->   "%xor_ln376_1 = xor i8 %tmp_s, %tmp_2" [aes.c:376]   --->   Operation 51 'xor' 'xor_ln376_1' <Predicate = (!icmp_ln369)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.66ns) (out node of the LUT)   --->   "%xor_ln376_2 = xor i8 %xor_ln376_1, %xor_ln376" [aes.c:376]   --->   Operation 52 'xor' 'xor_ln376_2' <Predicate = (!icmp_ln369)> <Delay = 0.66> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (4.63ns)   --->   "%tmp_3 = call fastcc zeroext i8 @Multiply(i8 zeroext %a, i5 zeroext 9)" [aes.c:377]   --->   Operation 53 'call' 'tmp_3' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 54 [1/1] (4.63ns)   --->   "%tmp_4 = call fastcc zeroext i8 @Multiply(i8 zeroext %b, i5 zeroext 14)" [aes.c:377]   --->   Operation 54 'call' 'tmp_4' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 55 [1/1] (4.63ns)   --->   "%tmp_5 = call fastcc zeroext i8 @Multiply(i8 zeroext %c, i5 zeroext 11)" [aes.c:377]   --->   Operation 55 'call' 'tmp_5' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 56 [1/1] (4.63ns)   --->   "%tmp_6 = call fastcc zeroext i8 @Multiply(i8 zeroext %d, i5 zeroext 13)" [aes.c:377]   --->   Operation 56 'call' 'tmp_6' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node xor_ln377_2)   --->   "%xor_ln377 = xor i8 %tmp_3, %tmp_5" [aes.c:377]   --->   Operation 57 'xor' 'xor_ln377' <Predicate = (!icmp_ln369)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node xor_ln377_2)   --->   "%xor_ln377_1 = xor i8 %tmp_4, %tmp_6" [aes.c:377]   --->   Operation 58 'xor' 'xor_ln377_1' <Predicate = (!icmp_ln369)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.66ns) (out node of the LUT)   --->   "%xor_ln377_2 = xor i8 %xor_ln377_1, %xor_ln377" [aes.c:377]   --->   Operation 59 'xor' 'xor_ln377_2' <Predicate = (!icmp_ln369)> <Delay = 0.66> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (4.63ns)   --->   "%tmp_7 = call fastcc zeroext i8 @Multiply(i8 zeroext %a, i5 zeroext 13)" [aes.c:378]   --->   Operation 60 'call' 'tmp_7' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 61 [1/1] (4.63ns)   --->   "%tmp_8 = call fastcc zeroext i8 @Multiply(i8 zeroext %b, i5 zeroext 9)" [aes.c:378]   --->   Operation 61 'call' 'tmp_8' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 62 [1/1] (4.63ns)   --->   "%tmp_9 = call fastcc zeroext i8 @Multiply(i8 zeroext %c, i5 zeroext 14)" [aes.c:378]   --->   Operation 62 'call' 'tmp_9' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 63 [1/1] (4.63ns)   --->   "%tmp_10 = call fastcc zeroext i8 @Multiply(i8 zeroext %d, i5 zeroext 11)" [aes.c:378]   --->   Operation 63 'call' 'tmp_10' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node xor_ln378_2)   --->   "%xor_ln378 = xor i8 %tmp_7, %tmp_9" [aes.c:378]   --->   Operation 64 'xor' 'xor_ln378' <Predicate = (!icmp_ln369)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node xor_ln378_2)   --->   "%xor_ln378_1 = xor i8 %tmp_8, %tmp_10" [aes.c:378]   --->   Operation 65 'xor' 'xor_ln378_1' <Predicate = (!icmp_ln369)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.66ns) (out node of the LUT)   --->   "%xor_ln378_2 = xor i8 %xor_ln378_1, %xor_ln378" [aes.c:378]   --->   Operation 66 'xor' 'xor_ln378_2' <Predicate = (!icmp_ln369)> <Delay = 0.66> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (4.63ns)   --->   "%tmp_11 = call fastcc zeroext i8 @Multiply(i8 zeroext %a, i5 zeroext 11)" [aes.c:379]   --->   Operation 67 'call' 'tmp_11' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 68 [1/1] (4.63ns)   --->   "%tmp_12 = call fastcc zeroext i8 @Multiply(i8 zeroext %b, i5 zeroext 13)" [aes.c:379]   --->   Operation 68 'call' 'tmp_12' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 69 [1/1] (4.63ns)   --->   "%tmp_13 = call fastcc zeroext i8 @Multiply(i8 zeroext %c, i5 zeroext 9)" [aes.c:379]   --->   Operation 69 'call' 'tmp_13' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 70 [1/1] (4.63ns)   --->   "%tmp_14 = call fastcc zeroext i8 @Multiply(i8 zeroext %d, i5 zeroext 14)" [aes.c:379]   --->   Operation 70 'call' 'tmp_14' <Predicate = (!icmp_ln369)> <Delay = 4.63> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node xor_ln379_2)   --->   "%xor_ln379 = xor i8 %tmp_11, %tmp_13" [aes.c:379]   --->   Operation 71 'xor' 'xor_ln379' <Predicate = (!icmp_ln369)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node xor_ln379_2)   --->   "%xor_ln379_1 = xor i8 %tmp_12, %tmp_14" [aes.c:379]   --->   Operation 72 'xor' 'xor_ln379_1' <Predicate = (!icmp_ln369)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.66ns) (out node of the LUT)   --->   "%xor_ln379_2 = xor i8 %xor_ln379_1, %xor_ln379" [aes.c:379]   --->   Operation 73 'xor' 'xor_ln379_2' <Predicate = (!icmp_ln369)> <Delay = 0.66> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (1.26ns)   --->   "%state_3_3_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_3_3_0, i8 %state_3_3_0, i8 %state_3_3_0, i8 %xor_ln379_2, i2 %trunc_ln371)" [aes.c:365]   --->   Operation 74 'mux' 'state_3_3_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (1.26ns)   --->   "%state_3_2_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_3_2_0, i8 %state_3_2_0, i8 %state_3_2_0, i8 %xor_ln378_2, i2 %trunc_ln371)" [aes.c:365]   --->   Operation 75 'mux' 'state_3_2_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (1.26ns)   --->   "%state_3_1_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_3_1_0, i8 %state_3_1_0, i8 %state_3_1_0, i8 %xor_ln377_2, i2 %trunc_ln371)" [aes.c:365]   --->   Operation 76 'mux' 'state_3_1_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (1.26ns)   --->   "%state_3_0_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_3_0_0, i8 %state_3_0_0, i8 %state_3_0_0, i8 %xor_ln376_2, i2 %trunc_ln371)" [aes.c:365]   --->   Operation 77 'mux' 'state_3_0_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (1.26ns)   --->   "%state_2_3_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_2_3_0, i8 %state_2_3_0, i8 %xor_ln379_2, i8 %state_2_3_0, i2 %trunc_ln371)" [aes.c:365]   --->   Operation 78 'mux' 'state_2_3_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 79 [1/1] (1.26ns)   --->   "%state_2_2_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_2_2_0, i8 %state_2_2_0, i8 %xor_ln378_2, i8 %state_2_2_0, i2 %trunc_ln371)" [aes.c:365]   --->   Operation 79 'mux' 'state_2_2_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (1.26ns)   --->   "%state_2_1_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_2_1_0, i8 %state_2_1_0, i8 %xor_ln377_2, i8 %state_2_1_0, i2 %trunc_ln371)" [aes.c:365]   --->   Operation 80 'mux' 'state_2_1_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (1.26ns)   --->   "%state_2_0_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_2_0_0, i8 %state_2_0_0, i8 %xor_ln376_2, i8 %state_2_0_0, i2 %trunc_ln371)" [aes.c:365]   --->   Operation 81 'mux' 'state_2_0_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (1.26ns)   --->   "%state_1_3_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_1_3_0, i8 %xor_ln379_2, i8 %state_1_3_0, i8 %state_1_3_0, i2 %trunc_ln371)" [aes.c:365]   --->   Operation 82 'mux' 'state_1_3_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (1.26ns)   --->   "%state_1_2_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_1_2_0, i8 %xor_ln378_2, i8 %state_1_2_0, i8 %state_1_2_0, i2 %trunc_ln371)" [aes.c:365]   --->   Operation 83 'mux' 'state_1_2_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 84 [1/1] (1.26ns)   --->   "%state_1_1_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_1_1_0, i8 %xor_ln377_2, i8 %state_1_1_0, i8 %state_1_1_0, i2 %trunc_ln371)" [aes.c:365]   --->   Operation 84 'mux' 'state_1_1_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (1.26ns)   --->   "%state_1_0_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %state_1_0_0, i8 %xor_ln376_2, i8 %state_1_0_0, i8 %state_1_0_0, i2 %trunc_ln371)" [aes.c:365]   --->   Operation 85 'mux' 'state_1_0_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (1.26ns)   --->   "%state_0_3_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %xor_ln379_2, i8 %state_0_3_0, i8 %state_0_3_0, i8 %state_0_3_0, i2 %trunc_ln371)" [aes.c:379]   --->   Operation 86 'mux' 'state_0_3_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 87 [1/1] (1.26ns)   --->   "%state_0_2_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %xor_ln378_2, i8 %state_0_2_0, i8 %state_0_2_0, i8 %state_0_2_0, i2 %trunc_ln371)" [aes.c:378]   --->   Operation 87 'mux' 'state_0_2_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 88 [1/1] (1.26ns)   --->   "%state_0_1_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %xor_ln377_2, i8 %state_0_1_0, i8 %state_0_1_0, i8 %state_0_1_0, i2 %trunc_ln371)" [aes.c:377]   --->   Operation 88 'mux' 'state_0_1_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 89 [1/1] (1.26ns)   --->   "%state_0_0_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %xor_ln376_2, i8 %state_0_0_0, i8 %state_0_0_0, i8 %state_0_0_0, i2 %trunc_ln371)" [aes.c:376]   --->   Operation 89 'mux' 'state_0_0_1' <Predicate = (!icmp_ln369)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "br label %1" [aes.c:369]   --->   Operation 90 'br' <Predicate = (!icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%mrv = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } undef, i8 %state_0_0_0, 0" [aes.c:381]   --->   Operation 91 'insertvalue' 'mrv' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv, i8 %state_0_1_0, 1" [aes.c:381]   --->   Operation 92 'insertvalue' 'mrv_1' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_1, i8 %state_0_2_0, 2" [aes.c:381]   --->   Operation 93 'insertvalue' 'mrv_2' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_2, i8 %state_0_3_0, 3" [aes.c:381]   --->   Operation 94 'insertvalue' 'mrv_3' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_3, i8 %state_1_0_0, 4" [aes.c:381]   --->   Operation 95 'insertvalue' 'mrv_4' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%mrv_5 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_4, i8 %state_1_1_0, 5" [aes.c:381]   --->   Operation 96 'insertvalue' 'mrv_5' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%mrv_6 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_5, i8 %state_1_2_0, 6" [aes.c:381]   --->   Operation 97 'insertvalue' 'mrv_6' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 98 [1/1] (0.00ns)   --->   "%mrv_7 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_6, i8 %state_1_3_0, 7" [aes.c:381]   --->   Operation 98 'insertvalue' 'mrv_7' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 99 [1/1] (0.00ns)   --->   "%mrv_8 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_7, i8 %state_2_0_0, 8" [aes.c:381]   --->   Operation 99 'insertvalue' 'mrv_8' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 100 [1/1] (0.00ns)   --->   "%mrv_9 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_8, i8 %state_2_1_0, 9" [aes.c:381]   --->   Operation 100 'insertvalue' 'mrv_9' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 101 [1/1] (0.00ns)   --->   "%mrv_10 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_9, i8 %state_2_2_0, 10" [aes.c:381]   --->   Operation 101 'insertvalue' 'mrv_10' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 102 [1/1] (0.00ns)   --->   "%mrv_11 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_10, i8 %state_2_3_0, 11" [aes.c:381]   --->   Operation 102 'insertvalue' 'mrv_11' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 103 [1/1] (0.00ns)   --->   "%mrv_12 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_11, i8 %state_3_0_0, 12" [aes.c:381]   --->   Operation 103 'insertvalue' 'mrv_12' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 104 [1/1] (0.00ns)   --->   "%mrv_13 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_12, i8 %state_3_1_0, 13" [aes.c:381]   --->   Operation 104 'insertvalue' 'mrv_13' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%mrv_14 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_13, i8 %state_3_2_0, 14" [aes.c:381]   --->   Operation 105 'insertvalue' 'mrv_14' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 106 [1/1] (0.00ns)   --->   "%mrv_s = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_14, i8 %state_3_3_0, 15" [aes.c:381]   --->   Operation 106 'insertvalue' 'mrv_s' <Predicate = (icmp_ln369)> <Delay = 0.00>
ST_2 : Operation 107 [1/1] (0.00ns)   --->   "ret { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %mrv_s" [aes.c:381]   --->   Operation 107 'ret' <Predicate = (icmp_ln369)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('state_0_0_0', aes.c:365) with incoming values : ('state[0][0]', aes.c:365) ('state_0_0_1', aes.c:376) [35]  (1.18 ns)

 <State 2>: 7.82ns
The critical path consists of the following:
	'phi' operation ('state_0_0_0', aes.c:365) with incoming values : ('state[0][0]', aes.c:365) ('state_0_0_1', aes.c:376) [35]  (0 ns)
	'mux' operation ('a', aes.c:371) [58]  (1.26 ns)
	'call' operation ('tmp_11', aes.c:379) to 'Multiply' [83]  (4.63 ns)
	'xor' operation ('xor_ln379', aes.c:379) [87]  (0 ns)
	'xor' operation ('xor_ln379_2', aes.c:379) [89]  (0.66 ns)
	'mux' operation ('state_3_3_1', aes.c:365) [90]  (1.26 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
