// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Cipher,hls_ip_2019_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.111500,HLS_SYN_LAT=506,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=1074,HLS_SYN_LUT=2809,HLS_VERSION=2019_2}" *)

module Cipher (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        state_0_0_i,
        state_0_0_o,
        state_0_0_o_ap_vld,
        state_0_1_i,
        state_0_1_o,
        state_0_1_o_ap_vld,
        state_0_2_i,
        state_0_2_o,
        state_0_2_o_ap_vld,
        state_0_3_i,
        state_0_3_o,
        state_0_3_o_ap_vld,
        state_1_0_i,
        state_1_0_o,
        state_1_0_o_ap_vld,
        state_1_1_i,
        state_1_1_o,
        state_1_1_o_ap_vld,
        state_1_2_i,
        state_1_2_o,
        state_1_2_o_ap_vld,
        state_1_3_i,
        state_1_3_o,
        state_1_3_o_ap_vld,
        state_2_0_i,
        state_2_0_o,
        state_2_0_o_ap_vld,
        state_2_1_i,
        state_2_1_o,
        state_2_1_o_ap_vld,
        state_2_2_i,
        state_2_2_o,
        state_2_2_o_ap_vld,
        state_2_3_i,
        state_2_3_o,
        state_2_3_o_ap_vld,
        state_3_0_i,
        state_3_0_o,
        state_3_0_o_ap_vld,
        state_3_1_i,
        state_3_1_o,
        state_3_1_o_ap_vld,
        state_3_2_i,
        state_3_2_o,
        state_3_2_o_ap_vld,
        state_3_3_i,
        state_3_3_o,
        state_3_3_o_ap_vld,
        RoundKey_0_address0,
        RoundKey_0_ce0,
        RoundKey_0_q0,
        RoundKey_1_address0,
        RoundKey_1_ce0,
        RoundKey_1_q0,
        RoundKey_2_address0,
        RoundKey_2_ce0,
        RoundKey_2_q0,
        RoundKey_3_address0,
        RoundKey_3_ce0,
        RoundKey_3_q0,
        RoundKey_4_address0,
        RoundKey_4_ce0,
        RoundKey_4_q0,
        RoundKey_5_address0,
        RoundKey_5_ce0,
        RoundKey_5_q0,
        RoundKey_6_address0,
        RoundKey_6_ce0,
        RoundKey_6_q0,
        RoundKey_7_address0,
        RoundKey_7_ce0,
        RoundKey_7_q0,
        RoundKey_8_address0,
        RoundKey_8_ce0,
        RoundKey_8_q0,
        RoundKey_9_address0,
        RoundKey_9_ce0,
        RoundKey_9_q0,
        RoundKey_10_address0,
        RoundKey_10_ce0,
        RoundKey_10_q0,
        RoundKey_11_address0,
        RoundKey_11_ce0,
        RoundKey_11_q0,
        RoundKey_12_address0,
        RoundKey_12_ce0,
        RoundKey_12_q0,
        RoundKey_13_address0,
        RoundKey_13_ce0,
        RoundKey_13_q0,
        RoundKey_14_address0,
        RoundKey_14_ce0,
        RoundKey_14_q0,
        RoundKey_15_address0,
        RoundKey_15_ce0,
        RoundKey_15_q0
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] state_0_0_i;
output  [7:0] state_0_0_o;
output   state_0_0_o_ap_vld;
input  [7:0] state_0_1_i;
output  [7:0] state_0_1_o;
output   state_0_1_o_ap_vld;
input  [7:0] state_0_2_i;
output  [7:0] state_0_2_o;
output   state_0_2_o_ap_vld;
input  [7:0] state_0_3_i;
output  [7:0] state_0_3_o;
output   state_0_3_o_ap_vld;
input  [7:0] state_1_0_i;
output  [7:0] state_1_0_o;
output   state_1_0_o_ap_vld;
input  [7:0] state_1_1_i;
output  [7:0] state_1_1_o;
output   state_1_1_o_ap_vld;
input  [7:0] state_1_2_i;
output  [7:0] state_1_2_o;
output   state_1_2_o_ap_vld;
input  [7:0] state_1_3_i;
output  [7:0] state_1_3_o;
output   state_1_3_o_ap_vld;
input  [7:0] state_2_0_i;
output  [7:0] state_2_0_o;
output   state_2_0_o_ap_vld;
input  [7:0] state_2_1_i;
output  [7:0] state_2_1_o;
output   state_2_1_o_ap_vld;
input  [7:0] state_2_2_i;
output  [7:0] state_2_2_o;
output   state_2_2_o_ap_vld;
input  [7:0] state_2_3_i;
output  [7:0] state_2_3_o;
output   state_2_3_o_ap_vld;
input  [7:0] state_3_0_i;
output  [7:0] state_3_0_o;
output   state_3_0_o_ap_vld;
input  [7:0] state_3_1_i;
output  [7:0] state_3_1_o;
output   state_3_1_o_ap_vld;
input  [7:0] state_3_2_i;
output  [7:0] state_3_2_o;
output   state_3_2_o_ap_vld;
input  [7:0] state_3_3_i;
output  [7:0] state_3_3_o;
output   state_3_3_o_ap_vld;
output  [3:0] RoundKey_0_address0;
output   RoundKey_0_ce0;
input  [7:0] RoundKey_0_q0;
output  [3:0] RoundKey_1_address0;
output   RoundKey_1_ce0;
input  [7:0] RoundKey_1_q0;
output  [3:0] RoundKey_2_address0;
output   RoundKey_2_ce0;
input  [7:0] RoundKey_2_q0;
output  [3:0] RoundKey_3_address0;
output   RoundKey_3_ce0;
input  [7:0] RoundKey_3_q0;
output  [3:0] RoundKey_4_address0;
output   RoundKey_4_ce0;
input  [7:0] RoundKey_4_q0;
output  [3:0] RoundKey_5_address0;
output   RoundKey_5_ce0;
input  [7:0] RoundKey_5_q0;
output  [3:0] RoundKey_6_address0;
output   RoundKey_6_ce0;
input  [7:0] RoundKey_6_q0;
output  [3:0] RoundKey_7_address0;
output   RoundKey_7_ce0;
input  [7:0] RoundKey_7_q0;
output  [3:0] RoundKey_8_address0;
output   RoundKey_8_ce0;
input  [7:0] RoundKey_8_q0;
output  [3:0] RoundKey_9_address0;
output   RoundKey_9_ce0;
input  [7:0] RoundKey_9_q0;
output  [3:0] RoundKey_10_address0;
output   RoundKey_10_ce0;
input  [7:0] RoundKey_10_q0;
output  [3:0] RoundKey_11_address0;
output   RoundKey_11_ce0;
input  [7:0] RoundKey_11_q0;
output  [3:0] RoundKey_12_address0;
output   RoundKey_12_ce0;
input  [7:0] RoundKey_12_q0;
output  [3:0] RoundKey_13_address0;
output   RoundKey_13_ce0;
input  [7:0] RoundKey_13_q0;
output  [3:0] RoundKey_14_address0;
output   RoundKey_14_ce0;
input  [7:0] RoundKey_14_q0;
output  [3:0] RoundKey_15_address0;
output   RoundKey_15_ce0;
input  [7:0] RoundKey_15_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] state_0_0_o;
reg state_0_0_o_ap_vld;
reg[7:0] state_0_1_o;
reg state_0_1_o_ap_vld;
reg[7:0] state_0_2_o;
reg state_0_2_o_ap_vld;
reg[7:0] state_0_3_o;
reg state_0_3_o_ap_vld;
reg[7:0] state_1_0_o;
reg state_1_0_o_ap_vld;
reg[7:0] state_1_1_o;
reg state_1_1_o_ap_vld;
reg[7:0] state_1_2_o;
reg state_1_2_o_ap_vld;
reg[7:0] state_1_3_o;
reg state_1_3_o_ap_vld;
reg[7:0] state_2_0_o;
reg state_2_0_o_ap_vld;
reg[7:0] state_2_1_o;
reg state_2_1_o_ap_vld;
reg[7:0] state_2_2_o;
reg state_2_2_o_ap_vld;
reg[7:0] state_2_3_o;
reg state_2_3_o_ap_vld;
reg[7:0] state_3_0_o;
reg state_3_0_o_ap_vld;
reg[7:0] state_3_1_o;
reg state_3_1_o_ap_vld;
reg[7:0] state_3_2_o;
reg state_3_2_o_ap_vld;
reg[7:0] state_3_3_o;
reg state_3_3_o_ap_vld;
reg RoundKey_0_ce0;
reg RoundKey_1_ce0;
reg RoundKey_2_ce0;
reg RoundKey_3_ce0;
reg RoundKey_4_ce0;
reg RoundKey_5_ce0;
reg RoundKey_6_ce0;
reg RoundKey_7_ce0;
reg RoundKey_8_ce0;
reg RoundKey_9_ce0;
reg RoundKey_10_ce0;
reg RoundKey_11_ce0;
reg RoundKey_12_ce0;
reg RoundKey_13_ce0;
reg RoundKey_14_ce0;
reg RoundKey_15_ce0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] reg_799;
wire    ap_CS_fsm_state4;
wire    grp_SubBytes_fu_498_ap_ready;
wire    grp_SubBytes_fu_498_ap_done;
wire    ap_CS_fsm_state7;
reg   [7:0] reg_805;
reg   [7:0] reg_811;
reg   [7:0] reg_817;
reg   [7:0] reg_823;
reg   [7:0] reg_829;
reg   [7:0] reg_835;
reg   [7:0] reg_841;
reg   [7:0] reg_847;
reg   [7:0] reg_853;
reg   [7:0] reg_859;
reg   [7:0] reg_865;
reg   [7:0] reg_871;
reg   [7:0] reg_877;
reg   [7:0] reg_883;
reg   [7:0] reg_889;
wire    ap_CS_fsm_state2;
wire    grp_AddRoundKey_fu_536_ap_ready;
wire    grp_AddRoundKey_fu_536_ap_done;
reg   [7:0] state_0_0_ret2_reg_1171;
wire    ap_CS_fsm_state5;
wire    grp_MixColumns_fu_478_ap_ready;
wire    grp_MixColumns_fu_478_ap_done;
reg   [7:0] state_0_1_ret1_20_reg_1176;
reg   [7:0] state_0_2_ret1_21_reg_1181;
reg   [7:0] state_0_3_ret1_22_reg_1186;
reg   [7:0] state_1_0_ret1_reg_1191;
reg   [7:0] state_1_1_ret1_23_reg_1196;
reg   [7:0] state_1_2_ret1_24_reg_1201;
reg   [7:0] state_1_3_ret1_25_reg_1206;
reg   [7:0] state_2_0_ret1_reg_1211;
reg   [7:0] state_2_1_ret2_reg_1216;
reg   [7:0] state_2_2_ret2_reg_1221;
reg   [7:0] state_2_3_ret2_reg_1226;
reg   [7:0] state_3_0_ret2_reg_1231;
reg   [7:0] state_3_1_ret2_reg_1236;
reg   [7:0] state_3_2_ret2_reg_1241;
reg   [7:0] state_3_3_ret2_reg_1246;
wire   [5:0] zext_ln427_fu_997_p1;
reg   [5:0] zext_ln427_reg_1251;
wire   [3:0] round_fu_1002_p2;
reg   [3:0] round_reg_1256;
wire    ap_CS_fsm_state6;
wire    grp_MixColumns_fu_478_ap_start;
wire    grp_MixColumns_fu_478_ap_idle;
wire   [7:0] grp_MixColumns_fu_478_ap_return_0;
wire   [7:0] grp_MixColumns_fu_478_ap_return_1;
wire   [7:0] grp_MixColumns_fu_478_ap_return_2;
wire   [7:0] grp_MixColumns_fu_478_ap_return_3;
wire   [7:0] grp_MixColumns_fu_478_ap_return_4;
wire   [7:0] grp_MixColumns_fu_478_ap_return_5;
wire   [7:0] grp_MixColumns_fu_478_ap_return_6;
wire   [7:0] grp_MixColumns_fu_478_ap_return_7;
wire   [7:0] grp_MixColumns_fu_478_ap_return_8;
wire   [7:0] grp_MixColumns_fu_478_ap_return_9;
wire   [7:0] grp_MixColumns_fu_478_ap_return_10;
wire   [7:0] grp_MixColumns_fu_478_ap_return_11;
wire   [7:0] grp_MixColumns_fu_478_ap_return_12;
wire   [7:0] grp_MixColumns_fu_478_ap_return_13;
wire   [7:0] grp_MixColumns_fu_478_ap_return_14;
wire   [7:0] grp_MixColumns_fu_478_ap_return_15;
wire    grp_SubBytes_fu_498_ap_start;
wire    grp_SubBytes_fu_498_ap_idle;
wire   [7:0] grp_SubBytes_fu_498_ap_return_0;
wire   [7:0] grp_SubBytes_fu_498_ap_return_1;
wire   [7:0] grp_SubBytes_fu_498_ap_return_2;
wire   [7:0] grp_SubBytes_fu_498_ap_return_3;
wire   [7:0] grp_SubBytes_fu_498_ap_return_4;
wire   [7:0] grp_SubBytes_fu_498_ap_return_5;
wire   [7:0] grp_SubBytes_fu_498_ap_return_6;
wire   [7:0] grp_SubBytes_fu_498_ap_return_7;
wire   [7:0] grp_SubBytes_fu_498_ap_return_8;
wire   [7:0] grp_SubBytes_fu_498_ap_return_9;
wire   [7:0] grp_SubBytes_fu_498_ap_return_10;
wire   [7:0] grp_SubBytes_fu_498_ap_return_11;
wire   [7:0] grp_SubBytes_fu_498_ap_return_12;
wire   [7:0] grp_SubBytes_fu_498_ap_return_13;
wire   [7:0] grp_SubBytes_fu_498_ap_return_14;
wire   [7:0] grp_SubBytes_fu_498_ap_return_15;
wire    grp_AddRoundKey_fu_536_ap_start;
wire    grp_AddRoundKey_fu_536_ap_idle;
reg   [5:0] grp_AddRoundKey_fu_536_round;
reg   [7:0] grp_AddRoundKey_fu_536_state_0_0_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_0_1_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_0_2_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_0_3_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_1_0_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_1_1_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_1_2_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_1_3_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_2_0_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_2_1_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_2_2_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_2_3_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_3_0_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_3_1_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_3_2_read;
reg   [7:0] grp_AddRoundKey_fu_536_state_3_3_read;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_0_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_0_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_1_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_1_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_2_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_2_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_3_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_3_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_4_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_4_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_5_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_5_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_6_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_6_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_7_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_7_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_8_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_8_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_9_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_9_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_10_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_10_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_11_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_11_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_12_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_12_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_13_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_13_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_14_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_14_ce0;
wire   [3:0] grp_AddRoundKey_fu_536_RoundKey_15_address0;
wire    grp_AddRoundKey_fu_536_RoundKey_15_ce0;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_0;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_1;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_2;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_3;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_4;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_5;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_6;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_7;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_8;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_9;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_10;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_11;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_12;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_13;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_14;
wire   [7:0] grp_AddRoundKey_fu_536_ap_return_15;
reg   [7:0] state_3_2_load_4_reg_306;
reg   [7:0] state_3_1_load_4_reg_316;
reg   [7:0] state_3_0_load_4_reg_326;
reg   [7:0] state_2_3_load_4_reg_336;
reg   [7:0] state_2_2_load_4_reg_346;
reg   [7:0] state_2_1_load_4_reg_356;
reg   [7:0] state_2_0_load_4_reg_366;
reg   [7:0] state_1_3_load_4_reg_376;
reg   [7:0] state_1_2_load_4_reg_386;
reg   [7:0] state_1_1_load_4_reg_396;
reg   [7:0] state_1_0_load_4_reg_406;
reg   [7:0] state_0_3_load_4_reg_416;
reg   [7:0] state_0_2_load_4_reg_426;
reg   [7:0] state_0_1_load_4_reg_436;
reg   [7:0] state_0_0_load_4_reg_446;
reg   [7:0] state_3_3_load_4_reg_456;
reg   [3:0] round_0_reg_466;
reg    grp_MixColumns_fu_478_ap_start_reg;
reg    grp_SubBytes_fu_498_ap_start_reg;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln422_fu_895_p2;
reg    grp_AddRoundKey_fu_536_ap_start_reg;
wire    ap_CS_fsm_state8;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_MixColumns_fu_478_ap_start_reg = 1'b0;
#0 grp_SubBytes_fu_498_ap_start_reg = 1'b0;
#0 grp_AddRoundKey_fu_536_ap_start_reg = 1'b0;
end

MixColumns grp_MixColumns_fu_478(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MixColumns_fu_478_ap_start),
    .ap_done(grp_MixColumns_fu_478_ap_done),
    .ap_idle(grp_MixColumns_fu_478_ap_idle),
    .ap_ready(grp_MixColumns_fu_478_ap_ready),
    .state_0_0_read(reg_799),
    .state_0_1_read(reg_829),
    .state_0_2_read(reg_859),
    .state_0_3_read(reg_889),
    .state_1_0_read(reg_823),
    .state_1_1_read(reg_853),
    .state_1_2_read(reg_883),
    .state_1_3_read(reg_817),
    .state_2_0_read(reg_847),
    .state_2_1_read(reg_877),
    .state_2_2_read(reg_811),
    .state_2_3_read(reg_841),
    .state_3_0_read(reg_871),
    .state_3_1_read(reg_805),
    .state_3_2_read(reg_835),
    .state_3_3_read(reg_865),
    .ap_return_0(grp_MixColumns_fu_478_ap_return_0),
    .ap_return_1(grp_MixColumns_fu_478_ap_return_1),
    .ap_return_2(grp_MixColumns_fu_478_ap_return_2),
    .ap_return_3(grp_MixColumns_fu_478_ap_return_3),
    .ap_return_4(grp_MixColumns_fu_478_ap_return_4),
    .ap_return_5(grp_MixColumns_fu_478_ap_return_5),
    .ap_return_6(grp_MixColumns_fu_478_ap_return_6),
    .ap_return_7(grp_MixColumns_fu_478_ap_return_7),
    .ap_return_8(grp_MixColumns_fu_478_ap_return_8),
    .ap_return_9(grp_MixColumns_fu_478_ap_return_9),
    .ap_return_10(grp_MixColumns_fu_478_ap_return_10),
    .ap_return_11(grp_MixColumns_fu_478_ap_return_11),
    .ap_return_12(grp_MixColumns_fu_478_ap_return_12),
    .ap_return_13(grp_MixColumns_fu_478_ap_return_13),
    .ap_return_14(grp_MixColumns_fu_478_ap_return_14),
    .ap_return_15(grp_MixColumns_fu_478_ap_return_15)
);

SubBytes grp_SubBytes_fu_498(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SubBytes_fu_498_ap_start),
    .ap_done(grp_SubBytes_fu_498_ap_done),
    .ap_idle(grp_SubBytes_fu_498_ap_idle),
    .ap_ready(grp_SubBytes_fu_498_ap_ready),
    .state_0_0_read(state_0_0_load_4_reg_446),
    .state_0_1_read(state_0_1_load_4_reg_436),
    .state_0_2_read(state_0_2_load_4_reg_426),
    .state_0_3_read(state_0_3_load_4_reg_416),
    .state_1_0_read(state_1_0_load_4_reg_406),
    .state_1_1_read(state_1_1_load_4_reg_396),
    .state_1_2_read(state_1_2_load_4_reg_386),
    .state_1_3_read(state_1_3_load_4_reg_376),
    .state_2_0_read(state_2_0_load_4_reg_366),
    .state_2_1_read(state_2_1_load_4_reg_356),
    .state_2_2_read(state_2_2_load_4_reg_346),
    .state_2_3_read(state_2_3_load_4_reg_336),
    .state_3_0_read(state_3_0_load_4_reg_326),
    .state_3_1_read(state_3_1_load_4_reg_316),
    .state_3_2_read(state_3_2_load_4_reg_306),
    .state_3_3_read(state_3_3_load_4_reg_456),
    .ap_return_0(grp_SubBytes_fu_498_ap_return_0),
    .ap_return_1(grp_SubBytes_fu_498_ap_return_1),
    .ap_return_2(grp_SubBytes_fu_498_ap_return_2),
    .ap_return_3(grp_SubBytes_fu_498_ap_return_3),
    .ap_return_4(grp_SubBytes_fu_498_ap_return_4),
    .ap_return_5(grp_SubBytes_fu_498_ap_return_5),
    .ap_return_6(grp_SubBytes_fu_498_ap_return_6),
    .ap_return_7(grp_SubBytes_fu_498_ap_return_7),
    .ap_return_8(grp_SubBytes_fu_498_ap_return_8),
    .ap_return_9(grp_SubBytes_fu_498_ap_return_9),
    .ap_return_10(grp_SubBytes_fu_498_ap_return_10),
    .ap_return_11(grp_SubBytes_fu_498_ap_return_11),
    .ap_return_12(grp_SubBytes_fu_498_ap_return_12),
    .ap_return_13(grp_SubBytes_fu_498_ap_return_13),
    .ap_return_14(grp_SubBytes_fu_498_ap_return_14),
    .ap_return_15(grp_SubBytes_fu_498_ap_return_15)
);

AddRoundKey grp_AddRoundKey_fu_536(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_AddRoundKey_fu_536_ap_start),
    .ap_done(grp_AddRoundKey_fu_536_ap_done),
    .ap_idle(grp_AddRoundKey_fu_536_ap_idle),
    .ap_ready(grp_AddRoundKey_fu_536_ap_ready),
    .round(grp_AddRoundKey_fu_536_round),
    .state_0_0_read(grp_AddRoundKey_fu_536_state_0_0_read),
    .state_0_1_read(grp_AddRoundKey_fu_536_state_0_1_read),
    .state_0_2_read(grp_AddRoundKey_fu_536_state_0_2_read),
    .state_0_3_read(grp_AddRoundKey_fu_536_state_0_3_read),
    .state_1_0_read(grp_AddRoundKey_fu_536_state_1_0_read),
    .state_1_1_read(grp_AddRoundKey_fu_536_state_1_1_read),
    .state_1_2_read(grp_AddRoundKey_fu_536_state_1_2_read),
    .state_1_3_read(grp_AddRoundKey_fu_536_state_1_3_read),
    .state_2_0_read(grp_AddRoundKey_fu_536_state_2_0_read),
    .state_2_1_read(grp_AddRoundKey_fu_536_state_2_1_read),
    .state_2_2_read(grp_AddRoundKey_fu_536_state_2_2_read),
    .state_2_3_read(grp_AddRoundKey_fu_536_state_2_3_read),
    .state_3_0_read(grp_AddRoundKey_fu_536_state_3_0_read),
    .state_3_1_read(grp_AddRoundKey_fu_536_state_3_1_read),
    .state_3_2_read(grp_AddRoundKey_fu_536_state_3_2_read),
    .state_3_3_read(grp_AddRoundKey_fu_536_state_3_3_read),
    .RoundKey_0_address0(grp_AddRoundKey_fu_536_RoundKey_0_address0),
    .RoundKey_0_ce0(grp_AddRoundKey_fu_536_RoundKey_0_ce0),
    .RoundKey_0_q0(RoundKey_0_q0),
    .RoundKey_1_address0(grp_AddRoundKey_fu_536_RoundKey_1_address0),
    .RoundKey_1_ce0(grp_AddRoundKey_fu_536_RoundKey_1_ce0),
    .RoundKey_1_q0(RoundKey_1_q0),
    .RoundKey_2_address0(grp_AddRoundKey_fu_536_RoundKey_2_address0),
    .RoundKey_2_ce0(grp_AddRoundKey_fu_536_RoundKey_2_ce0),
    .RoundKey_2_q0(RoundKey_2_q0),
    .RoundKey_3_address0(grp_AddRoundKey_fu_536_RoundKey_3_address0),
    .RoundKey_3_ce0(grp_AddRoundKey_fu_536_RoundKey_3_ce0),
    .RoundKey_3_q0(RoundKey_3_q0),
    .RoundKey_4_address0(grp_AddRoundKey_fu_536_RoundKey_4_address0),
    .RoundKey_4_ce0(grp_AddRoundKey_fu_536_RoundKey_4_ce0),
    .RoundKey_4_q0(RoundKey_4_q0),
    .RoundKey_5_address0(grp_AddRoundKey_fu_536_RoundKey_5_address0),
    .RoundKey_5_ce0(grp_AddRoundKey_fu_536_RoundKey_5_ce0),
    .RoundKey_5_q0(RoundKey_5_q0),
    .RoundKey_6_address0(grp_AddRoundKey_fu_536_RoundKey_6_address0),
    .RoundKey_6_ce0(grp_AddRoundKey_fu_536_RoundKey_6_ce0),
    .RoundKey_6_q0(RoundKey_6_q0),
    .RoundKey_7_address0(grp_AddRoundKey_fu_536_RoundKey_7_address0),
    .RoundKey_7_ce0(grp_AddRoundKey_fu_536_RoundKey_7_ce0),
    .RoundKey_7_q0(RoundKey_7_q0),
    .RoundKey_8_address0(grp_AddRoundKey_fu_536_RoundKey_8_address0),
    .RoundKey_8_ce0(grp_AddRoundKey_fu_536_RoundKey_8_ce0),
    .RoundKey_8_q0(RoundKey_8_q0),
    .RoundKey_9_address0(grp_AddRoundKey_fu_536_RoundKey_9_address0),
    .RoundKey_9_ce0(grp_AddRoundKey_fu_536_RoundKey_9_ce0),
    .RoundKey_9_q0(RoundKey_9_q0),
    .RoundKey_10_address0(grp_AddRoundKey_fu_536_RoundKey_10_address0),
    .RoundKey_10_ce0(grp_AddRoundKey_fu_536_RoundKey_10_ce0),
    .RoundKey_10_q0(RoundKey_10_q0),
    .RoundKey_11_address0(grp_AddRoundKey_fu_536_RoundKey_11_address0),
    .RoundKey_11_ce0(grp_AddRoundKey_fu_536_RoundKey_11_ce0),
    .RoundKey_11_q0(RoundKey_11_q0),
    .RoundKey_12_address0(grp_AddRoundKey_fu_536_RoundKey_12_address0),
    .RoundKey_12_ce0(grp_AddRoundKey_fu_536_RoundKey_12_ce0),
    .RoundKey_12_q0(RoundKey_12_q0),
    .RoundKey_13_address0(grp_AddRoundKey_fu_536_RoundKey_13_address0),
    .RoundKey_13_ce0(grp_AddRoundKey_fu_536_RoundKey_13_ce0),
    .RoundKey_13_q0(RoundKey_13_q0),
    .RoundKey_14_address0(grp_AddRoundKey_fu_536_RoundKey_14_address0),
    .RoundKey_14_ce0(grp_AddRoundKey_fu_536_RoundKey_14_ce0),
    .RoundKey_14_q0(RoundKey_14_q0),
    .RoundKey_15_address0(grp_AddRoundKey_fu_536_RoundKey_15_address0),
    .RoundKey_15_ce0(grp_AddRoundKey_fu_536_RoundKey_15_ce0),
    .RoundKey_15_q0(RoundKey_15_q0),
    .ap_return_0(grp_AddRoundKey_fu_536_ap_return_0),
    .ap_return_1(grp_AddRoundKey_fu_536_ap_return_1),
    .ap_return_2(grp_AddRoundKey_fu_536_ap_return_2),
    .ap_return_3(grp_AddRoundKey_fu_536_ap_return_3),
    .ap_return_4(grp_AddRoundKey_fu_536_ap_return_4),
    .ap_return_5(grp_AddRoundKey_fu_536_ap_return_5),
    .ap_return_6(grp_AddRoundKey_fu_536_ap_return_6),
    .ap_return_7(grp_AddRoundKey_fu_536_ap_return_7),
    .ap_return_8(grp_AddRoundKey_fu_536_ap_return_8),
    .ap_return_9(grp_AddRoundKey_fu_536_ap_return_9),
    .ap_return_10(grp_AddRoundKey_fu_536_ap_return_10),
    .ap_return_11(grp_AddRoundKey_fu_536_ap_return_11),
    .ap_return_12(grp_AddRoundKey_fu_536_ap_return_12),
    .ap_return_13(grp_AddRoundKey_fu_536_ap_return_13),
    .ap_return_14(grp_AddRoundKey_fu_536_ap_return_14),
    .ap_return_15(grp_AddRoundKey_fu_536_ap_return_15)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_AddRoundKey_fu_536_ap_start_reg <= 1'b0;
    end else begin
        if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
            grp_AddRoundKey_fu_536_ap_start_reg <= 1'b1;
        end else if ((grp_AddRoundKey_fu_536_ap_ready == 1'b1)) begin
            grp_AddRoundKey_fu_536_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_MixColumns_fu_478_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1))) begin
            grp_MixColumns_fu_478_ap_start_reg <= 1'b1;
        end else if ((grp_MixColumns_fu_478_ap_ready == 1'b1)) begin
            grp_MixColumns_fu_478_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SubBytes_fu_498_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln422_fu_895_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln422_fu_895_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
            grp_SubBytes_fu_498_ap_start_reg <= 1'b1;
        end else if ((grp_SubBytes_fu_498_ap_ready == 1'b1)) begin
            grp_SubBytes_fu_498_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((grp_AddRoundKey_fu_536_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            round_0_reg_466 <= round_reg_1256;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            round_0_reg_466 <= 4'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        reg_799 <= grp_SubBytes_fu_498_ap_return_0;
        reg_805 <= grp_SubBytes_fu_498_ap_return_1;
        reg_811 <= grp_SubBytes_fu_498_ap_return_2;
        reg_817 <= grp_SubBytes_fu_498_ap_return_3;
        reg_823 <= grp_SubBytes_fu_498_ap_return_4;
        reg_829 <= grp_SubBytes_fu_498_ap_return_5;
        reg_835 <= grp_SubBytes_fu_498_ap_return_6;
        reg_841 <= grp_SubBytes_fu_498_ap_return_7;
        reg_847 <= grp_SubBytes_fu_498_ap_return_8;
        reg_853 <= grp_SubBytes_fu_498_ap_return_9;
        reg_859 <= grp_SubBytes_fu_498_ap_return_10;
        reg_865 <= grp_SubBytes_fu_498_ap_return_11;
        reg_871 <= grp_SubBytes_fu_498_ap_return_12;
        reg_877 <= grp_SubBytes_fu_498_ap_return_13;
        reg_883 <= grp_SubBytes_fu_498_ap_return_14;
        reg_889 <= grp_SubBytes_fu_498_ap_return_15;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        round_reg_1256 <= round_fu_1002_p2;
        state_0_0_ret2_reg_1171 <= grp_MixColumns_fu_478_ap_return_0;
        state_0_1_ret1_20_reg_1176 <= grp_MixColumns_fu_478_ap_return_1;
        state_0_2_ret1_21_reg_1181 <= grp_MixColumns_fu_478_ap_return_2;
        state_0_3_ret1_22_reg_1186 <= grp_MixColumns_fu_478_ap_return_3;
        state_1_0_ret1_reg_1191 <= grp_MixColumns_fu_478_ap_return_4;
        state_1_1_ret1_23_reg_1196 <= grp_MixColumns_fu_478_ap_return_5;
        state_1_2_ret1_24_reg_1201 <= grp_MixColumns_fu_478_ap_return_6;
        state_1_3_ret1_25_reg_1206 <= grp_MixColumns_fu_478_ap_return_7;
        state_2_0_ret1_reg_1211 <= grp_MixColumns_fu_478_ap_return_8;
        state_2_1_ret2_reg_1216 <= grp_MixColumns_fu_478_ap_return_9;
        state_2_2_ret2_reg_1221 <= grp_MixColumns_fu_478_ap_return_10;
        state_2_3_ret2_reg_1226 <= grp_MixColumns_fu_478_ap_return_11;
        state_3_0_ret2_reg_1231 <= grp_MixColumns_fu_478_ap_return_12;
        state_3_1_ret2_reg_1236 <= grp_MixColumns_fu_478_ap_return_13;
        state_3_2_ret2_reg_1241 <= grp_MixColumns_fu_478_ap_return_14;
        state_3_3_ret2_reg_1246 <= grp_MixColumns_fu_478_ap_return_15;
        zext_ln427_reg_1251[3 : 0] <= zext_ln427_fu_997_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_0_0_load_4_reg_446 <= grp_AddRoundKey_fu_536_ap_return_0;
        state_0_1_load_4_reg_436 <= grp_AddRoundKey_fu_536_ap_return_1;
        state_0_2_load_4_reg_426 <= grp_AddRoundKey_fu_536_ap_return_2;
        state_0_3_load_4_reg_416 <= grp_AddRoundKey_fu_536_ap_return_3;
        state_1_0_load_4_reg_406 <= grp_AddRoundKey_fu_536_ap_return_4;
        state_1_1_load_4_reg_396 <= grp_AddRoundKey_fu_536_ap_return_5;
        state_1_2_load_4_reg_386 <= grp_AddRoundKey_fu_536_ap_return_6;
        state_1_3_load_4_reg_376 <= grp_AddRoundKey_fu_536_ap_return_7;
        state_2_0_load_4_reg_366 <= grp_AddRoundKey_fu_536_ap_return_8;
        state_2_1_load_4_reg_356 <= grp_AddRoundKey_fu_536_ap_return_9;
        state_2_2_load_4_reg_346 <= grp_AddRoundKey_fu_536_ap_return_10;
        state_2_3_load_4_reg_336 <= grp_AddRoundKey_fu_536_ap_return_11;
        state_3_0_load_4_reg_326 <= grp_AddRoundKey_fu_536_ap_return_12;
        state_3_1_load_4_reg_316 <= grp_AddRoundKey_fu_536_ap_return_13;
        state_3_2_load_4_reg_306 <= grp_AddRoundKey_fu_536_ap_return_14;
        state_3_3_load_4_reg_456 <= grp_AddRoundKey_fu_536_ap_return_15;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_0_ce0 = grp_AddRoundKey_fu_536_RoundKey_0_ce0;
    end else begin
        RoundKey_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_10_ce0 = grp_AddRoundKey_fu_536_RoundKey_10_ce0;
    end else begin
        RoundKey_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_11_ce0 = grp_AddRoundKey_fu_536_RoundKey_11_ce0;
    end else begin
        RoundKey_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_12_ce0 = grp_AddRoundKey_fu_536_RoundKey_12_ce0;
    end else begin
        RoundKey_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_13_ce0 = grp_AddRoundKey_fu_536_RoundKey_13_ce0;
    end else begin
        RoundKey_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_14_ce0 = grp_AddRoundKey_fu_536_RoundKey_14_ce0;
    end else begin
        RoundKey_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_15_ce0 = grp_AddRoundKey_fu_536_RoundKey_15_ce0;
    end else begin
        RoundKey_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_1_ce0 = grp_AddRoundKey_fu_536_RoundKey_1_ce0;
    end else begin
        RoundKey_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_2_ce0 = grp_AddRoundKey_fu_536_RoundKey_2_ce0;
    end else begin
        RoundKey_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_3_ce0 = grp_AddRoundKey_fu_536_RoundKey_3_ce0;
    end else begin
        RoundKey_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_4_ce0 = grp_AddRoundKey_fu_536_RoundKey_4_ce0;
    end else begin
        RoundKey_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_5_ce0 = grp_AddRoundKey_fu_536_RoundKey_5_ce0;
    end else begin
        RoundKey_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_6_ce0 = grp_AddRoundKey_fu_536_RoundKey_6_ce0;
    end else begin
        RoundKey_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_7_ce0 = grp_AddRoundKey_fu_536_RoundKey_7_ce0;
    end else begin
        RoundKey_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_8_ce0 = grp_AddRoundKey_fu_536_RoundKey_8_ce0;
    end else begin
        RoundKey_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        RoundKey_9_ce0 = grp_AddRoundKey_fu_536_RoundKey_9_ce0;
    end else begin
        RoundKey_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_round = 6'd10;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_round = zext_ln427_reg_1251;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_round = 6'd0;
    end else begin
        grp_AddRoundKey_fu_536_round = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_0_0_read = reg_799;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_0_0_read = state_0_0_ret2_reg_1171;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_0_0_read = state_0_0_i;
    end else begin
        grp_AddRoundKey_fu_536_state_0_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_0_1_read = reg_829;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_0_1_read = state_0_1_ret1_20_reg_1176;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_0_1_read = state_0_1_i;
    end else begin
        grp_AddRoundKey_fu_536_state_0_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_0_2_read = reg_859;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_0_2_read = state_0_2_ret1_21_reg_1181;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_0_2_read = state_0_2_i;
    end else begin
        grp_AddRoundKey_fu_536_state_0_2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_0_3_read = reg_889;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_0_3_read = state_0_3_ret1_22_reg_1186;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_0_3_read = state_0_3_i;
    end else begin
        grp_AddRoundKey_fu_536_state_0_3_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_1_0_read = reg_823;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_1_0_read = state_1_0_ret1_reg_1191;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_1_0_read = state_1_0_i;
    end else begin
        grp_AddRoundKey_fu_536_state_1_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_1_1_read = reg_853;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_1_1_read = state_1_1_ret1_23_reg_1196;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_1_1_read = state_1_1_i;
    end else begin
        grp_AddRoundKey_fu_536_state_1_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_1_2_read = reg_883;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_1_2_read = state_1_2_ret1_24_reg_1201;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_1_2_read = state_1_2_i;
    end else begin
        grp_AddRoundKey_fu_536_state_1_2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_1_3_read = reg_817;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_1_3_read = state_1_3_ret1_25_reg_1206;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_1_3_read = state_1_3_i;
    end else begin
        grp_AddRoundKey_fu_536_state_1_3_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_2_0_read = reg_847;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_2_0_read = state_2_0_ret1_reg_1211;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_2_0_read = state_2_0_i;
    end else begin
        grp_AddRoundKey_fu_536_state_2_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_2_1_read = reg_877;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_2_1_read = state_2_1_ret2_reg_1216;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_2_1_read = state_2_1_i;
    end else begin
        grp_AddRoundKey_fu_536_state_2_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_2_2_read = reg_811;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_2_2_read = state_2_2_ret2_reg_1221;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_2_2_read = state_2_2_i;
    end else begin
        grp_AddRoundKey_fu_536_state_2_2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_2_3_read = reg_841;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_2_3_read = state_2_3_ret2_reg_1226;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_2_3_read = state_2_3_i;
    end else begin
        grp_AddRoundKey_fu_536_state_2_3_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_3_0_read = reg_871;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_3_0_read = state_3_0_ret2_reg_1231;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_3_0_read = state_3_0_i;
    end else begin
        grp_AddRoundKey_fu_536_state_3_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_3_1_read = reg_805;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_3_1_read = state_3_1_ret2_reg_1236;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_3_1_read = state_3_1_i;
    end else begin
        grp_AddRoundKey_fu_536_state_3_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_3_2_read = reg_835;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_3_2_read = state_3_2_ret2_reg_1241;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_3_2_read = state_3_2_i;
    end else begin
        grp_AddRoundKey_fu_536_state_3_2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_AddRoundKey_fu_536_state_3_3_read = reg_865;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_AddRoundKey_fu_536_state_3_3_read = state_3_3_ret2_reg_1246;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AddRoundKey_fu_536_state_3_3_read = state_3_3_i;
    end else begin
        grp_AddRoundKey_fu_536_state_3_3_read = 'bx;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_0_0_o = grp_MixColumns_fu_478_ap_return_0;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_0_0_o = grp_SubBytes_fu_498_ap_return_0;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_0_0_o = grp_AddRoundKey_fu_536_ap_return_0;
    end else begin
        state_0_0_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_0_0_o_ap_vld = 1'b1;
    end else begin
        state_0_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_0_1_o = grp_MixColumns_fu_478_ap_return_1;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_0_1_o = grp_SubBytes_fu_498_ap_return_5;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_0_1_o = grp_AddRoundKey_fu_536_ap_return_1;
    end else begin
        state_0_1_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_0_1_o_ap_vld = 1'b1;
    end else begin
        state_0_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_0_2_o = grp_MixColumns_fu_478_ap_return_2;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_0_2_o = grp_SubBytes_fu_498_ap_return_10;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_0_2_o = grp_AddRoundKey_fu_536_ap_return_2;
    end else begin
        state_0_2_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_0_2_o_ap_vld = 1'b1;
    end else begin
        state_0_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_0_3_o = grp_MixColumns_fu_478_ap_return_3;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_0_3_o = grp_SubBytes_fu_498_ap_return_15;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_0_3_o = grp_AddRoundKey_fu_536_ap_return_3;
    end else begin
        state_0_3_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_0_3_o_ap_vld = 1'b1;
    end else begin
        state_0_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_1_0_o = grp_MixColumns_fu_478_ap_return_4;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_1_0_o = grp_SubBytes_fu_498_ap_return_4;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_1_0_o = grp_AddRoundKey_fu_536_ap_return_4;
    end else begin
        state_1_0_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_1_0_o_ap_vld = 1'b1;
    end else begin
        state_1_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_1_1_o = grp_MixColumns_fu_478_ap_return_5;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_1_1_o = grp_SubBytes_fu_498_ap_return_9;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_1_1_o = grp_AddRoundKey_fu_536_ap_return_5;
    end else begin
        state_1_1_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_1_1_o_ap_vld = 1'b1;
    end else begin
        state_1_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_1_2_o = grp_MixColumns_fu_478_ap_return_6;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_1_2_o = grp_SubBytes_fu_498_ap_return_14;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_1_2_o = grp_AddRoundKey_fu_536_ap_return_6;
    end else begin
        state_1_2_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_1_2_o_ap_vld = 1'b1;
    end else begin
        state_1_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_1_3_o = grp_MixColumns_fu_478_ap_return_7;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_1_3_o = grp_SubBytes_fu_498_ap_return_3;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_1_3_o = grp_AddRoundKey_fu_536_ap_return_7;
    end else begin
        state_1_3_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_1_3_o_ap_vld = 1'b1;
    end else begin
        state_1_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_2_0_o = grp_MixColumns_fu_478_ap_return_8;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_2_0_o = grp_SubBytes_fu_498_ap_return_8;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_2_0_o = grp_AddRoundKey_fu_536_ap_return_8;
    end else begin
        state_2_0_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_2_0_o_ap_vld = 1'b1;
    end else begin
        state_2_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_2_1_o = grp_MixColumns_fu_478_ap_return_9;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_2_1_o = grp_SubBytes_fu_498_ap_return_13;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_2_1_o = grp_AddRoundKey_fu_536_ap_return_9;
    end else begin
        state_2_1_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_2_1_o_ap_vld = 1'b1;
    end else begin
        state_2_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_2_2_o = grp_MixColumns_fu_478_ap_return_10;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_2_2_o = grp_SubBytes_fu_498_ap_return_2;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_2_2_o = grp_AddRoundKey_fu_536_ap_return_10;
    end else begin
        state_2_2_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_2_2_o_ap_vld = 1'b1;
    end else begin
        state_2_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_2_3_o = grp_MixColumns_fu_478_ap_return_11;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_2_3_o = grp_SubBytes_fu_498_ap_return_7;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_2_3_o = grp_AddRoundKey_fu_536_ap_return_11;
    end else begin
        state_2_3_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_2_3_o_ap_vld = 1'b1;
    end else begin
        state_2_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_3_0_o = grp_MixColumns_fu_478_ap_return_12;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_3_0_o = grp_SubBytes_fu_498_ap_return_12;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_3_0_o = grp_AddRoundKey_fu_536_ap_return_12;
    end else begin
        state_3_0_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_3_0_o_ap_vld = 1'b1;
    end else begin
        state_3_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_3_1_o = grp_MixColumns_fu_478_ap_return_13;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_3_1_o = grp_SubBytes_fu_498_ap_return_1;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_3_1_o = grp_AddRoundKey_fu_536_ap_return_13;
    end else begin
        state_3_1_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_3_1_o_ap_vld = 1'b1;
    end else begin
        state_3_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_3_2_o = grp_MixColumns_fu_478_ap_return_14;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_3_2_o = grp_SubBytes_fu_498_ap_return_6;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_3_2_o = grp_AddRoundKey_fu_536_ap_return_14;
    end else begin
        state_3_2_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_3_2_o_ap_vld = 1'b1;
    end else begin
        state_3_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        state_3_3_o = grp_MixColumns_fu_478_ap_return_15;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_3_3_o = grp_SubBytes_fu_498_ap_return_11;
    end else if ((((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_3_3_o = grp_AddRoundKey_fu_536_ap_return_15;
    end else begin
        state_3_3_o = 'bx;
    end
end

always @ (*) begin
    if ((((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1)))) begin
        state_3_3_o_ap_vld = 1'b1;
    end else begin
        state_3_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln422_fu_895_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_SubBytes_fu_498_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((grp_MixColumns_fu_478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_SubBytes_fu_498_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((grp_AddRoundKey_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign RoundKey_0_address0 = grp_AddRoundKey_fu_536_RoundKey_0_address0;

assign RoundKey_10_address0 = grp_AddRoundKey_fu_536_RoundKey_10_address0;

assign RoundKey_11_address0 = grp_AddRoundKey_fu_536_RoundKey_11_address0;

assign RoundKey_12_address0 = grp_AddRoundKey_fu_536_RoundKey_12_address0;

assign RoundKey_13_address0 = grp_AddRoundKey_fu_536_RoundKey_13_address0;

assign RoundKey_14_address0 = grp_AddRoundKey_fu_536_RoundKey_14_address0;

assign RoundKey_15_address0 = grp_AddRoundKey_fu_536_RoundKey_15_address0;

assign RoundKey_1_address0 = grp_AddRoundKey_fu_536_RoundKey_1_address0;

assign RoundKey_2_address0 = grp_AddRoundKey_fu_536_RoundKey_2_address0;

assign RoundKey_3_address0 = grp_AddRoundKey_fu_536_RoundKey_3_address0;

assign RoundKey_4_address0 = grp_AddRoundKey_fu_536_RoundKey_4_address0;

assign RoundKey_5_address0 = grp_AddRoundKey_fu_536_RoundKey_5_address0;

assign RoundKey_6_address0 = grp_AddRoundKey_fu_536_RoundKey_6_address0;

assign RoundKey_7_address0 = grp_AddRoundKey_fu_536_RoundKey_7_address0;

assign RoundKey_8_address0 = grp_AddRoundKey_fu_536_RoundKey_8_address0;

assign RoundKey_9_address0 = grp_AddRoundKey_fu_536_RoundKey_9_address0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign grp_AddRoundKey_fu_536_ap_start = grp_AddRoundKey_fu_536_ap_start_reg;

assign grp_MixColumns_fu_478_ap_start = grp_MixColumns_fu_478_ap_start_reg;

assign grp_SubBytes_fu_498_ap_start = grp_SubBytes_fu_498_ap_start_reg;

assign icmp_ln422_fu_895_p2 = ((round_0_reg_466 == 4'd10) ? 1'b1 : 1'b0);

assign round_fu_1002_p2 = (round_0_reg_466 + 4'd1);

assign zext_ln427_fu_997_p1 = round_0_reg_466;

always @ (posedge ap_clk) begin
    zext_ln427_reg_1251[5:4] <= 2'b00;
end

endmodule //Cipher
